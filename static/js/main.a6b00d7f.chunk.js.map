{"version":3,"sources":["store/store.ts","utils/dataUtils.ts","mutators/repoMutators.ts","utils/textUtils.ts","components/Dashboard.tsx","components/Footer.tsx","selectors/locationSelectors.ts","components/LocationForm.tsx","selectors/phaseSelectors.ts","components/PhaseQualifierForm.tsx","components/LocationsPhases.tsx","components/PhaseForm.tsx","components/LocationsRegions.tsx","components/LocationsStates.tsx","components/Locations.tsx","actions/authActions.ts","components/Login.tsx","components/AddQualiferForm.tsx","selectors/qualifierSelectors.ts","components/QualifierPanel.tsx","actions/repoActions.ts","components/Review.tsx","components/Translate.tsx","components/App.tsx","selectors/authSelectors.ts","mutators/authMutators.ts","services/loginUserService.ts","services/repoServices.ts","orchestrators/authOrchestrators.ts","orchestrators/repoOrchestrators.ts","index.tsx"],"names":["getAppStore","createStore","isAuthenticated","isAuthorized","accessToken","undefined","username","email","userDisplayName","branches","issues","repoFileData","initRepoFileData","globalFileData","initGlobalFileData","mainBranch","currentLanguage","toggleQualifier","isEditable","pendingChanges","convertCSVDataToObj","csvData","returnObj","forEach","row","stringLabel","Object","keys","find","x","trim","stringId","toLowerCase","setBranchList","mutatorAction","data","store","branch","name","setIssuesList","callback","handleCreatePR","setRepoFileData","customStrings","cdcStateNames","cdcStateLinks","setCurrentLanguage","key","updateLocationList","locationData","isRegion","selectedState","newLocObj","locationName","details","replace","info","content","id","metadata","code_alpha","code_numeric","type","regionType","path","sha","url","strings","vaccination","activePhase","links","eligibility","text","eligibility_plan","eligibilityPlan","providers","workflow","scheduling","scheduling_phone","schedulingPhone","description","createLocationDataObj","location","schedulingPhoneKey","regions","updateLocationData","prevItem","regionObj","value","modifyStateStrings","locationKey","infoKey","item","moreInfoContent","newStringsObj","regionInfo","regionVaccinationObj","phases","copyPhaseData","phase","groupId","qualifications","qualification","question","qualifierId","moreInfoText","affectedPhase","affectedQualifier","push","newObj","oldObj","currPhaseObj","qual","moreInfoUrl","modifyMoreInfoLinks","updateQualifier","oldId","addQualifier","removeQualifier","removeIndex","findIndex","splice","removePhase","phaseId","addPhase","label","updatePhase","setActivePhase","updateGlobalQualifiers","qualifierKey","isNew","qualifierKeyBank","qualifier","split","filter","i","customStringKeys","qKey","length","tagKey","includes","endsWith","substr","translateLocationName","console","log","locKey","toKey","to","toProperCase","res","letter","toUpperCase","startsWith","getLanguageOptions","excludeLanguage","map","getLanguageDisplayText","l","languageCode","Intl","DisplayNames","of","utf8_to_b64","str","btoa","unescape","encodeURIComponent","b64_to_utf8","decodeURIComponent","escape","atob","observer","state","useState","prList","setPRList","issueList","setIssueList","useEffect","tempPRList","tempIssueList","requestUpdate","Date","updated_at","isScrappedIssue","labels","some","pull_request","title","author","user","login","update","toLocaleString","action","prColumns","fieldName","minWidth","isResizable","ariaLabel","onRender","index","column","className","href","html_url","target","rel","FontIcon","iconName","issueColumns","DetailsList","items","columns","setKey","layoutMode","DetailsListLayoutMode","justified","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","checkButtonAriaLabel","checkboxVisibility","style","textAlign","ProgressIndicator","Footer","memo","display","flexDirection","process","Link","children","cursor","marginLeft","marginRight","alignContent","onClick","window","open","getCustomStrings","keyFilter","customStringsList","entries","setInitialData","vacInfo","selectedRegion","returnVal","getRegionCustomStrings","getStateCustomStrings","getStrings","props","onSubmit","onCancel","formData","setFormData","fieldChanges","useRef","regionTypeOptions","region","baseTitle","formTitle","handleRegionChange","useCallback","_ev","current","handleTextChange","ev","canSubmit","TextField","onChange","Dropdown","selectedKey","placeholder","options","PrimaryButton","disabled","DefaultButton","getPhaseQualifierItems","qualifierList","sort","a","b","getExactCustomStrings","rowItems","onRowItemRemove","onRowItemTextChange","onRowItemQualifierChange","phaseTagItems","phaseQualifiers","tagKeys","tagList","getPhaseTagItems","phaseQualifierItems","getPhaseQualifierItemsByKey","filteredQualifierItems","setFilteredQualifierItems","overrideIconFlag","moreInfoKey","regionPhases","currPhase","currQualification","getPhaseMoreInfoTextByKey","setMoreInfoText","getPhaseMoreInfoUrl","setMoreInfoUrl","changedItem","onTagChange","_event","option","q","onQualifierChange","onMoreInfoTextChange","onMoreInfoUrlChange","pointerEvents","visibility","defaultSelectedKey","styles","root","width","IconButton","iconProps","menuIcon","margin","menuProps","isBeakVisible","directionalHint","DirectionalHint","rightTopEdge","aria-label","multiline","autoAdjustHeight","resizable","padding","onBlur","phaseColumns","isMultiline","phaseGroup","setPhaseGroup","phaseGroupItems","setPhaseGroupItems","tempPhaseGroup","tempPhaseGroupItems","currentStateObj","phaseObj","isCollapsed","isActivePhase","startIndex","count","keyId","isActive","String","onAddQualifierClick","newPhaseGroupItems","newPhaseGroup","insertIdx","lastIndexOf","newItem","group","onRemoveRowItem","onToggleCollapse","onChangeRowItemText","currentItem","initItem","calcInfoKey","onChangeRowItemQualifier","indentWidth","groups","groupProps","showEmptyGroups","onRenderHeader","color","onRenderRow","isHeaderVisible","constrainMode","selectionMode","onShouldVirtualize","filteredRegionsList","setFilteredRegionsList","stateRegionsFullList","selectedPhaseItem","setSelectedPhaseItem","useBoolean","isLocationModalOpen","openLocationModal","setTrue","dismissLocationModal","setFalse","isPhaseModalOpen","openPhaseModal","dismissPhaseModal","selectedModalFormItem","onNavigateBack","subLocationsColumns","loc","maxWidth","phaseItemList","setPhaseItemList","selectedStateObj","tempList","valObj","newList","setInitialPhaseItems","selectedPhase","onLocationFormSubmit","onLocationFormOpen","onPhaseFormOpen","onRenderItemColumn","_index","fieldContent","onRegionFilter","indexOf","onItemInvoked","SearchBox","selectionPreservedOnEmptyClick","Modal","isOpen","isModeless","isDarkOverlay","isBlocking","phaseData","idx","onSelectedItem","filteredStateList","setFilteredStateList","stateRepoFullList","selectedLocationItem","locationColumns","stateId","stateNames","stateLabel","onStateFilter","openSelection","setSelectedState","loginUser","tagsOptions","globalQualifiersList","replaceAll","getGlobalQualifierValidationTexts","hasError","setHasError","isAddingTag","setIsAddingTag","handleTagChange","isDuplicate","newQualifier","newQualifierText","isTagDuplicate","newTag","newTagKey","t","disableSubmit","createNewTag","validateOnLoad","onGetErrorMessage","qualifierGroup","setQualifierGroup","qualifierGroupItems","setQualifierGroupItems","isAddQualifierModalOpen","openAddQualifierModal","dismissAddQualifierModal","formItem","groupKeys","questionItemKeys","tempQualifierGroup","tempQualifierGroupItems","contentObj","k","questionGroupKey","groupIdx","obj","onAddQualifierFormOpen","addQualifierSubmit","tag","compact","createPR","fileData","getRepoFileData","initializeGitData","showDashboard","changesList","setChangesList","locationUpdates","setLocationUpdates","globalUpdates","setGlobalUpdates","showLoading","setShowLoading","tempChangesList","tempLocationUpdates","tempGlobalUpdates","JSON","stringify","addChanges","filterDropdownStyles","dropdown","border","fontSize","backgroundColor","caretDown","dropdownOptionText","locationsList","setLocationsList","languageOptions","translateLanguage","setTranslateLanguage","mainLanguage","fromKey","from","onTranslateLanguageChange","rowItem","updateLocationTranslation","val","isPanelOpen","showPanel","hidePanel","setSelectedKey","togglePanel","headerText","exact","icon","rootHovered","rootPressed","e","o","selectors","Persona","size","PersonaSize","size32","hidePersonaDetails","Pivot","onLinkClick","PivotItem","itemKey","MessageBar","setUserAuthData","setUserNoAccess","loginUserService","authResp","firebase","apps","initializeApp","apiKey","authDomain","provider","auth","GithubAuthProvider","addScope","signInWithPopup","response","oauthCreds","credential","displayName","additionalUserInfo","createPath","pathInput","head","tail","getContent","token","fetch","method","headers","Authorization","json","createCSVDataString","languageKeys","contentKeys","result","join","rowValues","lang","repoServices","command","extraData","githubRepoOwner","githubRepoName","Accept","loadAccessResponse","loadBranchesResponse","loadPRResponse","loadIssuesResponse","dataFolderResp","dataFolderObj","policyFolderGitUrl","folder","git_url","loadPolicyFolderResponse","policyFolderData","stateData","tree","element","lastInstance","filePath","substring","fileName","fileType","fileObj","parse","localizationFolderGitUrl","localizationResponse","localizationData","file","customStringsData","cdcStateNamesData","cdcStateLinksData","customStringsDataParse","cdcStateNamesDataParse","cdcStateLinksDataParse","branchName","now","body","ref","commit","createBranchResponse","updateObj","message","locationObj","regionKeys","base","prResp","orchestrator","resp","ok","initializeIcons","ReactDOM","render","StrictMode","basename","document","getElementById","err","error"],"mappings":"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","file":"static/js/main.a6b00d7f.chunk.js","sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { createStore } from 'satcheljs'\nimport { AppState } from './schema/AppState'\n\nexport const getAppState = (): AppState => {\n\treturn {\n\t\tisAuthenticated: false,\n\t\tisAuthorized: true,\n\t\taccessToken: undefined,\n\t\tusername: undefined,\n\t\temail: undefined,\n\t\tuserDisplayName: undefined,\n\t\tbranches: undefined,\n\t\tissues: undefined,\n\t\trepoFileData: undefined,\n\t\tinitRepoFileData: undefined,\n\t\tglobalFileData: undefined,\n\t\tinitGlobalFileData: undefined,\n\t\tmainBranch: undefined,\n\t\tcurrentLanguage: 'en-us',\n\t\ttoggleQualifier: false,\n\t\tisEditable: true,\n\t\tpendingChanges: false\n\t}\n}\n\nexport const getAppStore = createStore<AppState>('appState', getAppState())\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nexport const convertCSVDataToObj = (csvData: any) => {\n\tconst returnObj: any = {}\n\n\tcsvData.forEach((row: any) => {\n\t\tconst stringLabel: string = Object.keys(row).find(\n\t\t\t(x) => x.trim() === 'String ID'\n\t\t) as string\n\t\tconst stringId: string = row[stringLabel]\n\n\t\tdelete row[stringLabel]\n\t\treturnObj[stringId.toLowerCase()] = row\n\t})\n\n\treturn returnObj\n}\n\nexport const createLocationDataObj = (locationData: any) => {\n\tconst locationName = locationData.details.replace(' ', '_').toLowerCase()\n\treturn {\n\t\tinfo: {\n\t\t\tcontent: {\n\t\t\t\tid: locationName,\n\t\t\t\tmetadata: {\n\t\t\t\t\tcode_alpha: locationName,\n\t\t\t\t\tcode_numeric: 0,\n\t\t\t\t},\n\t\t\t\tname: locationData.details,\n\t\t\t\ttype: locationData.regionType,\n\t\t\t},\n\t\t\tname: 'info.json',\n\t\t\tpath: `${locationName}/info.json`,\n\t\t\tsha: '',\n\t\t\ttype: 'info',\n\t\t\turl: '',\n\t\t},\n\t\tstrings: { content: {} },\n\t\tvaccination: {\n\t\t\tcontent: {\n\t\t\t\tactivePhase: '',\n\t\t\t\tlinks: {\n\t\t\t\t\teligibility: {\n\t\t\t\t\t\turl: locationData.eligibility,\n\t\t\t\t\t\ttext: '',\n\t\t\t\t\t},\n\t\t\t\t\teligibility_plan: {\n\t\t\t\t\t\turl: locationData.eligibilityPlan,\n\t\t\t\t\t\ttext: '',\n\t\t\t\t\t},\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\turl: locationData.info,\n\t\t\t\t\t\ttext: `cdc/${locationName}/state_link`,\n\t\t\t\t\t},\n\t\t\t\t\tproviders: {\n\t\t\t\t\t\turl: locationData.providers,\n\t\t\t\t\t\ttext: 'c19.links/vax_providers',\n\t\t\t\t\t},\n\t\t\t\t\tworkflow: {\n\t\t\t\t\t\turl: locationData.workflow,\n\t\t\t\t\t\ttext: 'c19.links/vax_quiz',\n\t\t\t\t\t},\n\t\t\t\t\tscheduling: {\n\t\t\t\t\t\turl: locationData.scheduling,\n\t\t\t\t\t\ttext: 'c19.links/schedule_vax',\n\t\t\t\t\t},\n\t\t\t\t\tscheduling_phone: {\n\t\t\t\t\t\turl: `tel:${locationData.schedulingPhone}`,\n\t\t\t\t\t\ttext: locationData.schedulingPhone,\n\t\t\t\t\t\tdescription: '',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tname: 'vaccination.json',\n\t\t\tpath: `${locationName}/vaccination.json`,\n\t\t\tsha: '',\n\t\t\ttype: 'vaccination',\n\t\t\turl: '',\n\t\t},\n\t}\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { mutatorAction } from 'satcheljs'\nimport { getAppStore } from '../store/store'\nimport { createLocationDataObj } from '../utils/dataUtils'\n\nexport const setBranchList = mutatorAction(\n\t'setBranchList',\n\t(data: any[] | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.branches = data\n\t\t\tconst mainBranch = data.find((branch) => branch.name === 'main')\n\t\t\tstore.mainBranch = mainBranch\n\t\t}\n\t}\n)\n\nexport const setIssuesList = mutatorAction(\n\t'setIssuesList',\n\t(data: any[] | undefined, callback?: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.issues = data\n\t\t\tif (callback) {\n\t\t\t\tcallback()\n\t\t\t}\n\t\t}\n\t}\n)\n\nexport const handleCreatePR = mutatorAction('handleCreatePR', () => {\n\tconst store = getAppStore()\n\tstore.pendingChanges = false\n})\n\nexport const setRepoFileData = mutatorAction(\n\t'setRepoFileData',\n\t(data: any[] | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.repoFileData = data[0]\n\t\t\tstore.initRepoFileData = data[0]\n\t\t\tstore.globalFileData = {\n\t\t\t\tcustomStrings: data[1],\n\t\t\t\tcdcStateNames: data[2],\n\t\t\t\tcdcStateLinks: data[3],\n\t\t\t}\n\t\t\tstore.initGlobalFileData = {\n\t\t\t\tcustomStrings: data[1],\n\t\t\t\tcdcStateNames: data[2],\n\t\t\t\tcdcStateLinks: data[3],\n\t\t\t}\n\t\t}\n\t}\n)\n\nexport const setCurrentLanguage = mutatorAction(\n\t'setCurrentLanguage',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.currentLanguage = data.key\n\t\t}\n\t}\n)\nexport const updateLocationList = mutatorAction(\n\t'updateLocationList',\n\t(locationData: any, isRegion: boolean, selectedState?: any) => {\n\t\tif (locationData) {\n\t\t\tconst store = getAppStore()\n\t\t\tconst newLocObj = createLocationDataObj(locationData)\n\t\t\tstore.pendingChanges = true\n\n\t\t\tif (!isRegion) {\n\t\t\t\tstore.globalFileData.cdcStateNames.content[\n\t\t\t\t\t`cdc/${newLocObj.info.content.id}/state_name`\n\t\t\t\t] = {\n\t\t\t\t\t'en-us': locationData.details,\n\t\t\t\t\t'es-us': locationData.details,\n\t\t\t\t\t'vi-vn': locationData.details,\n\t\t\t\t}\n\n\t\t\t\tconst schedulingPhoneKey: string = `c19.link/scheduling.phone.${newLocObj.info.content.id}`.toLowerCase()\n\t\t\t\tnewLocObj.strings.content = {\n\t\t\t\t\t[schedulingPhoneKey]: {\n\t\t\t\t\t\t[store.currentLanguage]: locationData.schedulingPhone,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tnewLocObj.vaccination.content.links.scheduling_phone.text = schedulingPhoneKey\n\n\t\t\t\tstore.repoFileData[newLocObj.info.content.id] = newLocObj\n\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t} else {\n\t\t\t\tconst location = store.repoFileData[selectedState.key]\n\t\t\t\tnewLocObj.info.path = `${selectedState.key}/regions/${newLocObj.info.path}`\n\t\t\t\tnewLocObj.vaccination.path = `${selectedState.key}/regions/${newLocObj.vaccination.path}`\n\n\t\t\t\tconst schedulingPhoneKey: string = `c19.link/scheduling.phone.${newLocObj.info.content.id}`.toLowerCase()\n\n\t\t\t\tlocation.strings.content[schedulingPhoneKey] = {\n\t\t\t\t\t[store.currentLanguage]: locationData.schedulingPhone,\n\t\t\t\t}\n\t\t\t\tnewLocObj.vaccination.content.links.scheduling_phone.text = schedulingPhoneKey\n\n\t\t\t\tif (location.regions) {\n\t\t\t\t\tlocation.regions[newLocObj.info.content.id] = newLocObj\n\t\t\t\t} else {\n\t\t\t\t\tlocation.regions = {\n\t\t\t\t\t\t[newLocObj.info.content.id]: newLocObj,\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t}\n\t\t}\n\t}\n)\n\nexport const updateLocationData = mutatorAction(\n\t'updateLocationData',\n\t(\n\t\tlocationData: any,\n\t\tisRegion: boolean,\n\t\tprevItem: any,\n\t\tselectedState?: any\n\t) => {\n\t\tif (locationData) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\t\t\tif (!isRegion) {\n\t\t\t\tconst location = store.repoFileData[prevItem.key]\n\n\t\t\t\tstore.globalFileData.cdcStateNames.content[\n\t\t\t\t\t`cdc/${prevItem.key}/state_name`\n\t\t\t\t] = {\n\t\t\t\t\t'en-us': locationData.details,\n\t\t\t\t\t'es-us': locationData.details,\n\t\t\t\t\t'vi-vn': locationData.details,\n\t\t\t\t}\n\n\t\t\t\tlocation.info.content.name = locationData.details\n\t\t\t\tconst schedulingPhoneKey = `c19.link/scheduling.phone.${prevItem.value.info.content.metadata.code_alpha}`.toLowerCase()\n\t\t\t\tlocation.strings.content[schedulingPhoneKey] = {\n\t\t\t\t\t[store.currentLanguage]: locationData.schedulingPhone,\n\t\t\t\t}\n\n\t\t\t\tlocation.vaccination.content.links = {\n\t\t\t\t\teligibility: {\n\t\t\t\t\t\turl: locationData.eligibility,\n\t\t\t\t\t},\n\t\t\t\t\teligibility_plan: {\n\t\t\t\t\t\turl: locationData.eligibilityPlan,\n\t\t\t\t\t},\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\turl: locationData.info,\n\t\t\t\t\t\ttext: `cdc/${prevItem.key}/state_link`,\n\t\t\t\t\t},\n\t\t\t\t\tproviders: {\n\t\t\t\t\t\turl: locationData.providers,\n\t\t\t\t\t\ttext: 'c19.links/vax_providers',\n\t\t\t\t\t},\n\t\t\t\t\tworkflow: {\n\t\t\t\t\t\turl: locationData.workflow,\n\t\t\t\t\t\ttext: 'c19.links/vax_quiz',\n\t\t\t\t\t},\n\t\t\t\t\tscheduling: {\n\t\t\t\t\t\turl: locationData.scheduling,\n\t\t\t\t\t\ttext: 'c19.links/schedule_vax',\n\t\t\t\t\t},\n\t\t\t\t\tscheduling_phone: {\n\t\t\t\t\t\turl: `tel:${locationData.schedulingPhone}`,\n\t\t\t\t\t\ttext: schedulingPhoneKey,\n\t\t\t\t\t\tdescription: '',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst location = store.repoFileData[selectedState.key]\n\t\t\t\tconst regionObj = location.regions[prevItem.key]\n\t\t\t\tregionObj.info.content.name = locationData.details\n\n\t\t\t\tconst schedulingPhoneKey = `c19.link/scheduling.phone.${regionObj.info.content.id}`.toLowerCase()\n\t\t\t\tlocation.strings.content[schedulingPhoneKey] = {\n\t\t\t\t\t[store.currentLanguage]: locationData.schedulingPhone,\n\t\t\t\t}\n\n\t\t\t\tregionObj.vaccination.content.links = {\n\t\t\t\t\teligibility: {\n\t\t\t\t\t\turl: locationData.eligibility,\n\t\t\t\t\t},\n\t\t\t\t\teligibility_plan: {\n\t\t\t\t\t\turl: locationData.eligibilityPlan,\n\t\t\t\t\t},\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\turl: locationData.info,\n\t\t\t\t\t\ttext: `cdc/${selectedState.key}/state_link`,\n\t\t\t\t\t},\n\t\t\t\t\tproviders: {\n\t\t\t\t\t\turl: locationData.providers,\n\t\t\t\t\t\ttext: 'c19.links/vax_providers',\n\t\t\t\t\t},\n\t\t\t\t\tworkflow: {\n\t\t\t\t\t\turl: locationData.workflow,\n\t\t\t\t\t\ttext: 'c19.links/vax_quiz',\n\t\t\t\t\t},\n\t\t\t\t\tscheduling: {\n\t\t\t\t\t\turl: locationData.scheduling,\n\t\t\t\t\t\ttext: 'c19.links/schedule_vax',\n\t\t\t\t\t},\n\t\t\t\t\tscheduling_phone: {\n\t\t\t\t\t\turl: `tel:${locationData.schedulingPhone}`,\n\t\t\t\t\t\ttext: schedulingPhoneKey,\n\t\t\t\t\t\tdescription: '',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const modifyStateStrings = mutatorAction(\n\t'modifyStateStrings',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.repoFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.repoFileData[data.locationKey]\n\t\t\t\tif (!location.strings?.content[data.infoKey]) {\n\t\t\t\t\tconst newStringsObj: any = {}\n\t\t\t\t\tnewStringsObj[store.currentLanguage] = data.item.moreInfoContent\n\t\t\t\t\tlocation.strings.content[data.infoKey] = newStringsObj\n\t\t\t\t\tif (!data.regionInfo) {\n\t\t\t\t\t\tconst affectedPhase = location.vaccination.content.phases.find(\n\t\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconst affectedQualifier = affectedPhase.qualifications.find(\n\t\t\t\t\t\t\t(qualification: any) =>\n\t\t\t\t\t\t\t\tqualification.question.toLowerCase() ===\n\t\t\t\t\t\t\t\tdata.item.qualifierId.toLowerCase()\n\t\t\t\t\t\t)\n\t\t\t\t\t\tif (affectedQualifier) {\n\t\t\t\t\t\t\taffectedQualifier.moreInfoText = data.infoKey\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taffectedPhase.qualifications.push({\n\t\t\t\t\t\t\t\tquestion: data.item.qualifierId,\n\t\t\t\t\t\t\t\tmoreInfoText: data.infoKey,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst regionVaccinationObj =\n\t\t\t\t\t\t\tlocation.regions[data.regionInfo.key].vaccination\n\n\t\t\t\t\t\tif (!regionVaccinationObj.content?.phases) {\n\t\t\t\t\t\t\tcopyPhaseData(regionVaccinationObj, location.vaccination)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst affectedPhase = regionVaccinationObj.content.phases.find(\n\t\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconst affectedQualifier = affectedPhase.qualifications.find(\n\t\t\t\t\t\t\t(qualification: any) =>\n\t\t\t\t\t\t\t\tqualification.question.toLowerCase() ===\n\t\t\t\t\t\t\t\tdata.item.qualifierId.toLowerCase()\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\taffectedQualifier.moreInfoText = data.infoKey\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlocation.strings.content[data.infoKey][store.currentLanguage] =\n\t\t\t\t\t\tdata.item.moreInfoContent\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n)\n\nconst copyPhaseData = (newObj: any, oldObj: any) => {\n\tnewObj.content['phases'] = []\n\toldObj.content.phases.forEach((phase: any) => {\n\t\tconst currPhaseObj: any = {}\n\t\tcurrPhaseObj['id'] = phase.id\n\t\tcurrPhaseObj['qualifications'] = []\n\t\tphase.qualifications.forEach((qual: any) => {\n\t\t\tcurrPhaseObj.qualifications.push({\n\t\t\t\tquestion: qual.question.toLowerCase(),\n\t\t\t\tmoreInfoText: qual.moreInfoText?.toLowerCase(),\n\t\t\t\tmoreInfoUrl: qual.moreInfoUrl,\n\t\t\t})\n\t\t})\n\n\t\tnewObj.content.phases.push(currPhaseObj)\n\t})\n}\n\nexport const modifyMoreInfoLinks = mutatorAction(\n\t'modifyMoreInfoLinks',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.repoFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.repoFileData[data.locationKey]\n\t\t\t\tif (data.regionInfo) {\n\t\t\t\t\tconst regionVaccinationObj =\n\t\t\t\t\t\tlocation.regions[data.regionInfo.key].vaccination\n\t\t\t\t\tif (!regionVaccinationObj.content?.phases) {\n\t\t\t\t\t\tcopyPhaseData(regionVaccinationObj, location.vaccination)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst affectedPhase = regionVaccinationObj.content.phases.find(\n\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t)\n\n\t\t\t\t\tif (affectedPhase) {\n\t\t\t\t\t\tconst affectedQualifier = affectedPhase.qualifications.find(\n\t\t\t\t\t\t\t(qualification: any) =>\n\t\t\t\t\t\t\t\tqualification.question.toLowerCase() ===\n\t\t\t\t\t\t\t\tdata.item.qualifierId.toLowerCase()\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tif (affectedQualifier) {\n\t\t\t\t\t\t\taffectedQualifier.moreInfoUrl = data.item.moreInfoUrl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst affectedPhase = location.vaccination.content.phases.find(\n\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t)\n\t\t\t\t\tconst affectedQualifier = affectedPhase.qualifications.find(\n\t\t\t\t\t\t(qualification: any) =>\n\t\t\t\t\t\t\tqualification.question.toLowerCase() ===\n\t\t\t\t\t\t\tdata.item.qualifierId.toLowerCase()\n\t\t\t\t\t)\n\t\t\t\t\tif (affectedQualifier) {\n\t\t\t\t\t\taffectedQualifier.moreInfoUrl = data.item.moreInfoUrl\n\t\t\t\t\t} else {\n\t\t\t\t\t\taffectedPhase.qualifications.push({\n\t\t\t\t\t\t\tquestion: data.item.qualifierId,\n\t\t\t\t\t\t\tmoreInfoUrl: data.item.moreInfoUrl,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n)\n\nexport const updateQualifier = mutatorAction(\n\t'updateQualifier',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.repoFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.repoFileData[data.locationKey]\n\n\t\t\t\tif (data.regionInfo) {\n\t\t\t\t\tconst regionVaccinationObj =\n\t\t\t\t\t\tlocation.regions[data.regionInfo.key].vaccination\n\t\t\t\t\tif (!regionVaccinationObj.content?.phases) {\n\t\t\t\t\t\tcopyPhaseData(regionVaccinationObj, location.vaccination)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst affectedPhase = regionVaccinationObj.content.phases.find(\n\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t)\n\n\t\t\t\t\tconst affectedQualifier = affectedPhase.qualifications.find(\n\t\t\t\t\t\t(qualification: any) =>\n\t\t\t\t\t\t\tqualification.question.toLowerCase() === data.oldId.toLowerCase()\n\t\t\t\t\t)\n\t\t\t\t\tif (affectedQualifier) {\n\t\t\t\t\t\taffectedQualifier.question = data.item.qualifierId.toLowerCase()\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst affectedPhase = location.vaccination.content.phases.find(\n\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t)\n\n\t\t\t\t\tconst affectedQualifier = affectedPhase.qualifications.find(\n\t\t\t\t\t\t(qualification: any) =>\n\t\t\t\t\t\t\tqualification.question.toLowerCase() === data.oldId.toLowerCase()\n\t\t\t\t\t)\n\t\t\t\t\tif (affectedQualifier) {\n\t\t\t\t\t\taffectedQualifier.question = data.item.qualifierId.toLowerCase()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n)\nexport const addQualifier = mutatorAction(\n\t'addQualifier',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.repoFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.repoFileData[data.locationKey]\n\n\t\t\t\tif (data.regionInfo) {\n\t\t\t\t\tconst regionVaccinationObj =\n\t\t\t\t\t\tlocation.regions[data.regionInfo.key].vaccination\n\t\t\t\t\tif (!regionVaccinationObj.content?.phases) {\n\t\t\t\t\t\tcopyPhaseData(regionVaccinationObj, location.vaccination)\n\t\t\t\t\t}\n\t\t\t\t\tconst affectedPhase = regionVaccinationObj.content.phases.find(\n\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t)\n\n\t\t\t\t\taffectedPhase.qualifications.push({\n\t\t\t\t\t\tquestion: data.item.qualifierId,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconst affectedPhase = location.vaccination.content.phases.find(\n\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t)\n\n\t\t\t\t\taffectedPhase.qualifications.push({\n\t\t\t\t\t\tquestion: data.item.qualifierId,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n)\nexport const removeQualifier = mutatorAction(\n\t'removeQualifier',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.repoFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.repoFileData[data.locationKey]\n\n\t\t\t\tif (data.regionInfo) {\n\t\t\t\t\tconst regionVaccinationObj =\n\t\t\t\t\t\tlocation.regions[data.regionInfo.key].vaccination\n\t\t\t\t\tif (!regionVaccinationObj.content?.phases) {\n\t\t\t\t\t\tcopyPhaseData(regionVaccinationObj, location.vaccination)\n\t\t\t\t\t}\n\t\t\t\t\tconst affectedPhase = regionVaccinationObj.content.phases.find(\n\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t)\n\n\t\t\t\t\tconst removeIndex = affectedPhase.qualifications.findIndex(\n\t\t\t\t\t\t(qualification: any) =>\n\t\t\t\t\t\t\tqualification.question.toLowerCase() ===\n\t\t\t\t\t\t\tdata.item.qualifierId.toLowerCase()\n\t\t\t\t\t)\n\t\t\t\t\taffectedPhase.qualifications.splice(removeIndex, 1)\n\t\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t\t} else {\n\t\t\t\t\tconst affectedPhase = location.vaccination.content.phases.find(\n\t\t\t\t\t\t(phase: any) => phase.id === data.item.groupId\n\t\t\t\t\t)\n\n\t\t\t\t\tconst removeIndex = affectedPhase.qualifications.findIndex(\n\t\t\t\t\t\t(qualification: any) =>\n\t\t\t\t\t\t\tqualification.question.toLowerCase() ===\n\t\t\t\t\t\t\tdata.item.qualifierId.toLowerCase()\n\t\t\t\t\t)\n\t\t\t\t\taffectedPhase.qualifications.splice(removeIndex, 1)\n\t\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n)\nexport const removePhase = mutatorAction(\n\t'removePhase',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.repoFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.repoFileData[data.locationKey]\n\n\t\t\t\tif (data.regionInfo) {\n\t\t\t\t\tconst regionVaccinationObj =\n\t\t\t\t\t\tlocation.regions[data.regionInfo.key].vaccination\n\t\t\t\t\tif (!regionVaccinationObj.content?.phases) {\n\t\t\t\t\t\tcopyPhaseData(regionVaccinationObj, location.vaccination)\n\t\t\t\t\t}\n\t\t\t\t\tconst removeIndex = regionVaccinationObj.content.phases.findIndex(\n\t\t\t\t\t\t(phase: any) => phase.id === data.phaseId\n\t\t\t\t\t)\n\n\t\t\t\t\tregionVaccinationObj.content.phases.splice(removeIndex, 1)\n\t\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t\t} else {\n\t\t\t\t\tconst removeIndex = location.vaccination.content.phases.findIndex(\n\t\t\t\t\t\t(phase: any) => phase.id === data.phaseId\n\t\t\t\t\t)\n\n\t\t\t\t\tlocation.vaccination.content.phases.splice(removeIndex, 1)\n\t\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n)\n\nexport const addPhase = mutatorAction('addPhase', (data: any | undefined) => {\n\tif (data) {\n\t\tconst store = getAppStore()\n\t\tif (store?.repoFileData) {\n\t\t\tstore.pendingChanges = true\n\t\t\tconst location = store.repoFileData[data.locationKey]\n\n\t\t\tconst phaseId = data.item.name.replace(/\\s/g, '').toLowerCase()\n\n\t\t\tconst emptyQualifications: any = []\n\n\t\t\tif (!location.vaccination.content.phases) {\n\t\t\t\tlocation.vaccination.content.phases = []\n\t\t\t}\n\n\t\t\tlocation.vaccination.content.phases.push({\n\t\t\t\tid: phaseId,\n\t\t\t\tlabel: data.item.name,\n\t\t\t\tqualifications: emptyQualifications,\n\t\t\t})\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n})\n\nexport const updatePhase = mutatorAction(\n\t'updatePhase',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.repoFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.repoFileData[data.locationKey]\n\t\t\t\tconst phaseId = data.item.phaseId\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.replace(' (active)', '')\n\t\t\t\t\t.trim()\n\n\t\t\t\tconst affectedPhase = location.vaccination.content.phases.find(\n\t\t\t\t\t(phase: any) => phase.id === phaseId\n\t\t\t\t)\n\n\t\t\t\taffectedPhase.label = data.item.name\n\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t}\n\t\t}\n\t}\n)\nexport const setActivePhase = mutatorAction(\n\t'setActivePhase',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.repoFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.repoFileData[data.locationKey]\n\n\t\t\t\tif (data.regionInfo) {\n\t\t\t\t\tconst regionVaccinationObj =\n\t\t\t\t\t\tlocation.regions[data.regionInfo.key].vaccination\n\t\t\t\t\tregionVaccinationObj.content['activePhase'] = data.phaseId\n\t\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t\t} else {\n\t\t\t\t\tlocation.vaccination.content['activePhase'] = data.phaseId\n\t\t\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n)\n\nexport const updateGlobalQualifiers = mutatorAction(\n\t'updateGlobalQualifiers',\n\t(item: any | undefined) => {\n\t\tif (item) {\n\t\t\tconst store = getAppStore()\n\t\t\tconst { customStrings } = store.globalFileData\n\t\t\tstore.pendingChanges = true\n\t\t\tlet qualifierKey = ''\n\n\t\t\tif (item.isNew) {\n\t\t\t\tconst qualifierKeyBank = item.qualifier\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.replace(/[^A-Za-z0-9]/g, '_')\n\t\t\t\t\t.split('_')\n\t\t\t\t\t.filter((i: string) => i) as string[]\n\n\t\t\t\tconst customStringKeys = Object.keys(customStrings.content)\n\n\t\t\t\tlet qKey = ''\n\t\t\t\tfor (let i = 0; i < qualifierKeyBank.length; i++) {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tqKey = qualifierKeyBank[0]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tqKey = `${qKey}_${qualifierKeyBank[i]}`\n\t\t\t\t\t}\n\t\t\t\t\tqualifierKey = `c19.eligibility.question/${item.tagKey.toLowerCase()}.${qKey}`\n\n\t\t\t\t\tif (!customStringKeys.includes(qualifierKey)) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tqualifierKey = qualifierKey.endsWith('_')\n\t\t\t\t\t? qualifierKey.substr(0, qualifierKey.length - 1)\n\t\t\t\t\t: qualifierKey\n\t\t\t} else {\n\t\t\t\tqualifierKey = item.key\n\t\t\t}\n\n\t\t\tstore.globalFileData.customStrings.content[qualifierKey] = {\n\t\t\t\t...store.globalFileData.customStrings.content[qualifierKey],\n\t\t\t\t[store.currentLanguage]: item.qualifier,\n\t\t\t}\n\n\t\t\tstore.globalFileData = { ...store.globalFileData }\n\t\t}\n\t}\n)\n\nexport const translateLocationName = mutatorAction(\n\t'translateLocationName',\n\t(item: any) => {\n\t\tconsole.log(item)\n\t\tif (item) {\n\t\t\tconst store = getAppStore()\n\t\t\tif (store?.globalFileData) {\n\t\t\t\tstore.pendingChanges = true\n\t\t\t\tconst location = store.globalFileData.cdcStateNames.content[item.locKey]\n\t\t\t\tlocation[item.toKey] = item.to\n\n\t\t\t\tstore.globalFileData = { ...store.globalFileData }\n\n\t\t\t\tconsole.log(store.globalFileData.cdcStateNames.content)\n\t\t\t}\n\t\t}\n\t}\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nexport const toProperCase = (text: string): string => {\n\tconst res = text\n\t\t.replace(/_/g, ' ')\n\t\t.toLowerCase()\n\t\t.replace(/\\b[a-z](?=[a-z]{2})/g, function (letter) {\n\t\t\treturn letter.toUpperCase()\n\t\t})\n\n\tif (res.startsWith('us ')) {\n\t\treturn res.replace('us ', 'US ')\n\t}\n\treturn res\n}\n\nexport const getLanguageKeys = () => {\n\treturn 'en-us,ko-kr,vi-vn,zh-cn,es-us,de-de,es-es,fi-fi,fr-fr,he-il,it-it,ja-jp,pt-pt,sv-se,th-th'.split(\n\t\t','\n\t)\n}\n\nexport const getLanguageOptions = (excludeLanguage?: string) => {\n\tconst languageKeys = 'en-us,ko-kr,vi-vn,zh-cn,es-us,de-de,es-es,fi-fi,fr-fr,he-il,it-it,ja-jp,pt-pt,sv-se,th-th'.split(\n\t\t','\n\t)\n\n\treturn languageKeys.map((key) => {\n\t\treturn {\n\t\t\tkey: key,\n\t\t\ttext: getLanguageDisplayText(key, key),\n\t\t}\n\t}).filter(l => l.key !== excludeLanguage)\n}\n\nexport const getLanguageDisplayText = (\n\tcurrentLanguage: string,\n\tlanguageCode: string\n): string => {\n\t// @ts-expect-error DisplayNames not on Intl\n\tconst languageName = new Intl.DisplayNames([currentLanguage], {\n\t\ttype: 'language',\n\t})\n\treturn languageName.of(languageCode)\n}\n\nexport const utf8_to_b64 = (str: string): string => {\n\treturn btoa(unescape(encodeURIComponent(str)))\n}\n\nexport const b64_to_utf8 = (str: string): string => {\n\treturn decodeURIComponent(escape(atob(str)))\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n import {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tProgressIndicator,\n\tIColumn,\n\tFontIcon\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect } from 'react'\nimport { getAppStore } from '../store/store'\n\n\n\nimport './Dashboard.scss'\n\nexport default observer(function Dashboard() {\n\n\tconst state = getAppStore()\n\n\tconst [prList, setPRList] = useState<any[]>([])\n\tconst [issueList, setIssueList] = useState<any[]>([])\n\n\n\tuseEffect(() => { \n\t\tif(state.issues){\n\n\t\t\tconst tempPRList:any = [];\n\t\t\tconst tempIssueList:any = [];\n\t\t\tstate.issues.forEach( (item:any) => {\n\n\t\t\t\tconst requestUpdate:Date = new Date(item.updated_at);\n\t\t\t\tconst isScrappedIssue = item.labels.some( (x:any) => x.name.toLowerCase() === \"scrapped changes\" )\n\n\t\t\t\tif(item.pull_request){\n\n\t\t\t\t\ttempPRList.push({ title:item.title, author:item.user.login, update:requestUpdate.toLocaleString(), action:item});\n\t\t\t\t} \n\t\t\t\telse if (isScrappedIssue){\n\t\t\t\t\ttempIssueList.push({ title:item.title, author:item.user.login, update:requestUpdate.toLocaleString(), action:item});\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tsetPRList(tempPRList);\n\t\t\tsetIssueList(tempIssueList);\n\n\t\t}\n\n\n\t},[state.issues])\n\n\tconst onIssueActionRender =  (item?: any, index?: number, column?: IColumn) =>  {\n\n\t\treturn (<a className=\"tableActionLink\" href={item?.action?.html_url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\tView</a>)\n\n\t};\n\n\n\tconst onPRActionRender =  (item?: any, index?: number, column?: IColumn) =>  {\n\n\t\treturn (<a className=\"tableActionLink\" href={item?.action?.html_url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\tApprove</a>)\n\n\t};\n\n\tconst prColumns = [\n\t\t{\n\t\t\tkey: 'titleCol',\n\t\t\tname: 'Title',\n\t\t\tfieldName: 'title',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'authorCol',\n\t\t\tname: 'Author',\n\t\t\tfieldName: 'author',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'updateCol',\n\t\t\tname: 'Last Update',\n\t\t\tfieldName: 'update',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'actionCol',\n\t\t\tname: '',\n\t\t\tariaLabel:'Actions Column',\n\t\t\tfieldName: 'action',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t\tonRender: onPRActionRender\n\t\t},\n\t];\n\n\tconst issueColumns = [\n\t\t{\n\t\t\tkey: 'titleCol',\n\t\t\tname: 'Title',\n\t\t\tfieldName: 'title',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'authorCol',\n\t\t\tname: 'Author',\n\t\t\tfieldName: 'author',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'updateCol',\n\t\t\tname: 'Last Update',\n\t\t\tfieldName: 'update',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'actionCol',\n\t\t\tname: '',\n\t\t\tariaLabel:'Actions Column',\n\t\t\tfieldName: 'action',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t\tonRender: onIssueActionRender\n\t\t},\n\n\t];\n\n\treturn (\n\t\t<div className=\"dashboardPageWrapper\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t<div className=\"breadCrumbs\">/ Dashboard</div>\n\t\t\t\t\t\t<div className=\"mainTitle\">Dashboard</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t{ state.issues ? (\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t<div className=\"sectionHeader\">Pending PRs</div>\n\t\t\t\t\t\t<div className=\"sectionContent\">\n\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\titems={prList}\n\t\t\t\t\t\t\tcolumns={prColumns}\n\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\tariaLabelForSelectionColumn=\"Toggle selection\"\n\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n\t\t\t\t\t\t\tcheckButtonAriaLabel=\"Row checkbox\"\n\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ !prList.length && (\n\t\t\t\t\t\t\t<div style={{textAlign:\"center\"}}>No pending PRs at this time.</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sectionHeader\">Location Updates</div>\n\t\t\t\t\t\t<div className=\"sectionContent\">\n\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\titems={issueList}\n\t\t\t\t\t\t\tcolumns={issueColumns}\n\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\tariaLabelForSelectionColumn=\"Toggle selection\"\n\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n\t\t\t\t\t\t\tcheckButtonAriaLabel=\"Row checkbox\"\n\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ !issueList.length && (\n\t\t\t\t\t\t\t<div style={{textAlign:\"center\"}}>No pending location updates at this time.</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>):(\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<ProgressIndicator description=\"Loading content...\" />\n\t\t\t\t\t</section>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { FC, memo } from 'react'\n\nconst CONTACT_EMAIL = process.env.REACT_APP_CONTACT_US_EMAIL\nconst CODE_OF_CONDUCT_URL = process.env.REACT_APP_CODE_OF_CONDUCT_URL\n\nexport const Footer: FC = memo(function Footer() {\n\treturn (\n\t\t<div style={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t<div className=\"appFooterRow\">\n\t\t\t\t<Link href=\"https://go.microsoft.com/fwlink/?LinkId=521839\">\n\t\t\t\t\tPrivacy &amp; Cookies\n\t\t\t\t</Link>\n\t\t\t\t{' | '}\n\t\t\t\t<Link href={`mailto:${CONTACT_EMAIL}`}>Contact Us</Link>\n\t\t\t\t{' | '}\n\t\t\t\t<Link href={CODE_OF_CONDUCT_URL}>Code of Conduct</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nconst Link: FC<{\n\thref?: string\n}> = memo(function Link({ children, href }) {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"div\"\n\t\t\tstyle={{\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tmarginLeft: 15,\n\t\t\t\tmarginRight: 15,\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignContent: 'center',\n\t\t\t}}\n\t\t\tonClick={() => href && window.open(href, '_blank')}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getAppStore } from '../store/store'\n\nexport const getStateCustomStrings = (\n\tselectedState: any,\n\tkeyFilter: string\n): string => {\n\tconst returnVal = getCustomStrings(selectedState.value, keyFilter)\n\tif (returnVal.length > 0) return returnVal[0].text\n\n\treturn ''\n}\n\nexport const getRegionCustomStrings = (\n\tselectedRegion: any,\n\tkeyFilter: string\n): string => {\n\tconst { repoFileData } = getAppStore()\n\tconst selectedState =\n\t\trepoFileData?.[selectedRegion.value.info.path.split('/')[0]]\n\n\tconst returnVal = getCustomStrings(selectedState, keyFilter)\n\tif (returnVal.length > 0) return returnVal[0].text\n\n\treturn ''\n}\n\nconst getCustomStrings = (selectedState: any, keyFilter: string): any[] => {\n\tconst { globalFileData, currentLanguage } = getAppStore()\n\n\tconst customStringsList: any[] = selectedState\n\t\t? [\n\t\t\t\t...Object.entries(selectedState?.strings?.content ?? {}),\n\t\t\t\t...Object.entries(globalFileData.customStrings.content),\n\t\t  ]\n\t\t: [...Object.entries(globalFileData.customStrings.content)]\n\tconst filteredList = keyFilter\n\t\t? customStringsList.filter(([key, _value]: [string, any]) =>\n\t\t\t\tkey.includes(keyFilter.toLowerCase())\n\t\t  )\n\t\t: customStringsList\n\n\treturn filteredList.map(([key, value]: [string, any]) => {\n\t\treturn {\n\t\t\tkey: key,\n\t\t\ttext: value[currentLanguage],\n\t\t}\n\t})\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tPrimaryButton,\n\tDefaultButton,\n\tTextField,\n\tDropdown,\n\tIDropdownOption,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useRef, useState } from 'react'\nimport {\n\tgetStateCustomStrings,\n\tgetRegionCustomStrings,\n} from '../selectors/locationSelectors'\n\nimport './LocationForm.scss'\n\nexport interface LocationFormProp {\n\titem?: any\n\tonSubmit?: (locationData: any, prevItem:any) => void\n\tonCancel?: () => void\n\tisRegion?: boolean\n}\n\nconst setInitialData = (item?: any, isRegion?: boolean) => {\n\tconst getStrings = (item: any, keyFilter: string, isRegion?: boolean) => {\n\t\treturn isRegion\n\t\t\t? getRegionCustomStrings(item, keyFilter)\n\t\t\t: getStateCustomStrings(item, keyFilter)\n\t}\n\n\tif (item) {\n\t\tconst { info, vaccination } = item?.value || {}\n\t\tconst { info: vacInfo, scheduling_phone, eligibility_plan, workflow, scheduling, providers, eligibility } =\n\t\t\tvaccination?.content?.links || {}\n\n\t\treturn {\n\t\t\tdetails: info.content.name,\n\t\t\tregionType: info.content.type,\n\t\t\tinfo: vacInfo?.url || '',\n\t\t\tworkflow: workflow?.url || '',\n\t\t\tscheduling: scheduling?.url ||'',\n\t\t\tproviders: providers?.url || '',\n\t\t\teligibility: eligibility?.url || '',\n\t\t\teligibilityPlan: eligibility_plan?.url || '',\n\t\t\tschedulingPhone: scheduling_phone?.text\n\t\t\t\t? getStrings(item, scheduling_phone.text, isRegion)\n\t\t\t\t: '',\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tdetails: '',\n\t\t\tregionType: '',\n\t\t\tinfo: '',\n\t\t\tworkflow: '',\n\t\t\tscheduling: '',\n\t\t\tproviders: '',\n\t\t\teligibility: '',\n\t\t\teligibilityPlan: '',\n\t\t\tschedulingPhone: '',\n\t\t}\n\t}\n}\n\nexport default observer(function LocationForm(props: LocationFormProp) {\n    const { onSubmit, onCancel, item, isRegion } = props\n    const [formData, setFormData] = useState<any>(setInitialData(item, isRegion))\n    const fieldChanges = useRef<any>(formData)\n    const regionTypeOptions = [\n        {\n            key: 'state',\n            text: 'State'\n        },{\n            key: 'territory',\n            text: 'Territory'\n        },{\n            key: 'tribal_land',\n            text: 'Tribal land'\n        },{\n            key: 'county',\n            text: 'County'\n        },{\n            key: 'city',\n            text: 'City'\n        }\n    ].filter(region => isRegion ? region.key !== 'state' : true)\n\n    const baseTitle = isRegion ? 'sublocation' : 'location'\n    const formTitle = item ? `Edit ${baseTitle}` : `Add new ${baseTitle}`\n\n\tconst handleRegionChange = useCallback(\n\t\t(_ev: any, item?: IDropdownOption) => {\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\tregionType: item?.key,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst canSubmit = useCallback(() => {\n\t\treturn formData.details !== '' && formData.regionType !== ''\n\t},[formData])\n\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">{formTitle}</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<div className=\"detailsGroup\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel=\"Details\"\n\t\t\t\t\t\tname=\"details\"\n\t\t\t\t\t\tvalue={formData.details}\n\t\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tselectedKey={formData.regionType}\n\t\t\t\t\t\tplaceholder=\"Region type\"\n\t\t\t\t\t\toptions={regionTypeOptions}\n\t\t\t\t\t\tonChange={handleRegionChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"General information link for the region:\"\n\t\t\t\t\tname=\"info\"\n\t\t\t\t\tvalue={formData.info}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Link to an existing eligibility workflow tool:\"\n\t\t\t\t\tname=\"workflow\"\n\t\t\t\t\tvalue={formData.workflow}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Appointment registration scheduler:\"\n\t\t\t\t\tname=\"scheduling\"\n\t\t\t\t\tvalue={formData.scheduling}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"List of scheduling providers and locations:\"\n\t\t\t\t\tname=\"providers\"\n\t\t\t\t\tvalue={formData.providers}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Eligibility criteria about the current phase:\"\n\t\t\t\t\tname=\"eligibility\"\n\t\t\t\t\tvalue={formData.eligibility}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Documentation describing the rollout phases in detail:\"\n\t\t\t\t\tname=\"eligibilityPlan\"\n\t\t\t\t\tvalue={formData.eligibilityPlan}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"A scheduling hotline:\"\n\t\t\t\t\tname=\"schedulingPhone\"\n\t\t\t\t\tvalue={formData.schedulingPhone}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton text=\"Submit\" disabled={!canSubmit()} onClick={() => onSubmit?.(formData, item)} />\n\t\t\t\t<DefaultButton text=\"Cancel\" onClick={() => onCancel?.()} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getAppStore } from '../store/store'\nimport { toProperCase } from '../utils/textUtils'\n\nexport const getPhaseQualifierItems = (selectedState?: any) => {\n    return getCustomStrings(selectedState, 'eligibility.question')\n}\n\nexport const getPhaseQualifierItemsByKey = (selectedState?: any, selectedKey?: any) => {\n    return getPhaseQualifierItems(selectedState).filter(qualifier => qualifier.key.includes(selectedKey))\n}\n\nexport const getPhaseTagItems = (selectedState?: any) => {\n    const phaseQualifiers = getPhaseQualifierItems(selectedState);\n\n    const tagKeys: any[] = []\n    const tagList: any[] = []\n    phaseQualifiers.forEach(qualifier => {\n        const baseKey = qualifier.key.split('/')\n        const tagKey = baseKey[1].split('.')[0];\n\n        if (!tagKeys.includes(tagKey)) {\n            tagKeys.push(tagKey)\n            tagList.push({\n                key: tagKey,\n                text: toProperCase(tagKey)\n            })\n        }\n    })\n\n    return tagList.sort((a,b) => (a.text > b.text) ? 1 : -1)\n}\n\nexport const getPhaseMoreInfoItems = (selectedState?: any) => {\n    return getCustomStrings(selectedState, 'eligibility.moreinfo')\n}\n\nexport const getPhaseMoreInfoTextByKey = (selectedState?: any, selectedKey?: any) => {\n    if (selectedKey) {\n        const res = getExactCustomStrings(selectedState, selectedKey)\n        if (res.length > 0) {\n            return res[0].text\n        }\n    }\n\n    return ''\n}\nexport const getPhaseMoreInfoUrl = (isRegion:boolean, rowItems:any) => {\n        if(isRegion){\n        const regionPhases = rowItems.item.location.value.vaccination.content.phases\n        const currPhase = regionPhases?.find((phase: { id: any }) => phase.id === rowItems.item.groupId)\n        if (currPhase){\n            const currQualification = currPhase?.qualifications.find((qualification: { question: any }) => qualification.question === rowItems.item.qualifierId)\n            if (currQualification) {\n                return currQualification.moreInfoUrl \n            }\n        }\n        }\n        return rowItems.item.moreInfoUrl\n    }\nconst getCustomStrings = (selectedState?: any, keyFilter?: string) => {\n    const { globalFileData, currentLanguage } = getAppStore();\n    const qualifierList: any[] = selectedState\n        ? [...Object.entries(selectedState.value?.strings?.content ?? {}), ...Object.entries(globalFileData.customStrings.content)]\n        : [...Object.entries(globalFileData.customStrings.content)]\n\n    const filteredList = keyFilter ? qualifierList.filter(([key, _value]:[string, any]) => key.includes(keyFilter)) : qualifierList\n    return filteredList\n        .map(([key, value]:[string, any]) => {\n            return {\n                key: key,\n                text: value[currentLanguage]\n            }\n        })\n        .sort((a,b) => (a.text > b.text) ? 1 : -1)\n}\n\nconst getExactCustomStrings = (selectedState?: any, keyFilter?: string) => {\n    const { globalFileData, currentLanguage } = getAppStore();\n    const qualifierList: any[] = selectedState\n        ? [...Object.entries(selectedState.value?.strings?.content ?? {}), ...Object.entries(globalFileData.customStrings.content)]\n        : [...Object.entries(globalFileData.customStrings.content)]\n\n    const filteredList = keyFilter ? qualifierList.filter(([key, _value]:[string, any]) => key.toLowerCase() === keyFilter) : qualifierList\n    return filteredList\n        .map(([key, value]:[string, any]) => {\n            return {\n                key: key,\n                text: value[currentLanguage]\n            }\n        })\n        .sort((a,b) => (a.text > b.text) ? 1 : -1)\n}","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tIconButton,\n\tDropdown,\n\tDirectionalHint,\n\tTextField,\n\tIDetailsRowProps,\n\tFontIcon,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useState, useRef } from 'react'\nimport {\n\tgetPhaseTagItems,\n\tgetPhaseQualifierItems,\n\tgetPhaseMoreInfoTextByKey,\n\tgetPhaseQualifierItemsByKey,\n\tgetPhaseMoreInfoUrl,\n} from '../selectors/phaseSelectors'\n\nimport './PhaseQualifierForm.scss'\nexport interface PhaseQualifierFormProps {\n\tselectedState: any\n\trowItems: IDetailsRowProps\n\tisEditable: boolean\n\tisRegion: boolean\n\tonRowItemRemove?: (item: any) => void\n\tonRowItemTextChange: (item: any, prevItem: any) => void\n\tonRowItemQualifierChange: (item: any, prevItem: any) => void\n}\n\nexport default observer(function PhaseQualiferForm(\n\tprops: PhaseQualifierFormProps\n) {\n\tconst {\n\t\tselectedState,\n\t\trowItems,\n\t\tisEditable,\n\t\tisRegion,\n\t\tonRowItemRemove,\n\t\tonRowItemTextChange,\n\t\tonRowItemQualifierChange,\n\t} = props\n\tconst phaseTagItems = useRef(getPhaseTagItems(selectedState))\n\tconst phaseQualifierItems = useRef(getPhaseQualifierItems(selectedState))\n\tconst [filteredQualifierItems, setFilteredQualifierItems] = useState<any[]>(\n\t\tgetPhaseQualifierItemsByKey(selectedState, rowItems.item.tagKey)\n\t)\n\n\tlet overrideIconFlag = false\n\tlet moreInfoKey = rowItems.item.moreInfoKey\n\tif (isRegion) {\n\t\tconst regionPhases = rowItems.item.location.value.vaccination.content.phases\n\t\tconst currPhase = regionPhases?.find(\n\t\t\t(phase: { id: any }) => phase.id === rowItems.item.groupId\n\t\t)\n\t\tif (currPhase) {\n\t\t\tconst currQualification = currPhase?.qualifications.find(\n\t\t\t\t(qualification: { question: any }) =>\n\t\t\t\t\tqualification.question === rowItems.item.qualifierId\n\t\t\t)\n\t\t\tif (currQualification) {\n\t\t\t\toverrideIconFlag = true\n\t\t\t\tmoreInfoKey = currQualification.moreInfoText\n\t\t\t}\n\t\t}\n\t}\n\n\tconst [moreInfoText, setMoreInfoText] = useState<string>(\n\t\tgetPhaseMoreInfoTextByKey(selectedState, moreInfoKey)\n\t)\n\n\tconst [moreInfoUrl, setMoreInfoUrl] = useState<string>(\n\t\tgetPhaseMoreInfoUrl(isRegion, rowItems)\n\t)\n\n\tconst changedItem = useRef<any>(rowItems.item)\n\tchangedItem.current.moreInfoContent = moreInfoText\n\n\tconst onTagChange = useCallback(\n\t\t(_event, option) => {\n\t\t\tsetFilteredQualifierItems(\n\t\t\t\tphaseQualifierItems.current.filter(\n\t\t\t\t\t(q) => q.key.split('/')[1].split('.')[0] === option.key\n\t\t\t\t)\n\t\t\t)\n\t\t\tsetMoreInfoText('')\n\t\t\tsetMoreInfoUrl('')\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tkey: `${rowItems.item.groupId}-c19.eligibility.question/${option.key}`,\n\t\t\t\t\ttagKey: option.key,\n\t\t\t\t\tqualifierId: undefined,\n\t\t\t\t\ttext: '',\n\t\t\t\t\tmoreInfoKey: '',\n\t\t\t\t\tmoreInfoContent: '',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\t[phaseQualifierItems, rowItems]\n\t)\n\n\tconst onQualifierChange = useCallback(\n\t\t(_event, option) => {\n\t\t\tsetMoreInfoText('')\n\t\t\tsetMoreInfoUrl('')\n\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tqualifierId: option.key,\n\t\t\t\t\ttext: option.text,\n\t\t\t\t\tmoreInfoKey: '',\n\t\t\t\t\tmoreInfoContent: '',\n\t\t\t\t},\n\t\t\t}\n\t\t\tonRowItemQualifierChange(changedItem.current, rowItems.item)\n\t\t},\n\t\t[onRowItemQualifierChange, rowItems]\n\t)\n\n\tconst onMoreInfoTextChange = useCallback(\n\t\t(_event, value) => {\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tmoreInfoContent: value,\n\t\t\t\t},\n\t\t\t}\n\t\t\tsetMoreInfoText(value)\n\t\t},\n\t\t[setMoreInfoText]\n\t)\n\n\tconst onMoreInfoUrlChange = useCallback(\n\t\t(_event, value) => {\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tmoreInfoUrl: value,\n\t\t\t\t},\n\t\t\t}\n\t\t\tsetMoreInfoUrl(value)\n\t\t},\n\t\t[setMoreInfoUrl]\n\t)\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"phaseDetailRow\"\n\t\t\tstyle={{ pointerEvents: isEditable ? 'unset' : 'none' }}\n\t\t>\n\t\t\t<div className=\"mainRow\">\n\t\t\t\t<FontIcon\n\t\t\t\t\ticonName=\"InfoSolid\"\n\t\t\t\t\tclassName=\"infoIcon\"\n\t\t\t\t\tstyle={{ visibility: overrideIconFlag ? 'visible' : 'hidden' }}\n\t\t\t\t/>\n\t\t\t\t<Dropdown\n\t\t\t\t\toptions={phaseTagItems.current}\n\t\t\t\t\tdefaultSelectedKey={rowItems.item.tagKey}\n\t\t\t\t\tplaceholder=\"Tag\"\n\t\t\t\t\tclassName=\"tagDropdown\"\n\t\t\t\t\tstyles={{ root: { minWidth: 250 } }}\n\t\t\t\t\tonChange={onTagChange}\n\t\t\t\t/>\n\t\t\t\t<Dropdown\n\t\t\t\t\toptions={filteredQualifierItems}\n\t\t\t\t\tdefaultSelectedKey={rowItems.item.qualifierId}\n\t\t\t\t\tplaceholder=\"Qualifier\"\n\t\t\t\t\tstyles={{ root: { width: '100%', minWidth: 0 } }}\n\t\t\t\t\tonChange={onQualifierChange}\n\t\t\t\t/>\n\t\t\t\t<IconButton\n\t\t\t\t\ticonProps={{ iconName: 'MoreVertical' }}\n\t\t\t\t\tstyles={{ menuIcon: { visibility: 'hidden', width: 0, margin: 0 } }}\n\t\t\t\t\tmenuProps={{\n\t\t\t\t\t\tisBeakVisible: false,\n\t\t\t\t\t\tdirectionalHint: DirectionalHint.rightTopEdge,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'removeRow',\n\t\t\t\t\t\t\t\ttext: 'Remove',\n\t\t\t\t\t\t\t\tonClick: () => onRowItemRemove?.(rowItems.item),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'details',\n\t\t\t\t\t\t\t\ttext: 'Details',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}}\n\t\t\t\t\ttitle=\"More\"\n\t\t\t\t\taria-label=\"More\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"detailsRow\">\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder=\"More info text\"\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={true}\n\t\t\t\t\tresizable={false}\n\t\t\t\t\tstyles={{ root: { width: 'calc(100% - 32px)', padding: '5px 0' } }}\n\t\t\t\t\tvalue={moreInfoText}\n\t\t\t\t\tonChange={onMoreInfoTextChange}\n\t\t\t\t\tonBlur={() => onRowItemTextChange(changedItem.current, rowItems.item)}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder=\"More info url\"\n\t\t\t\t\tstyles={{ root: { width: 'calc(100% - 32px)', padding: '5px 0' } }}\n\t\t\t\t\tvalue={moreInfoUrl}\n\t\t\t\t\tonChange={onMoreInfoUrlChange}\n\t\t\t\t\tonBlur={() => onRowItemTextChange(changedItem.current, rowItems.item)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tIDetailsGroupRenderProps,\n\tIGroup,\n\tFontIcon,\n\tIGroupDividerProps,\n\tIDetailsListProps,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect, useCallback } from 'react'\nimport {\n\tmodifyStateStrings,\n\tmodifyMoreInfoLinks,\n\tsetActivePhase,\n\tupdateQualifier,\n\taddQualifier,\n\tremoveQualifier,\n\tremovePhase,\n} from '../mutators/repoMutators'\nimport { getAppStore } from '../store/store'\nimport PhaseQualifierForm from './PhaseQualifierForm'\n\nimport './Locations.scss'\n\nexport interface LocationsPhasesProp {\n\tisRegion: boolean\n\tvalue: any\n\tselectedState: any\n}\n\nconst phaseColumns = [\n\t{\n\t\tkey: 'question',\n\t\tname: 'Question',\n\t\tfieldName: 'text',\n\t\tminWidth: 200,\n\t\tisResizable: false,\n\t\tisMultiline: true,\n\t},\n]\n\nexport default observer(function LocationsPhases(props: LocationsPhasesProp) {\n\tconst {\n\t\tglobalFileData,\n\t\tcurrentLanguage,\n\t\trepoFileData,\n\t\tisEditable,\n\t} = getAppStore()\n\tconst { isRegion, value, selectedState } = props\n\n\tconst [phaseGroup, setPhaseGroup] = useState<IGroup[]>([])\n\tconst [phaseGroupItems, setPhaseGroupItems] = useState<any[]>([])\n\n\tuseEffect(() => {\n\t\tif (repoFileData) {\n\t\t\tconst tempPhaseGroup: IGroup[] = []\n\t\t\tconst tempPhaseGroupItems: any[] = []\n\t\t\tconst currentStateObj: any = repoFileData[selectedState.key]\n\t\t\tlet phaseObj = currentStateObj.vaccination.content.phases\n\t\t\tconst regionObj = isRegion\n\t\t\t\t? repoFileData[selectedState.key].regions[value.key]\n\t\t\t\t: null\n\n\t\t\tif (isRegion && regionObj.vaccination.content.phases) {\n\t\t\t\tphaseObj = regionObj.vaccination.content.phases\n\t\t\t}\n\n\t\t\tphaseObj.forEach((phase: any) => {\n\t\t\t\tconst isCollapsed: boolean = !isRegion && value.value.id !== phase.id\n\n\t\t\t\tlet isActivePhase = false\n\t\t\t\tif (isRegion && regionObj.vaccination.content.activePhase) {\n\t\t\t\t\tisActivePhase = phase.id === regionObj.vaccination.content.activePhase\n\t\t\t\t} else {\n\t\t\t\t\tisActivePhase =\n\t\t\t\t\t\tphase.id === currentStateObj.vaccination.content.activePhase\n\t\t\t\t}\n\n\t\t\t\ttempPhaseGroup.push({\n\t\t\t\t\tkey: phase.id + tempPhaseGroup.length,\n\t\t\t\t\tname: phase.label,\n\t\t\t\t\tstartIndex: tempPhaseGroupItems.length,\n\t\t\t\t\tcount: phase.qualifications.length,\n\t\t\t\t\tisCollapsed: isCollapsed,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tkeyId: phase.id,\n\t\t\t\t\t\tisActive: isActivePhase,\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tphase.qualifications.forEach((qualification: any) => {\n\t\t\t\t\tconst keyId: string = String(qualification.question).toLowerCase()\n\t\t\t\t\tlet label = `*Translation not found* (${keyId})`\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tcurrentStateObj.strings &&\n\t\t\t\t\t\tcurrentStateObj.strings.content[keyId]\n\t\t\t\t\t) {\n\t\t\t\t\t\tlabel =\n\t\t\t\t\t\t\tcurrentStateObj.strings.content[keyId][currentLanguage] || label\n\t\t\t\t\t} else if (globalFileData.customStrings.content[keyId]) {\n\t\t\t\t\t\tlabel =\n\t\t\t\t\t\t\tglobalFileData.customStrings.content[keyId][currentLanguage] ||\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t}\n\n\t\t\t\t\ttempPhaseGroupItems.push({\n\t\t\t\t\t\tkey: phase.id + '-' + keyId + '-' + tempPhaseGroupItems.length,\n\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\tmoreInfoKey: qualification?.moreInfoText\n\t\t\t\t\t\t\t? qualification.moreInfoText.toLowerCase()\n\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\tmoreInfoContent: '',\n\t\t\t\t\t\tmoreInfoUrl: qualification.moreInfoUrl,\n\t\t\t\t\t\tqualifierId: keyId,\n\t\t\t\t\t\ttagKey: keyId.split('/')[1].split('.')[0],\n\t\t\t\t\t\tgroupId: phase.id,\n\t\t\t\t\t\tlocation: value,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tsetPhaseGroup(tempPhaseGroup)\n\t\t\tsetPhaseGroupItems(tempPhaseGroupItems)\n\t\t}\n\t}, [repoFileData, globalFileData, selectedState, currentLanguage, isRegion, value])\n\n\tconst onAddQualifierClick = useCallback(\n\t\t(phaseId: any) => {\n\t\t\tconst newPhaseGroupItems: any[] = []\n\t\t\tconst newPhaseGroup: any[] = []\n\t\t\tconst insertIdx =\n\t\t\t\tphaseGroupItems\n\t\t\t\t\t.map((i) => i.key.startsWith(phaseId))\n\t\t\t\t\t.lastIndexOf(true) + 1\n\n\t\t\tconst newItem = {\n\t\t\t\tkey: `${phaseId}-c19.eligibility.question/new_qualifier`,\n\t\t\t\ttext: '',\n\t\t\t\tmoreInfoKey: '',\n\t\t\t\tmoreInfoUrl: '',\n\t\t\t\tqualifierId: 'c19.eligibility.question/new_qualifier',\n\t\t\t\ttagKey: 'new_tagKey',\n\t\t\t\tgroupId: phaseId,\n\t\t\t\tlocation: value,\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < phaseGroupItems.length; i++) {\n\t\t\t\tif (i === insertIdx) {\n\t\t\t\t\tnewPhaseGroupItems.push(newItem)\n\t\t\t\t\tnewPhaseGroupItems.push(phaseGroupItems[i])\n\t\t\t\t} else {\n\t\t\t\t\tnewPhaseGroupItems.push(phaseGroupItems[i])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (insertIdx === phaseGroupItems.length) {\n\t\t\t\tnewPhaseGroupItems.push(newItem)\n\t\t\t}\n\n\t\t\tphaseGroup.forEach((group) => {\n\t\t\t\tnewPhaseGroup.push({\n\t\t\t\t\t...group,\n\t\t\t\t\t...{\n\t\t\t\t\t\tstartIndex: newPhaseGroupItems.findIndex(\n\t\t\t\t\t\t\t(i) => i.groupId === group.data.keyId\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcount: newPhaseGroupItems.filter(\n\t\t\t\t\t\t\t(i) => i.groupId === group.data.keyId\n\t\t\t\t\t\t).length,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tsetPhaseGroup(newPhaseGroup)\n\t\t\tsetPhaseGroupItems(newPhaseGroupItems)\n\t\t},\n\t\t[phaseGroupItems, phaseGroup, value]\n\t)\n\n\tconst onRemoveRowItem = (item: any) => {\n\t\tremoveQualifier({\n\t\t\tlocationKey: selectedState.key,\n\t\t\titem: item,\n\t\t\tregionInfo: isRegion ? value : null,\n\t\t})\n\t}\n\n\tconst onRemovePhaseGroupClick = (phaseId: any) => {\n\t\tremovePhase({\n\t\t\tlocationKey: selectedState.key,\n\t\t\tphaseId: phaseId,\n\t\t\tregionInfo: isRegion ? value : null,\n\t\t})\n\t}\n\n\tconst onSetActivePhase = (phaseId: string) => {\n\t\tsetActivePhase({\n\t\t\tlocationKey: selectedState.key,\n\t\t\tphaseId: phaseId,\n\t\t\tregionInfo: isRegion ? value : null,\n\t\t})\n\t}\n\n\tconst onRenderHeader: IDetailsGroupRenderProps['onRenderHeader'] = (\n\t\tprops\n\t) => {\n\t\tif (props?.group) {\n\t\t\tconst { group } = props\n\t\t\treturn (\n\t\t\t\t<div className=\"phaseGroupHeader\">\n\t\t\t\t\t<div className=\"groupHeaderLabel\" onClick={onToggleCollapse(props)}>\n\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\ticonName={group.isCollapsed ? 'ChevronRight' : 'ChevronDown'}\n\t\t\t\t\t\t\tclassName=\"groupToggleIcon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{group.name ? (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{group.name} <small>({group.data.keyId})</small>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t`Phase ${group.data.keyId}`\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"groupHeaderButtons\">\n\t\t\t\t\t\t{isEditable ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"addQualifierGroup\"\n\t\t\t\t\t\t\t\t\tonClick={() => onAddQualifierClick(group.data.keyId)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\tAdd Qualifier\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"removePhaseGroup\"\n\t\t\t\t\t\t\t\t\tonClick={() => onRemovePhaseGroupClick(group.data.keyId)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"Blocked2Solid\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#d13438' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{group.data.isActive ? (\n\t\t\t\t\t\t\t\t\t<div className=\"activeGroup\">\n\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleFill\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\tActive Phase\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName=\"activeGroup\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => onSetActivePhase(group.data.keyId)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleRing\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\tSet as Active\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{group.data.isActive && (\n\t\t\t\t\t\t\t\t\t<div className=\"activeGroup\">\n\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleFill\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\tActive Phase\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn null\n\t}\n\n\tconst onToggleCollapse = (props: IGroupDividerProps): (() => void) => {\n\t\treturn () => {\n\t\t\tprops!.onToggleCollapse!(props!.group!)\n\t\t}\n\t}\n\n\tconst onChangeRowItemText = (currentItem: any, initItem: any) => {\n\t\tif (\n\t\t\tinitItem.moreInfoUrl?.toLowerCase() !==\n\t\t\tcurrentItem.moreInfoUrl?.toLowerCase()\n\t\t) {\n\t\t\tmodifyMoreInfoLinks({\n\t\t\t\tlocationKey: selectedState.key,\n\t\t\t\titem: currentItem,\n\t\t\t\tregionInfo: isRegion ? value : null,\n\t\t\t})\n\t\t} else if (initItem.moreInfoContent !== currentItem.moreInfoContent) {\n\t\t\tlet calcInfoKey = currentItem.qualifierId.replace('question', 'moreinfo')\n\t\t\tcalcInfoKey += `.${selectedState.value.info.content.metadata.code_alpha.toLowerCase()}`\n\t\t\tif (isRegion) {\n\t\t\t\tcalcInfoKey += `.${value.name.toLowerCase()}`\n\t\t\t}\n\t\t\tcalcInfoKey += `.${currentItem.groupId}`\n\n\t\t\tmodifyStateStrings({\n\t\t\t\tinfoKey: calcInfoKey,\n\t\t\t\tlocationKey: selectedState.key,\n\t\t\t\titem: currentItem,\n\t\t\t\tregionInfo: isRegion ? value : null,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst onChangeRowItemQualifier = (currentItem: any, initItem: any) => {\n\t\tif (initItem.qualifierId !== 'c19.eligibility.question/new_qualifier') {\n\t\t\tupdateQualifier({\n\t\t\t\toldId: initItem.qualifierId,\n\t\t\t\tlocationKey: selectedState.key,\n\t\t\t\titem: currentItem,\n\t\t\t\tregionInfo: isRegion ? value : null,\n\t\t\t})\n\t\t} else {\n\t\t\taddQualifier({\n\t\t\t\tlocationKey: selectedState.key,\n\t\t\t\titem: currentItem,\n\t\t\t\tregionInfo: isRegion ? value : null,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst onRenderRow: IDetailsListProps['onRenderRow'] = (props) => {\n\t\tif (props) {\n\t\t\treturn (\n\t\t\t\t<PhaseQualifierForm\n\t\t\t\t\trowItems={props}\n\t\t\t\t\tselectedState={selectedState}\n\t\t\t\t\tisEditable={isEditable}\n\t\t\t\t\tisRegion={isRegion}\n\t\t\t\t\tonRowItemRemove={onRemoveRowItem}\n\t\t\t\t\tonRowItemTextChange={onChangeRowItemText}\n\t\t\t\t\tonRowItemQualifierChange={onChangeRowItemQualifier}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"phaseGridContainer\">\n\t\t\t<DetailsList\n\t\t\t\tindentWidth={0}\n\t\t\t\titems={phaseGroupItems}\n\t\t\t\tgroups={phaseGroup}\n\t\t\t\tcolumns={phaseColumns}\n\t\t\t\tgroupProps={{\n\t\t\t\t\tshowEmptyGroups: true,\n\t\t\t\t\tonRenderHeader: onRenderHeader,\n\t\t\t\t}}\n\t\t\t\tonRenderRow={onRenderRow}\n\t\t\t\tisHeaderVisible={false}\n\t\t\t\tcheckboxVisibility={2}\n\t\t\t\tconstrainMode={1}\n\t\t\t\tselectionMode={1}\n\t\t\t\tonShouldVirtualize={() => false}\n\t\t\t/>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tPrimaryButton,\n    DefaultButton,\n    TextField\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useRef, useState } from 'react'\n\nimport './LocationForm.scss'\n\nexport interface PhaseFormProp {\n    item?: any\n    onSubmit?: (phaseData: any) => void\n    onCancel?: () => void\n}\n\nconst setInitialData = (item: any) => {\n    if (item) {\n        return {\n            phaseId: item.keyId,\n            name: item.name.includes(' (active)') ? item.name.replace(' (active)','') : item.name,\n            isActive: item.keyId.includes(' (active)')\n        }\n    } else {\n        return {\n            phaseId: null,\n            name: '',\n            isActive: false\n        }\n    }\n}\n\nexport default observer(function PhaseForm(props: PhaseFormProp) {\n    const { onSubmit, onCancel, item } = props\n    const [formData, setFormData] = useState<any>(setInitialData(item))\n    const fieldChanges = useRef<any>(formData)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst formTitle = item ? 'Edit Phase' : 'New Phase'\n\n    return (\n        <div className=\"modalWrapper\">\n            <div className=\"modalHeader\">\n                <div className=\"title\">{formTitle}</div>\n            </div>\n            <div className=\"modalBody\">\n                <TextField\n                    label=\"Phase Name:\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleTextChange}\n                />\n            </div>\n            <div className=\"modalFooter\">\n                <PrimaryButton text=\"Submit\" disabled={formData.name === ''} onClick={() => onSubmit?.(formData)} />\n                <DefaultButton text=\"Cancel\" onClick={() => onCancel?.()}/>\n            </div>\n        </div>\n    )\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tIColumn,\n\tFontIcon,\n\tModal,\n\tSearchBox,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useRef, useEffect, useCallback } from 'react'\nimport {\n\tupdateLocationList,\n\taddPhase,\n\tupdatePhase,\n\tupdateLocationData,\n} from '../mutators/repoMutators'\nimport { getAppStore } from '../store/store'\nimport { toProperCase } from '../utils/textUtils'\nimport LocationForm from './LocationForm'\nimport LocationsPhases from './LocationsPhases'\nimport PhaseForm from './PhaseForm'\n\nimport './Locations.scss'\n\nexport interface LocationsRegionsProp {\n\tselectedState: any\n\tonNavigateBack: () => void\n}\n\nexport default observer(function LocationsRegions(props: LocationsRegionsProp) {\n\tconst [filteredRegionsList, setFilteredRegionsList] = useState<any[]>([])\n\tconst stateRegionsFullList = useRef<any[]>([])\n\tconst [selectedPhaseItem, setSelectedPhaseItem] = useState<{\n\t\tisRegion: boolean\n\t\tvalue: any\n\t\tselectedState: any\n\t}>({ isRegion: false, value: null, selectedState: null })\n\tconst [\n\t\tisLocationModalOpen,\n\t\t{ setTrue: openLocationModal, setFalse: dismissLocationModal },\n\t] = useBoolean(false)\n\tconst [\n\t\tisPhaseModalOpen,\n\t\t{ setTrue: openPhaseModal, setFalse: dismissPhaseModal },\n\t] = useBoolean(false)\n\tconst selectedModalFormItem = useRef<any>(null)\n\n\tconst state = getAppStore()\n\n\tconst { selectedState, onNavigateBack } = props\n\n\tconst subLocationsColumns = [\n\t\t{\n\t\t\tkey: 'regionCol',\n\t\t\tname: 'Region',\n\t\t\tfieldName: 'name',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'activePhaseCol',\n\t\t\tname: 'Active Phase ID',\n\t\t\tfieldName: 'phase',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editLocation',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter((loc) => (state.isEditable ? true : loc.key !== 'editCol'))\n\n\tconst phaseColumns = [\n\t\t{\n\t\t\tkey: 'idCol',\n\t\t\tname: 'Phase ID',\n\t\t\tfieldName: 'keyId',\n\t\t\tminWidth: 50,\n\t\t\tmaxWidth: 200,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'nameCol',\n\t\t\tname: 'Name',\n\t\t\tfieldName: 'name',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'qualCol',\n\t\t\tname: '# of qualifications',\n\t\t\tfieldName: 'qualifications',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editPhase',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter((loc) => (state.isEditable ? true : loc.key !== 'editCol'))\n\n\tconst [phaseItemList, setPhaseItemList] = useState<any[]>([])\n\n\tuseEffect(() => {\n\t\tconst selectedStateObj = state.repoFileData[selectedState.key]\n\t\tconst regions = selectedStateObj?.regions ?? {}\n\t\tif (Object.keys(regions).length > 0) {\n\t\t\tconst tempList: any[] = []\n\t\t\tObject.entries(regions).forEach(([key, value]) => {\n\t\t\t\tconst valObj = value as any\n\t\t\t\ttempList.push({\n\t\t\t\t\tkey: key,\n\t\t\t\t\tname: toProperCase(valObj.info.content.name),\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tphase: valObj.vaccination.content.activePhase\n\t\t\t\t\t\t? valObj.vaccination.content.activePhase\n\t\t\t\t\t\t: selectedStateObj.vaccination.content.activePhase,\n\t\t\t\t})\n\t\t\t})\n\t\t\tsetFilteredRegionsList(tempList)\n\t\t\tstateRegionsFullList.current = tempList\n\t\t}\n\n\t\tif (selectedStateObj) {\n\t\t\tconst newList = setInitialPhaseItems({\n\t\t\t\tkey: selectedStateObj.info.content.id,\n\t\t\t\tvalue: selectedStateObj,\n\t\t\t})\n\t\t\tsetPhaseItemList(newList)\n\t\t}\n\t}, [state.repoFileData, selectedState, stateRegionsFullList, setPhaseItemList])\n\n\tconst selectedPhase = useCallback(\n\t\t(isRegion: boolean, value: any) => {\n\t\t\tsetSelectedPhaseItem({ isRegion, value, selectedState })\n\t\t},\n\t\t[selectedState]\n\t)\n\n\tconst onLocationFormSubmit = useCallback(\n\t\t(locationData, prevItem) => {\n\t\t\tdismissLocationModal()\n\t\t\tif (!prevItem) {\n\t\t\t\tupdateLocationList(locationData, true, selectedState)\n\t\t\t} else {\n\t\t\t\tupdateLocationData(locationData, true, prevItem, selectedState)\n\t\t\t}\n\t\t},\n\t\t[dismissLocationModal, selectedState]\n\t)\n\n\tconst onLocationFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedModalFormItem.current = item ?? null\n\t\t\topenLocationModal()\n\t\t},\n\t\t[openLocationModal]\n\t)\n\n\tconst onPhaseFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedModalFormItem.current = item ?? null\n\t\t\topenPhaseModal()\n\t\t},\n\t\t[openPhaseModal]\n\t)\n\n\tconst onRenderItemColumn = useCallback(\n\t\t(item?: any, _index?: number, column?: IColumn) => {\n\t\t\tconst fieldContent = item[column?.fieldName as keyof any] as string\n\n\t\t\tif (column?.key === 'editCol') {\n\t\t\t\treturn state.isEditable ? (\n\t\t\t\t\t<FontIcon\n\t\t\t\t\t\ticonName=\"Edit\"\n\t\t\t\t\t\tclassName=\"editIcon\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tcolumn?.fieldName === 'editLocation'\n\t\t\t\t\t\t\t\t? onLocationFormOpen(item)\n\t\t\t\t\t\t\t\t: onPhaseFormOpen(item)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t} else {\n\t\t\t\treturn <span>{fieldContent}</span>\n\t\t\t}\n\t\t},\n\t\t[onLocationFormOpen, onPhaseFormOpen, state.isEditable]\n\t)\n\n\tconst onRegionFilter = useCallback(\n\t\t(_event: any, text?: string | undefined) => {\n\t\t\tif (text) {\n\t\t\t\tsetFilteredRegionsList(\n\t\t\t\t\tstateRegionsFullList.current.filter(\n\t\t\t\t\t\t(region) => region.name.toLowerCase().indexOf(text) > -1\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tsetFilteredRegionsList(stateRegionsFullList.current)\n\t\t\t}\n\t\t},\n\t\t[stateRegionsFullList]\n\t)\n\n\tconst onPhaseFormSubmit = (phaseData: any) => {\n\t\tdismissPhaseModal()\n\n\t\tif (phaseData.phaseId) {\n\t\t\tupdatePhase({\n\t\t\t\tlocationKey: selectedState.key,\n\t\t\t\titem: phaseData,\n\t\t\t})\n\t\t} else {\n\t\t\taddPhase({\n\t\t\t\tlocationKey: selectedState.key,\n\t\t\t\titem: phaseData,\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"bodyContainer\">\n\t\t\t<div className=\"bodyHeader subContent\">\n\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t<div className=\"breadCrumbs\">\n\t\t\t\t\t\t<span className=\"crumbLink\" onClick={onNavigateBack}>\n\t\t\t\t\t\t\t/ Locations{' '}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{selectedPhaseItem.value ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName=\"crumbLink\"\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tsetSelectedPhaseItem({\n\t\t\t\t\t\t\t\t\t\t\tisRegion: false,\n\t\t\t\t\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\t\t\t\t\tselectedState: null,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t/ {selectedState.text + ' '}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{selectedPhaseItem.isRegion ? (\n\t\t\t\t\t\t\t\t\t<>/ {selectedPhaseItem.value.name}</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>/ Phase Overview</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>/ {selectedState.text}</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mainTitle\">\n\t\t\t\t\t\t{selectedPhaseItem.value ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{selectedPhaseItem.isRegion ? (\n\t\t\t\t\t\t\t\t\t<>{selectedPhaseItem.value.name} Region Phase Overview</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>{selectedState.text} Phase Overview</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>{selectedState.text}</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{selectedPhaseItem.value ? (\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<LocationsPhases\n\t\t\t\t\t\t\tisRegion={selectedPhaseItem.isRegion}\n\t\t\t\t\t\t\tvalue={selectedPhaseItem.value}\n\t\t\t\t\t\t\tselectedState={selectedState}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div className=\"listTitle\">Phases</div>\n\t\t\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"addLocationHeaderButton\"\n\t\t\t\t\t\t\t\t\tonClick={() => onPhaseFormOpen(null)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\tAdd Phase\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{selectedState.value.vaccination.content.phases &&\n\t\t\t\t\t\tselectedState.value.vaccination.content.phases.length > 0 ? (\n\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\titems={phaseItemList}\n\t\t\t\t\t\t\t\tcolumns={phaseColumns}\n\t\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t\tonItemInvoked={(item) => selectedPhase(false, item)}\n\t\t\t\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\t\t\t\tclassName=\"locationDetailsList\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>No phases available at this time.</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div className=\"listTitle\">Sublocation</div>\n\t\t\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t\t\t{stateRegionsFullList.current.length > 0 ? (\n\t\t\t\t\t\t\t\t<SearchBox\n\t\t\t\t\t\t\t\t\tstyles={{ root: { width: 400 } }}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\t\t\tonChange={(ev, text) => onRegionFilter(ev, text)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"addLocationHeaderButton\"\n\t\t\t\t\t\t\t\t\tonClick={() => onLocationFormOpen(null)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\tAdd Sublocation\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{stateRegionsFullList.current.length > 0 ? (\n\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\titems={filteredRegionsList}\n\t\t\t\t\t\t\t\tcolumns={subLocationsColumns}\n\t\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\t\tselectionPreservedOnEmptyClick={true}\n\t\t\t\t\t\t\t\tariaLabelForSelectionColumn=\"Toggle selection\"\n\t\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n\t\t\t\t\t\t\t\tcheckButtonAriaLabel=\"Row checkbox\"\n\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t\tonItemInvoked={(item) => selectedPhase(true, item)}\n\t\t\t\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\t\t\t\tclassName=\"locationDetailsList\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>No regions available at this time.</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Modal\n\t\t\t\tisOpen={isLocationModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<LocationForm\n\t\t\t\t\titem={selectedModalFormItem.current}\n\t\t\t\t\tonCancel={dismissLocationModal}\n\t\t\t\t\tonSubmit={onLocationFormSubmit}\n\t\t\t\t\tisRegion={true}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t\t<Modal\n\t\t\t\tisOpen={isPhaseModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<PhaseForm\n\t\t\t\t\titem={selectedModalFormItem.current}\n\t\t\t\t\tonCancel={dismissPhaseModal}\n\t\t\t\t\tonSubmit={onPhaseFormSubmit}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n})\n\nconst setInitialPhaseItems = (selectedState: any): any[] => {\n\tif (!selectedState.value.vaccination.content.phases) {\n\t\treturn []\n\t}\n\treturn selectedState.value.vaccination.content.phases.map(\n\t\t(phase: any, idx: number) => {\n\t\t\tconst activePhase: string =\n\t\t\t\tselectedState.value.vaccination.content.activePhase\n\t\t\treturn {\n\t\t\t\tkey: String(phase.id) + idx,\n\t\t\t\tkeyId: String(phase.id) + (phase.id === activePhase ? ' (active)' : ''),\n\t\t\t\tname:\n\t\t\t\t\ttoProperCase(phase.label ?? phase.id) +\n\t\t\t\t\t(phase.id === activePhase ? ' (active)' : ''),\n\t\t\t\tqualifications: phase.qualifications.length,\n\t\t\t\tvalue: phase,\n\t\t\t\tisNew: false,\n\t\t\t}\n\t\t}\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tProgressIndicator,\n\tFontIcon,\n\tModal,\n\tIColumn,\n\tSearchBox,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useRef, useEffect, useCallback } from 'react'\nimport {\n\tupdateLocationList,\n\tupdateLocationData,\n} from '../mutators/repoMutators'\nimport { getAppStore } from '../store/store'\nimport LocationForm from './LocationForm'\n\nimport './Locations.scss'\n\nexport interface LocationsStatesProp {\n\tonSelectedItem: (item: any) => void\n}\n\nexport default observer(function LocationsStates(props: LocationsStatesProp) {\n\tconst { onSelectedItem } = props\n\n\tconst [\n\t\tisLocationModalOpen,\n\t\t{ setTrue: openLocationModal, setFalse: dismissLocationModal },\n\t] = useBoolean(false)\n\tconst [filteredStateList, setFilteredStateList] = useState<any[]>([])\n\tconst stateRepoFullList = useRef<any[]>([])\n\tconst selectedLocationItem = useRef<any>(null)\n\n\tconst state = getAppStore()\n\n\tconst locationColumns = [\n\t\t{\n\t\t\tkey: 'stateCol',\n\t\t\tname: 'State',\n\t\t\tfieldName: 'text',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'regionCol',\n\t\t\tname: 'Sublocations',\n\t\t\tfieldName: 'regions',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editLocation',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter((loc) => (state.isEditable ? true : loc.key !== 'editCol'))\n\n\tuseEffect(() => {\n\t\tif (state.repoFileData) {\n\t\t\tconst tempList: any[] = []\n\t\t\tObject.entries(state.repoFileData).forEach(\n\t\t\t\t([key, value]: [string, any]) => {\n\t\t\t\t\tconst stateId = value?.info?.content.id\n\t\t\t\t\tconst stateNames = state?.globalFileData?.cdcStateNames.content\n\n\t\t\t\t\tconst stateLabel =\n\t\t\t\t\t\tstateNames[`cdc/${stateId}/state_name`] &&\n\t\t\t\t\t\tstateNames[`cdc/${stateId}/state_name`][state.currentLanguage] &&\n\t\t\t\t\t\tstateNames[`cdc/${stateId}/state_name`][\n\t\t\t\t\t\t\tstate.currentLanguage\n\t\t\t\t\t\t].trim() !== ''\n\t\t\t\t\t\t\t? stateNames[`cdc/${stateId}/state_name`][state.currentLanguage]\n\t\t\t\t\t\t\t: `*Translation Not Found* (${stateId})`\n\n\t\t\t\t\ttempList.push({\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\ttext: stateLabel,\n\t\t\t\t\t\tregions: value?.regions ? Object.keys(value.regions).length : 0,\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t)\n\t\t\tsetFilteredStateList(tempList)\n\t\t\tstateRepoFullList.current = tempList\n\t\t}\n\t}, [state.repoFileData, state.globalFileData, state.currentLanguage, stateRepoFullList])\n\n\tconst onStateFilter = useCallback(\n\t\t(_event: any, text?: string | undefined) => {\n\t\t\tif (text) {\n\t\t\t\tsetFilteredStateList(\n\t\t\t\t\tstateRepoFullList.current.filter(\n\t\t\t\t\t\t(state) => state.text.toLowerCase().indexOf(text) > -1\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tsetFilteredStateList(stateRepoFullList.current)\n\t\t\t}\n\t\t},\n\t\t[stateRepoFullList]\n\t)\n\n\tconst openSelection = useCallback(\n\t\t(item: any) => {\n\t\t\tonSelectedItem(item)\n\t\t},\n\t\t[onSelectedItem]\n\t)\n\n\tconst onLocationFormSubmit = useCallback(\n\t\t(locationData, prevItem) => {\n\t\t\tdismissLocationModal()\n\t\t\tif (!prevItem) {\n\t\t\t\tupdateLocationList(locationData, false)\n\t\t\t} else {\n\t\t\t\tupdateLocationData(locationData, false, prevItem)\n\t\t\t}\n\t\t},\n\t\t[dismissLocationModal]\n\t)\n\n\tconst onLocationFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedLocationItem.current = item ?? null\n\t\t\topenLocationModal()\n\t\t},\n\t\t[openLocationModal]\n\t)\n\n\tconst onRenderItemColumn = useCallback(\n\t\t(item?: any, _index?: number, column?: IColumn) => {\n\t\t\tconst fieldContent = item[column?.fieldName as keyof any] as string\n\n\t\t\tif (column?.key === 'editCol') {\n\t\t\t\treturn state.isEditable ? (\n\t\t\t\t\t<FontIcon\n\t\t\t\t\t\ticonName=\"Edit\"\n\t\t\t\t\t\tclassName=\"editIcon\"\n\t\t\t\t\t\tonClick={() => onLocationFormOpen(item)}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t} else {\n\t\t\t\treturn <span>{fieldContent}</span>\n\t\t\t}\n\t\t},\n\t\t[onLocationFormOpen, state.isEditable]\n\t)\n\n\treturn (\n\t\t<div className=\"bodyContainer\">\n\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t<div className=\"breadCrumbs\">/ Locations</div>\n\t\t\t\t\t<div className=\"mainTitle\">Locations</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"bodyContent\">\n\t\t\t\t{state.repoFileData ? (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t\t\t<SearchBox\n\t\t\t\t\t\t\t\tstyles={{ root: { width: 400 } }}\n\t\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\t\tonChange={(ev, text) => onStateFilter(ev, text)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"addLocationHeaderButton\"\n\t\t\t\t\t\t\t\t\tonClick={() => onLocationFormOpen(null)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\tAdd Location\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\titems={filteredStateList}\n\t\t\t\t\t\t\tcolumns={locationColumns}\n\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\tselectionPreservedOnEmptyClick={true}\n\t\t\t\t\t\t\tariaLabelForSelectionColumn=\"Toggle selection\"\n\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n\t\t\t\t\t\t\tcheckButtonAriaLabel=\"Row checkbox\"\n\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\tonItemInvoked={openSelection}\n\t\t\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\t\t\tclassName=\"locationDetailsList\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t) : (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<ProgressIndicator description=\"Loading content...\" />\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\tisOpen={isLocationModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<LocationForm\n\t\t\t\t\titem={selectedLocationItem.current}\n\t\t\t\t\tonCancel={dismissLocationModal}\n\t\t\t\t\tonSubmit={onLocationFormSubmit}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport { useState, useCallback } from 'react'\nimport LocationsRegions from './LocationsRegions'\nimport LocationsStates from './LocationsStates'\n\nimport './Locations.scss'\n\nexport default observer(function Locations() {\n\tconst [selectedState, setSelectedState] = useState<any>(null)\n\n\tconst onNavigateBack = useCallback(() => {\n\t\tsetSelectedState(null)\n\t}, [])\n\n\treturn (\n\t\t<div className=\"locationPageContainer\">\n\t\t\t{!selectedState ? (\n\t\t\t\t<LocationsStates onSelectedItem={setSelectedState} />\n\t\t\t) : (\n\t\t\t\t<LocationsRegions\n\t\t\t\t\tselectedState={selectedState}\n\t\t\t\t\tonNavigateBack={onNavigateBack}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { action } from 'satcheljs'\n\nexport const loginUser = action('loginUser')\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport { DefaultButton } from 'office-ui-fabric-react'\nimport { loginUser } from '../actions/authActions'\n\nimport './Login.scss'\n\nexport default observer(function Login() {\n\treturn (\n\t\t<div className=\"loginPageContainer\">\n\t\t\t<div className=\"loginContainer\">\n\t\t\t\t<h3>Data Composer</h3>\n\t\t\t\t<DefaultButton text=\"Login with Github\" onClick={loginUser} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tPrimaryButton,\n\tDefaultButton,\n\tTextField,\n\tDropdown,\n\tIDropdownOption,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useRef, useState } from 'react'\nimport { getGlobalQualifierValidationTexts } from '../selectors/qualifierSelectors'\n\nimport './AddQualifierForm.scss'\n\nexport interface AddQualifierFormProp {\n\titem?: any\n\ttagsOptions: IDropdownOption[]\n\tonSubmit?: (newQualifier: any) => void\n\tonCancel?: () => void\n}\n\nconst setInitialData = (item: any) => {\n\tif (item) {\n\t\treturn {\n\t\t\ttagKey: item.key.split('/')[1].split('.')[0],\n\t\t\tkey: item.key,\n\t\t\tqualifier: item.text,\n\t\t\tisNew: false,\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\ttagKey: '',\n\t\t\tkey: '',\n\t\t\tqualifier: '',\n\t\t\tisNew: true,\n\t\t}\n\t}\n}\n\nexport default observer(function AddQualifierForm(props: AddQualifierFormProp) {\n\tconst { onSubmit, onCancel, item, tagsOptions } = props\n\tconst [formData, setFormData] = useState<any>(setInitialData(item))\n\tconst fieldChanges = useRef<any>(formData)\n\tconst globalQualifiersList = useRef<string[]>(\n\t\tgetGlobalQualifierValidationTexts()\n\t)\n\tconst [hasError, setHasError] = useState<boolean>(false)\n\tconst [isAddingTag, setIsAddingTag] = useState<boolean>(false)\n\n\tconst handleTagChange = useCallback(\n\t\t(_ev: any, item?: IDropdownOption) => {\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\ttagKey: item?.key,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst isDuplicate = useCallback(\n\t\t(newQualifier: string) => {\n\t\t\tconst newQualifierText = newQualifier.toLowerCase().replaceAll(' ', '')\n\t\t\tif (globalQualifiersList.current.includes(newQualifierText)) {\n\t\t\t\tsetHasError(true)\n\t\t\t\treturn 'Qualifier already exist, please revise.'\n\t\t\t} else {\n\t\t\t\tsetHasError(false)\n\t\t\t\treturn ''\n\t\t\t}\n\t\t},\n\t\t[globalQualifiersList, setHasError]\n\t)\n\n\tconst isTagDuplicate = useCallback(\n\t\t(newTag: string) => {\n\t\t\tconst newTagKey = newTag.toLowerCase().replaceAll(' ', '_')\n\t\t\tconst tagKeys = tagsOptions.map((t) => t.key)\n\t\t\tif (tagKeys.includes(newTagKey)) {\n\t\t\t\tsetHasError(true)\n\t\t\t\treturn 'Tag already exist, please revise.'\n\t\t\t} else {\n\t\t\t\tsetHasError(false)\n\t\t\t\treturn ''\n\t\t\t}\n\t\t},\n\t\t[setHasError, tagsOptions]\n\t)\n\n\tconst disableSubmit = useCallback((): boolean => {\n\t\tif (hasError) return true\n\t\treturn formData.qualifier === ''\n\t}, [formData, hasError])\n\n\tconst createNewTag = useCallback(() => {\n\t\tconst newTagKey = formData.tagKey.replaceAll(' ', '_')\n\t\ttagsOptions.push({ key: newTagKey, text: formData.tagKey })\n\t\ttagsOptions.sort((a, b) => (a.text > b.text ? 1 : -1))\n\n\t\tfieldChanges.current = {\n\t\t\t...fieldChanges.current,\n\t\t\t...{\n\t\t\t\ttagKey: newTagKey,\n\t\t\t},\n\t\t}\n\n\t\tsetIsAddingTag(false)\n\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t}, [formData, tagsOptions, fieldChanges, setIsAddingTag])\n\n\tconst formTitle = item ? 'Edit Qualifier' : 'New Qualifier'\n\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">{formTitle}</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<div className=\"tagRow\">\n\t\t\t\t\t{!isAddingTag ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\tselectedKey={formData.tagKey}\n\t\t\t\t\t\t\t\tplaceholder=\"Tag\"\n\t\t\t\t\t\t\t\toptions={tagsOptions}\n\t\t\t\t\t\t\t\tonChange={handleTagChange}\n\t\t\t\t\t\t\t\tdisabled={!formData.isNew}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\t\ttext=\"New tag\"\n\t\t\t\t\t\t\t\tonClick={() => setIsAddingTag(true)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tname=\"tagKey\"\n\t\t\t\t\t\t\t\tplaceholder=\"Type new tag\"\n\t\t\t\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\t\t\t\tvalidateOnLoad={false}\n\t\t\t\t\t\t\t\tonGetErrorMessage={() => isTagDuplicate(formData.tagKey)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PrimaryButton text=\"Ok\" onClick={() => createNewTag()} />\n\t\t\t\t\t\t\t<DefaultButton\n\t\t\t\t\t\t\t\ttext=\"Cancel\"\n\t\t\t\t\t\t\t\tonClick={() => setIsAddingTag(false)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t<div></div>\n\t\t\t\t</div>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"\"\n\t\t\t\t\tname=\"qualifier\"\n\t\t\t\t\tplaceholder=\"Qualifier text...\"\n\t\t\t\t\tvalue={formData.qualifier}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={false}\n\t\t\t\t\tresizable={false}\n\t\t\t\t\tdisabled={!formData.tagKey || isAddingTag}\n\t\t\t\t\tvalidateOnLoad={false}\n\t\t\t\t\tonGetErrorMessage={() => isDuplicate(formData.qualifier)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton\n\t\t\t\t\ttext=\"Submit\"\n\t\t\t\t\tdisabled={disableSubmit()}\n\t\t\t\t\tonClick={() => onSubmit?.(formData)}\n\t\t\t\t/>\n\t\t\t\t<DefaultButton text=\"Cancel\" onClick={() => onCancel?.()} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getAppStore } from '../store/store'\n\nexport const isQualifierTextDuplicate = (qualifierText: string): boolean => {\n    const store = getAppStore()\n    const { content } = store.globalFileData.customStrings\n\tconst newQualifier = qualifierText.toLowerCase().replaceAll(' ','')\n\n    const existingQualifierTexts = Object.entries(content)\n        .filter(([key, _value]: [string, any]) => key.startsWith('c19.eligibility.question/'))\n        .map(([_key, value]: [string, any]) => {\n            return value[store.currentLanguage].toLowerCase().replaceAll(' ','')\n        })\n\n    return existingQualifierTexts.includes(newQualifier)\n}\n\nexport const getGlobalQualifierValidationTexts = (): string[] => {\n    const store = getAppStore()\n    const { content } = store.globalFileData.customStrings\n\n    return Object.entries(content)\n        .filter(([key, _value]: [string, any]) => key.startsWith('c19.eligibility.question/'))\n        .map(([_key, value]: [string, any]) => {\n            return value[store.currentLanguage].toLowerCase().replaceAll(' ','')\n        })\n}","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tIGroup,\n\tDetailsList,\n\tFontIcon,\n\tModal,\n\tIDropdownOption,\n\tIColumn,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { updateGlobalQualifiers } from '../mutators/repoMutators'\nimport { getAppStore } from '../store/store'\nimport { toProperCase } from '../utils/textUtils'\nimport AddQualifierForm from './AddQualiferForm'\n\nimport './QualifierPanel.scss'\n\nexport default observer(function QualifierPanel() {\n\tconst { globalFileData, currentLanguage, isEditable } = getAppStore()\n\tconst [qualifierGroup, setQualifierGroup] = useState<IGroup[]>([])\n\tconst [qualifierGroupItems, setQualifierGroupItems] = useState<any[]>([])\n\tconst [\n\t\tisAddQualifierModalOpen,\n\t\t{ setTrue: openAddQualifierModal, setFalse: dismissAddQualifierModal },\n\t] = useBoolean(false)\n\tconst formItem = useRef<any>(null)\n\n\tuseEffect(() => {\n\t\tif (globalFileData?.customStrings) {\n\t\t\tconst groupKeys: any[] = []\n\t\t\tconst questionItemKeys: any[] = []\n\n\t\t\tconst tempQualifierGroup: IGroup[] = []\n\t\t\tconst tempQualifierGroupItems: any[] = []\n\n\t\t\tconst contentObj = globalFileData.customStrings.content\n\t\t\tconst questionKeys = Object.keys(contentObj)\n\t\t\t\t.filter((k) => k.includes('eligibility.question'))\n\t\t\t\t.sort((a, b) => (a > b ? 1 : -1))\n\n\t\t\tquestionKeys.forEach((key) => {\n\t\t\t\tconst questionGroupKey = key.split('/')[1].split('.')\n\n\t\t\t\tif (!groupKeys.includes(questionGroupKey[0])) {\n\t\t\t\t\tgroupKeys.push(questionGroupKey[0])\n\n\t\t\t\t\ttempQualifierGroup.push({\n\t\t\t\t\t\tkey: questionGroupKey[0],\n\t\t\t\t\t\tname: toProperCase(questionGroupKey[0]),\n\t\t\t\t\t\tstartIndex: tempQualifierGroupItems.length,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tisCollapsed: true,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconst groupIdx = tempQualifierGroup.findIndex(\n\t\t\t\t\t\t(obj) => obj.key === questionGroupKey[0]\n\t\t\t\t\t)\n\t\t\t\t\ttempQualifierGroup[groupIdx].count++\n\t\t\t\t}\n\n\t\t\t\tif (!questionItemKeys.includes(key)) {\n\t\t\t\t\tquestionItemKeys.push(key)\n\n\t\t\t\t\ttempQualifierGroupItems.push({\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\ttext: contentObj[key][currentLanguage]\n\t\t\t\t\t\t\t? contentObj[key][currentLanguage]\n\t\t\t\t\t\t\t: `*Translation Not Found* (${currentLanguage})`,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tsetQualifierGroup(tempQualifierGroup)\n\t\t\tsetQualifierGroupItems(tempQualifierGroupItems)\n\t\t}\n\t}, [globalFileData, currentLanguage, setQualifierGroup, setQualifierGroupItems])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: 'questionColKey',\n\t\t\tname: 'Question',\n\t\t\tfieldName: 'text',\n\t\t\tminWidth: 100,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editQualifier',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter((loc) => (isEditable ? true : loc.key !== 'editCol'))\n\n\tconst onAddQualifierFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tformItem.current = item ?? null\n\t\t\topenAddQualifierModal()\n\t\t},\n\t\t[openAddQualifierModal, formItem]\n\t)\n\n\tconst addQualifierSubmit = useCallback(\n\t\t(newQualifier) => {\n\t\t\tupdateGlobalQualifiers(newQualifier)\n\t\t\tdismissAddQualifierModal()\n\t\t},\n\t\t[dismissAddQualifierModal]\n\t)\n\n\tconst onRenderItemColumn = useCallback(\n\t\t(item?: any, _index?: number, column?: IColumn) => {\n\t\t\tconst fieldContent = item[column?.fieldName as keyof any] as string\n\n\t\t\tif (column?.key === 'editCol') {\n\t\t\t\treturn isEditable ? (\n\t\t\t\t\t<FontIcon\n\t\t\t\t\t\ticonName=\"Edit\"\n\t\t\t\t\t\tclassName=\"editIcon\"\n\t\t\t\t\t\tonClick={() => onAddQualifierFormOpen(item)}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t} else {\n\t\t\t\treturn <span>{fieldContent}</span>\n\t\t\t}\n\t\t},\n\t\t[onAddQualifierFormOpen, isEditable]\n\t)\n\n\tconst tagsOptions: IDropdownOption[] = qualifierGroup.map((tag) => {\n\t\treturn {\n\t\t\tkey: tag.key,\n\t\t\ttext: tag.name,\n\t\t}\n\t})\n\n\treturn (\n\t\t<div className=\"qualifierPanelContainer\">\n\t\t\t<div className=\"panelHeader\">\n\t\t\t\t<div className=\"panelHeaderTitle\">Qualifiers</div>\n\t\t\t</div>\n\t\t\t<div className=\"panelBody\">\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"addQualiferHeaderButton\"\n\t\t\t\t\t\t\tonClick={() => onAddQualifierFormOpen(null)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\tclassName=\"addQualifierIcon\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tAdd Qualifier\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DetailsList\n\t\t\t\t\t\titems={qualifierGroupItems}\n\t\t\t\t\t\tgroups={qualifierGroup}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tgroupProps={{\n\t\t\t\t\t\t\tshowEmptyGroups: false,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcompact={true}\n\t\t\t\t\t\tisHeaderVisible={false}\n\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\tclassName=\"qualifierGroupItem\"\n\t\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\tisOpen={isAddQualifierModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<AddQualifierForm\n\t\t\t\t\titem={formItem.current}\n\t\t\t\t\ttagsOptions={tagsOptions}\n\t\t\t\t\tonSubmit={addQualifierSubmit}\n\t\t\t\t\tonCancel={dismissAddQualifierModal}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { action } from 'satcheljs'\n\nexport const createPR = action('createPR', (fileData: any) => ({\n\tfileData,\n}))\n\nexport const getRepoFileData = action('getRepoFileData')\n\nexport const initializeGitData = action('initializeGitData')\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport {\n\tPrimaryButton,\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tProgressIndicator,\n} from 'office-ui-fabric-react'\nimport { useState, useEffect } from 'react'\nimport { createPR } from '../actions/repoActions'\n\nimport { getAppStore } from '../store/store'\n\nimport './Review.scss'\n\nexport interface ReviewProp {\n\tshowDashboard: () => void\n}\n\nexport default observer(function Review(props: ReviewProp) {\n\tconst { showDashboard } = props\n\tconst changesColumns = [\n\t\t{\n\t\t\tkey: 'labelCol',\n\t\t\tname: 'Pending Changes',\n\t\t\tfieldName: 'label',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t]\n\n\tconst [changesList, setChangesList] = useState<any[]>([])\n\tconst [locationUpdates, setLocationUpdates] = useState<any[]>([])\n\tconst [globalUpdates, setGlobalUpdates] = useState<any[]>([])\n\tconst [showLoading, setShowLoading] = useState<boolean>(false)\n\n\tconst state = getAppStore()\n\tuseEffect(() => {\n\t\tconst tempChangesList: any[] = []\n\t\tconst tempLocationUpdates: any[] = []\n\t\tconst tempGlobalUpdates: any[] = []\n\n\t\tif (\n\t\t\tJSON.stringify(state.initGlobalFileData.customStrings).toLowerCase() !==\n\t\t\tJSON.stringify(state.globalFileData.customStrings).toLowerCase()\n\t\t) {\n\t\t\ttempChangesList.push({\n\t\t\t\tlabel: `Global strings information updated`,\n\t\t\t\tvalue: state.globalFileData.customStrings,\n\t\t\t})\n\t\t\ttempGlobalUpdates.push(state.globalFileData.customStrings)\n\t\t}\n\n\t\tif (\n\t\t\tJSON.stringify(state.initGlobalFileData.cdcStateNames).toLowerCase() !==\n\t\t\tJSON.stringify(state.globalFileData.cdcStateNames).toLowerCase()\n\t\t) {\n\t\t\ttempChangesList.push({\n\t\t\t\tlabel: `State names information updated`,\n\t\t\t\tvalue: state.globalFileData.cdcStateNames,\n\t\t\t})\n\t\t\ttempGlobalUpdates.push(state.globalFileData.cdcStateNames)\n\t\t}\n\n\t\tif (\n\t\t\tJSON.stringify(state.initGlobalFileData.cdcStateLinks).toLowerCase() !==\n\t\t\tJSON.stringify(state.globalFileData.cdcStateLinks).toLowerCase()\n\t\t) {\n\t\t\ttempChangesList.push({\n\t\t\t\tlabel: `State links information updated`,\n\t\t\t\tvalue: state.globalFileData.cdcStateLinks,\n\t\t\t})\n\t\t\ttempGlobalUpdates.push(state.globalFileData.cdcStateLinks)\n\t\t}\n\n\t\tObject.keys(state.repoFileData).forEach((location: any) => {\n\t\t\tif (state.initRepoFileData) {\n\t\t\t\tif (!state.initRepoFileData[location]) {\n\t\t\t\t\ttempChangesList.push({\n\t\t\t\t\t\tlabel: `New location added - ${location}`,\n\t\t\t\t\t\tvalue: state.repoFileData[location],\n\t\t\t\t\t})\n\t\t\t\t\ttempLocationUpdates.push(state.repoFileData[location])\n\t\t\t\t} else {\n\t\t\t\t\tlet addChanges = false\n\t\t\t\t\tif (\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\tstate.initRepoFileData[location].info\n\t\t\t\t\t\t).toLowerCase() !==\n\t\t\t\t\t\tJSON.stringify(state.repoFileData[location].info).toLowerCase()\n\t\t\t\t\t) {\n\t\t\t\t\t\ttempChangesList.push({\n\t\t\t\t\t\t\tlabel: `Updated information for ${location}`,\n\t\t\t\t\t\t\tvalue: state.repoFileData[location],\n\t\t\t\t\t\t})\n\t\t\t\t\t\taddChanges = true\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tstate.repoFileData[location].regions &&\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\tstate.initRepoFileData[location].regions\n\t\t\t\t\t\t)?.toLowerCase() !==\n\t\t\t\t\t\t\tJSON.stringify(state.repoFileData[location].regions).toLowerCase()\n\t\t\t\t\t) {\n\t\t\t\t\t\ttempChangesList.push({\n\t\t\t\t\t\t\tlabel: `Updated regions for ${location}`,\n\t\t\t\t\t\t\tvalue: state.repoFileData[location],\n\t\t\t\t\t\t})\n\t\t\t\t\t\taddChanges = true\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\tstate.initRepoFileData[location].vaccination\n\t\t\t\t\t\t).toLowerCase() !==\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\tstate.repoFileData[location].vaccination\n\t\t\t\t\t\t).toLowerCase()\n\t\t\t\t\t) {\n\t\t\t\t\t\ttempChangesList.push({\n\t\t\t\t\t\t\tlabel: `Updated phase information for ${location}`,\n\t\t\t\t\t\t\tvalue: state.repoFileData[location],\n\t\t\t\t\t\t})\n\t\t\t\t\t\taddChanges = true\n\t\t\t\t\t}\n\t\t\t\t\tif (addChanges) {\n\t\t\t\t\t\ttempLocationUpdates.push({\n\t\t\t\t\t\t\tkey: location,\n\t\t\t\t\t\t\tdata: state.repoFileData[location],\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tsetLocationUpdates(tempLocationUpdates)\n\t\tsetChangesList(tempChangesList)\n\t\tsetGlobalUpdates(tempGlobalUpdates)\n\t}, [state.initRepoFileData, state.repoFileData, state.initGlobalFileData, state.globalFileData])\n\n\treturn (\n\t\t<div className=\"reviewPageContainer\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t{!showLoading ? (\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\titems={changesList}\n\t\t\t\t\t\t\t\tcolumns={changesColumns}\n\t\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"submitContainer\">\n\t\t\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\t\t\ttext=\"Submit changes\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetShowLoading(true)\n\t\t\t\t\t\t\t\t\t\tcreatePR([globalUpdates, locationUpdates, showDashboard])\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<section className=\"loadingContainer\">\n\t\t\t\t\t\t\t<ProgressIndicator description=\"Saving changes...\" />\n\t\t\t\t\t\t</section>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { Dropdown, TextField } from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useCallback, useEffect, useRef } from 'react'\nimport { translateLocationName } from '../mutators/repoMutators'\nimport { getAppStore } from '../store/store'\nimport { getLanguageOptions } from '../utils/textUtils'\n\nimport './Translate.scss'\n\nconst filterDropdownStyles = {\n\tdropdown: { border: 'none' },\n\ttitle: {\n\t\tfontSize: '14px',\n\t\tcolor: '#0078d4 !important',\n\t\tborder: 'none',\n\t\tbackgroundColor: 'transparent',\n\t},\n\tcaretDown: {\n\t\tcolor: '#0078d4 !important',\n\t\tfontSize: '14px',\n\t},\n\tdropdownOptionText: { fontSize: '14px' },\n}\n\nexport default observer(function Translate() {\n\tconst [locationsList, setLocationsList] = useState<any[]>([])\n\tconst { globalFileData, currentLanguage } = getAppStore()\n\tconst languageOptions = getLanguageOptions(currentLanguage)\n\tconst [translateLanguage, setTranslateLanguage] = useState<any>(\n\t\tlanguageOptions[0]\n\t)\n\tconst fieldChanges = useRef<any>({})\n\tconst mainLanguage = useRef<string>(currentLanguage)\n\n\tuseEffect(() => {\n\t\tmainLanguage.current = currentLanguage\n\t\tsetTranslateLanguage(getLanguageOptions(currentLanguage)[0])\n\t}, [currentLanguage, mainLanguage, setTranslateLanguage])\n\n\tuseEffect(() => {\n\t\tconst stateNames = Object.entries(globalFileData.cdcStateNames.content)\n\t\t\t.map(([key, value]: [string, any]) => {\n\t\t\t\treturn {\n\t\t\t\t\tlocKey: key,\n\t\t\t\t\tfromKey: mainLanguage.current,\n\t\t\t\t\tfrom: value[mainLanguage.current],\n\t\t\t\t\ttoKey: translateLanguage.key,\n\t\t\t\t\tto: !translateLanguage.key\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: !value[translateLanguage.key]\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: value[translateLanguage.key],\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sort((a, b) => (a.from > b.from ? 1 : -1))\n\n\t\tsetLocationsList(stateNames)\n\t}, [globalFileData, translateLanguage, mainLanguage, setLocationsList])\n\n\tconst onTranslateLanguageChange = useCallback(\n\t\t(_ev, option) => {\n\t\t\tsetTranslateLanguage(option)\n\t\t},\n\t\t[setTranslateLanguage]\n\t)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev, rowItem) => {\n\t\t\tconst value = ev.target.value\n\t\t\tconst idx = locationsList.findIndex((i) => i.from === rowItem.from)\n\t\t\tlocationsList[idx] = {\n\t\t\t\t...rowItem,\n\t\t\t\tto: value,\n\t\t\t}\n\t\t\tsetLocationsList([...locationsList])\n\t\t\tfieldChanges.current = locationsList[idx]\n\t\t},\n\t\t[fieldChanges, locationsList, setLocationsList]\n\t)\n\n\tconst updateLocationTranslation = useCallback((current) => {\n\t\ttranslateLocationName(current)\n\t}, [])\n\n\treturn (\n\t\t<div className=\"translatePageContainer\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t<div className=\"breadCrumbs\">/ Translate</div>\n\t\t\t\t\t\t<div className=\"mainTitle\">Translate</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t<div className=\"filterGroup\">\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\tselectedKey={translateLanguage.key}\n\t\t\t\t\t\t\tplaceholder=\"Available languages\"\n\t\t\t\t\t\t\toptions={languageOptions}\n\t\t\t\t\t\t\tstyles={filterDropdownStyles}\n\t\t\t\t\t\t\tonChange={onTranslateLanguageChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\tselectedKey={null}\n\t\t\t\t\t\t\tplaceholder=\"Needs Translation\"\n\t\t\t\t\t\t\toptions={[]}\n\t\t\t\t\t\t\tstyles={filterDropdownStyles}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div className=\"listTitle\">Locations</div>\n\t\t\t\t\t\t{locationsList.map((val: any, idx: number) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={`locationRow-${idx}`}\n\t\t\t\t\t\t\t\t\tclassName={`locationListRow${idx % 2 > 0 ? '' : ' altRow'}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"fromCol\">{val.from}</div>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tname={val.to}\n\t\t\t\t\t\t\t\t\t\tvalue={val.to}\n\t\t\t\t\t\t\t\t\t\tclassName=\"toCol\"\n\t\t\t\t\t\t\t\t\t\tonChange={(ev) => handleTextChange(ev, val)}\n\t\t\t\t\t\t\t\t\t\tonBlur={() => updateLocationTranslation(val)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDropdown,\n\tIconButton,\n\tPersona,\n\tPersonaSize,\n\tPivot,\n\tPivotItem,\n\tMessageBar,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useState } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { setCurrentLanguage } from '../mutators/repoMutators'\nimport {\n\tisUserAuthenticated,\n\tisUserAuthorized,\n} from '../selectors/authSelectors'\nimport { getAppStore } from '../store/store'\nimport { getLanguageOptions } from '../utils/textUtils'\nimport Dashboard from './Dashboard'\nimport { Footer } from './Footer'\nimport Locations from './Locations'\nimport Login from './Login'\nimport QualifierPanel from './QualifierPanel'\nimport Review from './Review'\nimport Translate from './Translate'\n\nimport './App_reset_styles.scss'\nimport './App.scss'\n\nexport default observer(function App() {\n\tconst state = getAppStore()\n\tconst [isPanelOpen, { setTrue: showPanel, setFalse: hidePanel }] = useBoolean(\n\t\tfalse\n\t)\n\tconst [selectedKey, setSelectedKey] = useState<string>('Dashboard')\n\n\tconst togglePanel = useCallback(\n\t\t(item?: any) => {\n\t\t\tif (item.props.headerText === 'Locations') {\n\t\t\t\tshowPanel()\n\t\t\t} else {\n\t\t\t\thidePanel()\n\t\t\t}\n\t\t\tsetSelectedKey(item.props.headerText)\n\t\t},\n\t\t[showPanel, hidePanel, setSelectedKey]\n\t)\n\n\tconst showDashboard = useCallback(() => {\n\t\tsetSelectedKey('Dashboard')\n\t}, [setSelectedKey])\n\n\treturn (\n\t\t<div className=\"rootContentWrapper\">\n\t\t\t{isUserAuthenticated() ? (\n\t\t\t\t<>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<div className=\"appPageContainer\">\n\t\t\t\t\t\t\t\t<div className=\"appHeaderWrapper\">\n\t\t\t\t\t\t\t\t\t<div className=\"appHeaderContainer\">\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\ticonProps={{ iconName: 'waffle' }}\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Apps\"\n\t\t\t\t\t\t\t\t\t\t\tstyles={{\n\t\t\t\t\t\t\t\t\t\t\t\ticon: { fontSize: '24px', color: 'white' },\n\t\t\t\t\t\t\t\t\t\t\t\trootHovered: { backgroundColor: 'transparent' },\n\t\t\t\t\t\t\t\t\t\t\t\trootPressed: { backgroundColor: 'transparent' },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className=\"appHeaderTitle\">Data Composer</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"appHeaderPersona\">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultSelectedKey={state.currentLanguage}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e, o) => setCurrentLanguage(o)}\n\t\t\t\t\t\t\t\t\t\t\t\tariaLabel=\"Pick Language\"\n\t\t\t\t\t\t\t\t\t\t\t\toptions={getLanguageOptions()}\n\t\t\t\t\t\t\t\t\t\t\t\tstyles={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tdropdown: { border: 'none' },\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'white !important',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tcaretDown: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'white !important',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tdropdownOptionText: { fontSize: '14px' },\n\t\t\t\t\t\t\t\t\t\t\t\t\troot: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectors: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t':hover': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,.25);',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"appHeaderUsername\">\n\t\t\t\t\t\t\t\t\t\t\t{state.userDisplayName}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<Persona\n\t\t\t\t\t\t\t\t\t\t\ttext={state.userDisplayName}\n\t\t\t\t\t\t\t\t\t\t\tsize={PersonaSize.size32}\n\t\t\t\t\t\t\t\t\t\t\thidePersonaDetails={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"appBodyWrapper\">\n\t\t\t\t\t\t\t\t\t{isUserAuthorized() ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"appBodyLeft\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Pivot\n\t\t\t\t\t\t\t\t\t\t\t\t\tonLinkClick={togglePanel}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedKey={selectedKey}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem headerText=\"Dashboard\" itemKey=\"Dashboard\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{state.pendingChanges && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MessageBar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyles={{ root: { margin: '10px 5px' } }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYou have pending changes, please click on the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treview tab to submit these changes.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dashboard />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem headerText=\"Locations\" itemKey=\"Locations\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{state.pendingChanges && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MessageBar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyles={{ root: { margin: '10px 5px' } }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYou have pending changes, please click on the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treview tab to submit these changes.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Locations />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{false && state.isEditable && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theaderText=\"Translate\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemKey=\"Translate\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{state.pendingChanges && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MessageBar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyles={{ root: { margin: '10px 5px' } }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYou have pending changes, please click on the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treview tab to submit these changes.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Translate />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{state.pendingChanges && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem headerText=\"Review\" itemKey=\"Review\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Review showDashboard={showDashboard} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Pivot>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{state.isEditable && isPanelOpen && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"appBodyRight\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<QualifierPanel />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"appBodyLeft\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"dashboardPageWrapper\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mainTitle\">Welcome!</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<section style={{ width: '70%', margin: '0px auto' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tThank you for your interest in helping to manage the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata, unfortunately right now access to this tool\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequires collaborator permissions on{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={`https://www.github.com/${process.env.REACT_APP_REPO_OWNER}/${process.env.REACT_APP_REPO_NAME}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis repo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t. Feel free to request access over on GitHub!\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t\t<div>404 page not found.</div>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Login />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t)}\n\t\t\t<Footer />\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getAppStore } from '../store/store'\n\nexport const isUserAuthenticated = (): boolean => {\n\treturn getAppStore().isAuthenticated\n}\n\nexport const isUserAuthorized = (): boolean => {\n\treturn getAppStore().isAuthorized\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { mutatorAction } from 'satcheljs'\nimport { AppState } from '../store/schema/AppState'\nimport { getAppStore } from '../store/store'\n\nexport const setUserAuthData = mutatorAction(\n\t'setUserAuthData',\n\t(data: AppState | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.accessToken = data.accessToken\n\t\t\tstore.email = data.email\n\t\t\tstore.isAuthenticated = data.isAuthenticated\n\t\t\tstore.userDisplayName = data.userDisplayName\n\t\t\tstore.username = data.username\n\t\t}\n\t}\n)\n\nexport const setUserNoAccess = mutatorAction('setUserNoAccess', () => {\n\tconst store = getAppStore()\n\tstore.isAuthorized = false\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { AppState } from '../store/schema/AppState'\n\nexport const loginUserService = async (): Promise<AppState | undefined> => {\n\tlet authResp = undefined\n\n\tif (!firebase.apps.length) {\n\t\tfirebase.initializeApp({\n\t\t\tapiKey: process.env.REACT_APP_FIREBASE_KEY,\n\t\t\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\t\t})\n\t}\n\n\tconst provider = new firebase.auth.GithubAuthProvider()\n\tprovider.addScope('repo')\n\n\tconst response = await firebase.auth().signInWithPopup(provider)\n\n\tif (response) {\n\t\tconst oauthCreds = response.credential as firebase.auth.OAuthCredential\n\t\tauthResp = {\n\t\t\tisAuthenticated: true,\n\t\t\taccessToken: oauthCreds.accessToken,\n\t\t\temail: response.user?.email,\n\t\t\tuserDisplayName: response.user?.displayName,\n\t\t\tusername: response.additionalUserInfo?.username,\n\t\t} as AppState\n\t}\n\n\treturn authResp\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport parse from 'csv-parse/lib/sync'\nimport { getAppStore } from '../store/store'\nimport { convertCSVDataToObj } from '../utils/dataUtils'\nimport { b64_to_utf8, utf8_to_b64, getLanguageKeys } from '../utils/textUtils'\n\nconst createPath = (obj: any, pathInput: string, value: any = undefined) => {\n\tlet path = pathInput.split('/')\n\tlet current = obj\n\twhile (path.length > 1) {\n\t\tconst [head, ...tail] = path\n\t\tpath = tail\n\t\tif (current[head] === undefined) {\n\t\t\tcurrent[head] = {}\n\t\t}\n\t\tcurrent = current[head]\n\t}\n\tif (!current[path[0]]) {\n\t\tcurrent[path[0]] = {}\n\t} else {\n\t\tcurrent[path[0]] = { ...current[path[0]], ...value }\n\t}\n\treturn obj\n}\n\nconst getContent = async (url: string, token: string) => {\n\tconst response = await fetch(`${url}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAuthorization: `token ${token}`,\n\t\t},\n\t})\n\tconst data = await response.json()\n\n\treturn data\n}\n\nconst createCSVDataString = (contentObj: any) => {\n\tconst languageKeys = getLanguageKeys()\n\tconst contentKeys = Object.keys(contentObj)\n\n\tlet result = 'String ID,' + languageKeys.join(',') + '\\n'\n\n\tfor (const key of contentKeys) {\n\t\tconst rowValues = [key]\n\t\tlanguageKeys.forEach((lang: string) => {\n\t\t\tif (contentObj[key][lang]) {\n\t\t\t\trowValues.push(`\"${contentObj[key][lang].replace(/\"/g, '\"\"')}\"`)\n\t\t\t} else {\n\t\t\t\trowValues.push('')\n\t\t\t}\n\t\t})\n\n\t\tresult += rowValues.join(',') + '\\n'\n\t}\n\treturn result\n}\n\nexport const repoServices = async (\n\tcommand: string,\n\textraData: any = undefined\n): Promise<any | undefined> => {\n\tconst state = getAppStore()\n\tconst githubRepoOwner = process.env.REACT_APP_REPO_OWNER\n\tconst githubRepoName = process.env.REACT_APP_REPO_NAME\n\n\tswitch (command) {\n\t\tcase 'checkAccess':\n\t\t\tconst loadAccessResponse = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/collaborators/${state.username}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\tAccept: 'application/vnd.github.v3+json',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn loadAccessResponse\n\n\t\tcase 'getBranches':\n\t\t\tconst loadBranchesResponse = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/branches`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\treturn await loadBranchesResponse.json()\n\t\tcase 'getPullRequests':\n\t\t\tconst loadPRResponse = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/pulls`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\treturn await loadPRResponse.json()\n\t\tcase 'getIssues':\n\t\t\tconst loadIssuesResponse = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/issues`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\treturn await loadIssuesResponse.json()\n\n\t\tcase 'getRepoFileData':\n\t\t\tconst dataFolderResp = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\tconst dataFolderObj = await dataFolderResp.json()\n\t\t\tconst policyFolderGitUrl = dataFolderObj.find(\n\t\t\t\t(folder: { name: string }) => folder.name === 'policies'\n\t\t\t).git_url\n\t\t\tconst loadPolicyFolderResponse = await fetch(\n\t\t\t\t`${policyFolderGitUrl}?recursive=true`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\tconst policyFolderData = await loadPolicyFolderResponse.json()\n\t\t\tconst stateData: any = {}\n\t\t\tpolicyFolderData.tree.forEach(async (element: any) => {\n\t\t\t\tif (element.type === 'tree') {\n\t\t\t\t\tcreatePath(stateData, element.path)\n\t\t\t\t} else {\n\t\t\t\t\tconst lastInstance = element.path.lastIndexOf('/')\n\t\t\t\t\tconst filePath = element.path.substring(0, lastInstance)\n\t\t\t\t\tconst fileName: string = element.path.substring(lastInstance + 1)\n\t\t\t\t\tconst fileType: string = fileName.split('.')[0]\n\t\t\t\t\tconst fileObj: any = {}\n\n\t\t\t\t\tconst fileData = await getContent(\n\t\t\t\t\t\tString(element.url),\n\t\t\t\t\t\tString(state.accessToken)\n\t\t\t\t\t)\n\n\t\t\t\t\tswitch (fileName.split('.')[1].toLowerCase()) {\n\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\tfileObj[fileType] = {\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\tcontent: JSON.parse(b64_to_utf8(fileData.content)),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'md':\n\t\t\t\t\t\t\tfileObj['desc_md'] = {\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\tcontent: b64_to_utf8(fileData.content),\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'csv':\n\t\t\t\t\t\t\tfileObj['strings'] = {\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\tcontent: convertCSVDataToObj(\n\t\t\t\t\t\t\t\t\tparse(b64_to_utf8(fileData.content), { columns: true })\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fileObj !== {}) {\n\t\t\t\t\t\tcreatePath(stateData, filePath, fileObj)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconst localizationFolderGitUrl = dataFolderObj.find(\n\t\t\t\t(folder: { name: string }) => folder.name === 'localization'\n\t\t\t).git_url\n\n\t\t\tconst localizationResponse = await fetch(\n\t\t\t\t`${localizationFolderGitUrl}?recursive=true`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tconst localizationData = await localizationResponse.json()\n\n\t\t\tconst customStrings = localizationData.tree.find(\n\t\t\t\t(file: { path: string }) => file.path === 'custom-strings.csv'\n\t\t\t)\n\t\t\tconst cdcStateNames = localizationData.tree.find(\n\t\t\t\t(file: { path: string }) => file.path === 'cdc-state-names.csv'\n\t\t\t)\n\t\t\tconst cdcStateLinks = localizationData.tree.find(\n\t\t\t\t(file: { path: string }) => file.path === 'cdc-state-links.csv'\n\t\t\t)\n\n\t\t\tlet customStringsData: any = {}\n\t\t\tlet cdcStateNamesData: any = {}\n\t\t\tlet cdcStateLinksData: any = {}\n\n\t\t\tconst customStringsDataParse = await getContent(\n\t\t\t\tString(customStrings.url),\n\t\t\t\tString(state.accessToken)\n\t\t\t)\n\t\t\tcustomStringsData = convertCSVDataToObj(\n\t\t\t\tparse(b64_to_utf8(customStringsDataParse.content), { columns: true })\n\t\t\t)\n\n\t\t\tconst cdcStateNamesDataParse = await getContent(\n\t\t\t\tString(cdcStateNames.url),\n\t\t\t\tString(state.accessToken)\n\t\t\t)\n\t\t\tcdcStateNamesData = convertCSVDataToObj(\n\t\t\t\tparse(b64_to_utf8(cdcStateNamesDataParse.content), { columns: true })\n\t\t\t)\n\n\t\t\tconst cdcStateLinksDataParse = await getContent(\n\t\t\t\tString(cdcStateLinks.url),\n\t\t\t\tString(state.accessToken)\n\t\t\t)\n\t\t\tcdcStateLinksData = convertCSVDataToObj(\n\t\t\t\tparse(b64_to_utf8(cdcStateLinksDataParse.content), { columns: true })\n\t\t\t)\n\n\t\t\tcustomStrings['content'] = customStringsData\n\t\t\tcdcStateNames['content'] = cdcStateNamesData\n\t\t\tcdcStateLinks['content'] = cdcStateLinksData\n\n\t\t\treturn [stateData, customStrings, cdcStateNames, cdcStateLinks]\n\n\t\tcase 'createPR':\n\t\t\tif (state?.mainBranch) {\n\t\t\t\tconst mainBranch = state?.mainBranch\n\t\t\t\tconst branchName = `refs/heads/${state.username}-policy-${Date.now()}`\n\t\t\t\tconst globalUpdates = extraData[0]\n\t\t\t\tconst locationUpdates = extraData[1]\n\n\t\t\t\tconst createBranchResponse = await fetch(\n\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/git/refs`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tref: branchName,\n\t\t\t\t\t\t\tsha: mainBranch.commit.sha,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\tconst newBranch = await createBranchResponse.json()\n\t\t\t\tif (newBranch) {\n\t\t\t\t\tif (globalUpdates) {\n\t\t\t\t\t\tfor (const i in globalUpdates) {\n\t\t\t\t\t\t\tconst updateObj = globalUpdates[i]\n\t\t\t\t\t\t\tconst fileData = createCSVDataString(updateObj.content)\n\t\t\t\t\t\t\tawait fetch(\n\t\t\t\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data/localization/${updateObj.path}`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\tbranch: branchName,\n\t\t\t\t\t\t\t\t\t\tmessage: 'auto file update',\n\t\t\t\t\t\t\t\t\t\tcontent: utf8_to_b64(fileData),\n\t\t\t\t\t\t\t\t\t\tsha: updateObj.sha,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (locationUpdates) {\n\t\t\t\t\t\tfor (const i in locationUpdates) {\n\t\t\t\t\t\t\tconst locationObj = locationUpdates[i].data\n\n\t\t\t\t\t\t\t//Info\n\t\t\t\t\t\t\tawait fetch(\n\t\t\t\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data/policies/${locationObj.info.path}`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\tbranch: branchName,\n\t\t\t\t\t\t\t\t\t\tmessage: 'auto file update',\n\t\t\t\t\t\t\t\t\t\tcontent: utf8_to_b64(\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(locationObj.info.content, null, '\\t')\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tsha: locationObj.info.sha,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t//Vaccingation\n\t\t\t\t\t\t\tawait fetch(\n\t\t\t\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data/policies/${locationObj.vaccination.path}`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\tbranch: branchName,\n\t\t\t\t\t\t\t\t\t\tmessage: 'auto file update',\n\t\t\t\t\t\t\t\t\t\tcontent: utf8_to_b64(\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tlocationObj.vaccination.content,\n\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\t'\\t'\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tsha: locationObj.vaccination.sha,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t//Strings\n\t\t\t\t\t\t\tawait fetch(\n\t\t\t\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data/policies/${locationObj.strings.path}`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\tbranch: branchName,\n\t\t\t\t\t\t\t\t\t\tmessage: 'auto file update',\n\t\t\t\t\t\t\t\t\t\tcontent: utf8_to_b64(\n\t\t\t\t\t\t\t\t\t\t\tcreateCSVDataString(locationObj.strings.content)\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tsha: locationObj.strings.sha,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Regions\n\t\t\t\t\t\t\tif (locationObj.regions) {\n\t\t\t\t\t\t\t\tconst regionKeys = Object.keys(locationObj.regions)\n\t\t\t\t\t\t\t\tfor (const key of regionKeys) {\n\t\t\t\t\t\t\t\t\tconst regionObj = locationObj.regions[key]\n\t\t\t\t\t\t\t\t\t//Info\n\t\t\t\t\t\t\t\t\tawait fetch(\n\t\t\t\t\t\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data/policies/${regionObj.info.path}`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\t\t\tbranch: branchName,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'auto file update',\n\t\t\t\t\t\t\t\t\t\t\t\tcontent: utf8_to_b64(\n\t\t\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(regionObj.info.content, null, '\\t')\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tsha: regionObj.info.sha,\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t//Vaccination\n\t\t\t\t\t\t\t\t\tawait fetch(\n\t\t\t\t\t\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data/policies/${regionObj.vaccination.path}`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\t\t\tbranch: branchName,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'auto file update',\n\t\t\t\t\t\t\t\t\t\t\t\tcontent: utf8_to_b64(\n\t\t\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tregionObj.vaccination.content,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\\t'\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tsha: regionObj.vaccination.sha,\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prResp = await fetch(\n\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/pulls`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\thead: branchName,\n\t\t\t\t\t\t\tbase: 'main',\n\t\t\t\t\t\t\ttitle: 'auto PR creation',\n\t\t\t\t\t\t}),\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\treturn prResp.json()\n\t\t\t}\n\t\t\tbreak\n\t}\n\n\treturn undefined\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { orchestrator } from 'satcheljs'\nimport { loginUser } from '../actions/authActions'\nimport { initializeGitData } from '../actions/repoActions'\nimport { setUserAuthData, setUserNoAccess } from '../mutators/authMutators'\nimport { loginUserService } from '../services/loginUserService'\nimport { repoServices } from '../services/repoServices'\n\norchestrator(loginUser, async () => {\n\tconst resp = await loginUserService()\n\tif (resp) {\n\t\tsetUserAuthData(resp)\n\t\tconst accessResp = await repoServices('checkAccess')\n\t\tif (accessResp.ok) {\n\t\t\tinitializeGitData()\n\t\t} else {\n\t\t\tsetUserNoAccess()\n\t\t}\n\t}\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { orchestrator } from 'satcheljs'\nimport {\n\tcreatePR,\n\tgetRepoFileData,\n\tinitializeGitData,\n} from '../actions/repoActions'\nimport {\n\tsetBranchList,\n\thandleCreatePR,\n\tsetRepoFileData,\n\tsetIssuesList\n} from '../mutators/repoMutators'\nimport { repoServices } from '../services/repoServices'\n\n\norchestrator(createPR, async (message) => {\n\tconst { fileData } = message\n\tlet resp = await repoServices('createPR', fileData)\n\n\tif(resp){\n\n\t\tresp = await repoServices('getBranches')\n\t\tsetBranchList(resp)\n\n\t\tresp = await repoServices('getRepoFileData')\n\t\tsetRepoFileData(resp)\n\n\t\tresp = await repoServices('getIssues')\n\t\tsetIssuesList(resp, fileData[2]())\n\t\thandleCreatePR()\n\t}\n})\n\norchestrator(getRepoFileData, async () => {\n\tconst resp = await repoServices('getRepoFileData')\n\tsetRepoFileData(resp)\n})\n\norchestrator(initializeGitData, async () => {\n\tlet resp = await repoServices('getBranches')\n\tsetBranchList(resp)\n\n\tresp = await repoServices('getRepoFileData')\n\tsetRepoFileData(resp)\n\n\tresp = await repoServices('getIssues')\n\tsetIssuesList(resp)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { initializeIcons } from '@fluentui/react/lib/Icons'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './components/App'\nimport './orchestrators/authOrchestrators'\nimport './orchestrators/repoOrchestrators'\n\nfunction render() {\n\ttry {\n\t\tconst basePath = process.env.REACT_APP_BASE_PATH\n\t\tinitializeIcons()\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<Router basename={basePath}>\n\t\t\t\t\t<App />\n\t\t\t\t</Router>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} catch (err) {\n\t\tconsole.error('error rendering app', err)\n\t}\n}\n\nrender()\n"],"sourceRoot":""}