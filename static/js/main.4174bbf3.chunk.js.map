{"version":3,"sources":["store/store.ts","mutators/repoMutators.ts","utils/textUtils.ts","components/Dashboard.tsx","components/Footer.tsx","selectors/locationSelectors.ts","components/LocationForm.tsx","selectors/phaseSelectors.ts","components/PhaseQualifierForm.tsx","components/LocationsPhases.tsx","components/PhaseForm.tsx","components/LocationsRegions.tsx","components/LocationsStates.tsx","components/Locations.tsx","actions/authActions.ts","components/Login.tsx","components/QualifierPanel.tsx","components/Translate.tsx","components/App.tsx","selectors/authSelectors.ts","actions/repoActions.ts","mutators/authMutators.ts","services/loginUserService.ts","utils/dataUtils.ts","services/repoServices.ts","orchestrators/authOrchestrators.ts","orchestrators/repoOrchestrators.ts","index.tsx"],"names":["getAppStore","createStore","isAuthenticated","isAuthorized","accessToken","undefined","username","email","userDisplayName","branches","issues","repoFileData","globalFileData","mainBranch","fileChanges","currentLanguage","toggleAddLocation","toggleQualifier","isEditable","setBranchList","mutatorAction","data","store","find","branch","name","setIssuesList","handleCreatePR","alert","setRepoFileData","customStrings","cdcStateNames","cdcStateLinks","setCurrentLanguage","key","toProperCase","text","res","replace","toLowerCase","letter","toUpperCase","startsWith","utf8_to_b64","str","btoa","unescape","encodeURIComponent","b64_to_utf8","decodeURIComponent","escape","atob","observer","state","useState","prList","setPRList","issueList","setIssueList","useEffect","tempPRList","tempIssueList","forEach","item","requestUpdate","Date","updated_at","isScrappedIssue","labels","some","x","pull_request","push","title","author","user","login","update","toLocaleString","action","prColumns","fieldName","minWidth","isResizable","ariaLabel","onRender","index","column","className","href","html_url","target","rel","FontIcon","iconName","issueColumns","DetailsList","items","columns","setKey","layoutMode","DetailsListLayoutMode","justified","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","checkButtonAriaLabel","checkboxVisibility","length","style","textAlign","ProgressIndicator","description","Footer","memo","getFullYear","display","flexDirection","process","Link","children","cursor","marginLeft","marginRight","alignContent","onClick","window","open","getCustomStrings","selectedState","keyFilter","customStringsList","Object","entries","strings","content","filter","includes","map","setInitialData","isRegion","value","info","vaccination","links","vacInfo","scheduling_phone","eligibility_plan","details","regionType","type","url","workflow","scheduling","providers","eligibility","eligibilityPlan","schedulingPhone","selectedRegion","path","split","getRegionCustomStrings","getStateCustomStrings","getStrings","props","onSubmit","onCancel","formData","setFormData","fieldChanges","useRef","formTitle","handleRegionChange","useCallback","_ev","current","handleTextChange","ev","TextField","label","onChange","Dropdown","selectedKey","placeholder","options","PrimaryButton","DefaultButton","getPhaseQualifierItems","qualifierList","sort","a","b","rowItems","onRowItemRemove","onRowItemChange","phaseTagItems","phaseQualifiers","tagKeys","tagList","qualifier","tagKey","getPhaseTagItems","phaseQualifierItems","phaseMoreInfoItems","getPhaseMoreInfoItems","getPhaseQualifierItemsByKey","filteredQualifierItems","setFilteredQualifierItems","getPhaseMoreInfoTextByKey","moreInfoKey","moreInfoText","setMoreInfoText","moreInfoUrl","setMoreInfoUrl","changedItem","onTagChange","_event","option","q","groupId","qualifierId","moreInfoContent","onQualifierChange","moreInfoObj","mi","onMoreInfoTextChange","onMoreInfoUrlChange","pointerEvents","defaultSelectedKey","styles","root","width","IconButton","iconProps","menuIcon","visibility","margin","menuProps","isBeakVisible","directionalHint","DirectionalHint","rightTopEdge","aria-label","multiline","autoAdjustHeight","resizable","padding","phaseColumns","isMultiline","phaseGroup","setPhaseGroup","phaseGroupItems","setPhaseGroupItems","tempPhaseGroup","tempPhaseGroupItems","currentStateObj","phases","phase","isCollapsed","id","isActivePhase","activePhase","startIndex","count","qualifications","keyId","isActive","qualification","String","question","isNew","onAddQualifierClick","phaseId","newPhaseGroupItems","newPhaseGroup","insertIdx","i","lastIndexOf","newItem","group","findIndex","onRemoveRowItem","groupItem","onRemovePhaseGroupClick","onToggleCollapse","indentWidth","groups","groupProps","showEmptyGroups","onRenderHeader","color","onRenderRow","isHeaderVisible","constrainMode","selectionMode","onShouldVirtualize","handleCheckboxChange","checked","Checkbox","filteredRegionsList","setFilteredRegionsList","stateRegionsFullList","selectedPhaseItem","setSelectedPhaseItem","useBoolean","isLocationModalOpen","openLocationModal","setTrue","dismissLocationModal","setFalse","isPhaseModalOpen","openPhaseModal","dismissPhaseModal","selectedSublocationItem","onNavigateBack","subLocationsColumns","loc","setInitialPhaseItems","phaseItemList","setPhaseItemList","regions","tempList","valObj","selectedPhase","onLocationFormSubmit","_locationData","onLocationFormOpen","onRenderItemColumn","_index","fieldContent","onRegionFilter","region","indexOf","onPhaseFormSubmit","phaseData","updatedList","maxWidth","onItemInvoked","SearchBox","selectionPreservedOnEmptyClick","Modal","isOpen","isModeless","isDarkOverlay","isBlocking","idx","onSelectedItem","filteredStateList","setFilteredStateList","stateRepoFullList","selectedLocationItem","locationColumns","stateId","stateNames","stateLabel","trim","keys","onStateFilter","openSelection","setSelectedState","loginUser","qualifierGroup","setQualifierGroup","qualifierGroupItems","setQualifierGroupItems","groupKeys","questionItemKeys","tempQualifierGroup","tempQualifierGroupItems","contentObj","k","questionGroupKey","groupIdx","obj","compact","languageOptions","languageCode","Intl","DisplayNames","of","exact","icon","fontSize","rootHovered","backgroundColor","rootPressed","e","o","dropdown","border","caretDown","dropdownOptionText","selectors","Persona","size","PersonaSize","size32","hidePersonaDetails","Pivot","PivotItem","headerText","to","createPR","fileData","getRepoFileData","initializeGitData","setUserAuthData","setUserNoAccess","loginUserService","authResp","firebase","apps","initializeApp","apiKey","authDomain","provider","auth","GithubAuthProvider","addScope","signInWithPopup","response","oauthCreds","credential","displayName","additionalUserInfo","convertCSVDataToObj","csvData","returnObj","row","stringLabel","stringId","createPath","pathInput","head","tail","getContent","token","fetch","method","headers","Authorization","json","repoServices","command","extraData","githubRepoOwner","githubRepoName","loadAccessResponse","loadBranchesResponse","loadPRResponse","loadIssuesResponse","dataFolderResp","dataFolderObj","policyFolderGitUrl","folder","git_url","loadPolicyFolderResponse","policyFolderData","stateData","tree","element","lastInstance","filePath","substring","fileName","fileType","fileObj","sha","JSON","parse","localizationFolderGitUrl","localizationResponse","localizationData","file","customStringsData","cdcStateNamesData","cdcStateLinksData","customStringsDataParse","cdcStateNamesDataParse","cdcStateLinksDataParse","branchName","now","body","stringify","ref","commit","createBranchResponse","newBranch","message","fileResp","base","prResp","console","log","orchestrator","resp","ok","initializeIcons","ReactDOM","render","StrictMode","basename","document","getElementById","err","error"],"mappings":"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","file":"static/js/main.4174bbf3.chunk.js","sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { createStore } from 'satcheljs'\nimport { AppState } from './schema/AppState'\n\nexport const getAppState = (): AppState => {\n\treturn {\n\t\tisAuthenticated: false,\n\t\tisAuthorized: true,\n\t\taccessToken: undefined,\n\t\tusername: undefined,\n\t\temail: undefined,\n\t\tuserDisplayName: undefined,\n\t\tbranches: undefined,\n\t\tissues: undefined,\n\t\trepoFileData: undefined,\n\t\tglobalFileData: undefined,\n\t\tmainBranch: undefined,\n\t\tfileChanges: [],\n\t\tcurrentLanguage: 'en-us',\n\t\ttoggleAddLocation: false,\n\t\ttoggleQualifier: false,\n\t\tisEditable: false,\n\t}\n}\n\nexport const getAppStore = createStore<AppState>('appState', getAppState())\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { mutatorAction } from 'satcheljs'\nimport { getAppStore } from '../store/store'\n\nexport const setBranchList = mutatorAction(\n\t'setBranchList',\n\t(data: any[] | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.branches = data\n\t\t\tconst mainBranch = data.find((branch) => branch.name === 'main')\n\t\t\tstore.mainBranch = mainBranch\n\t\t}\n\t}\n)\n\nexport const setIssuesList = mutatorAction(\n\t'setIssuesList',\n\t(data: any[] | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.issues = data\n\t\t}\n\t}\n)\n\nexport const handleCreatePR = mutatorAction(\n\t'handleCreatePR',\n\t(data: any[] | undefined) => {\n\t\tif (data) {\n\t\t\talert('Checkout Github!')\n\t\t}\n\t}\n)\n\nexport const setRepoFileData = mutatorAction(\n\t'setRepoFileData',\n\t(data: any[] | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.repoFileData = data[0]\n\t\t\tstore.globalFileData = {\n\t\t\t\tcustomStrings: data[1],\n\t\t\t\tcdcStateNames: data[2],\n\t\t\t\tcdcStateLinks: data[3],\n\t\t\t}\n\t\t}\n\t}\n)\n\nexport const setCurrentLanguage = mutatorAction(\n\t'setCurrentLanguage',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.currentLanguage = data.key\n\t\t}\n\t}\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nexport const toProperCase = (text: string): string => {\n\tconst res = text\n\t\t.replace(/_/g, ' ')\n\t\t.toLowerCase()\n\t\t.replace(/\\b[a-z](?=[a-z]{2})/g, function (letter) {\n\t\t\treturn letter.toUpperCase()\n\t\t})\n\n\tif (res.startsWith('us ')) {\n\t\treturn res.replace('us ', 'US ')\n\t}\n\treturn res\n}\n\nexport const getLanguageDisplayText = (\n\tcurrentLanguage: string,\n\tlanguageCode: string\n): string => {\n\t// @ts-expect-error DisplayNames not on Intl\n\tconst languageName = new Intl.DisplayNames([currentLanguage], {\n\t\ttype: 'language',\n\t})\n\treturn languageName.of(languageCode)\n}\n\nexport const utf8_to_b64 = (str: string): string => {\n\treturn btoa(unescape(encodeURIComponent(str)))\n}\n\nexport const b64_to_utf8 = (str: string): string => {\n\treturn decodeURIComponent(escape(atob(str)))\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n import {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tProgressIndicator,\n\tIColumn,\n\tFontIcon\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect } from 'react'\nimport { getAppStore } from '../store/store'\n\n\n\nimport './Dashboard.scss'\n\nexport default observer(function Dashboard() {\n\n\tconst state = getAppStore()\n\n\tconst [prList, setPRList] = useState<any[]>([])\n\tconst [issueList, setIssueList] = useState<any[]>([])\n\n\n\tuseEffect(() => { \n\t\tif(state.issues){\n\n\t\t\tconst tempPRList:any = [];\n\t\t\tconst tempIssueList:any = [];\n\t\t\tstate.issues.forEach( (item:any) => {\n\n\t\t\t\tconst requestUpdate:Date = new Date(item.updated_at);\n\t\t\t\tconst isScrappedIssue = item.labels.some( (x:any) => x.name.toLowerCase() === \"scrapped changes\" )\n\n\t\t\t\tif(item.pull_request){\n\n\t\t\t\t\ttempPRList.push({ title:item.title, author:item.user.login, update:requestUpdate.toLocaleString(), action:item});\n\t\t\t\t} \n\t\t\t\telse if (isScrappedIssue){\n\t\t\t\t\ttempIssueList.push({ title:item.title, author:item.user.login, update:requestUpdate.toLocaleString(), action:item});\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tsetPRList(tempPRList);\n\t\t\tsetIssueList(tempIssueList);\n\n\t\t}\n\n\n\t},[state.issues])\n\n\tconst onIssueActionRender =  (item?: any, index?: number, column?: IColumn) =>  {\n\n\t\treturn (<a className=\"tableActionLink\" href={item?.action?.html_url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\tView</a>)\n\n\t};\n\n\n\tconst onPRActionRender =  (item?: any, index?: number, column?: IColumn) =>  {\n\n\t\treturn (<a className=\"tableActionLink\" href={item?.action?.html_url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\tApprove</a>)\n\n\t};\n\n\tconst prColumns = [\n\t\t{\n\t\t\tkey: 'titleCol',\n\t\t\tname: 'Title',\n\t\t\tfieldName: 'title',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'authorCol',\n\t\t\tname: 'Author',\n\t\t\tfieldName: 'author',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'updateCol',\n\t\t\tname: 'Last Update',\n\t\t\tfieldName: 'update',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'actionCol',\n\t\t\tname: '',\n\t\t\tariaLabel:'Actions Column',\n\t\t\tfieldName: 'action',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t\tonRender: onPRActionRender\n\t\t},\n\t];\n\n\tconst issueColumns = [\n\t\t{\n\t\t\tkey: 'titleCol',\n\t\t\tname: 'Title',\n\t\t\tfieldName: 'title',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'authorCol',\n\t\t\tname: 'Author',\n\t\t\tfieldName: 'author',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'updateCol',\n\t\t\tname: 'Last Update',\n\t\t\tfieldName: 'update',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'actionCol',\n\t\t\tname: '',\n\t\t\tariaLabel:'Actions Column',\n\t\t\tfieldName: 'action',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t\tonRender: onIssueActionRender\n\t\t},\n\n\t];\n\n\treturn (\n\t\t<div className=\"dashboardPageWrapper\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t<div className=\"breadCrumbs\">/ Dashboard</div>\n\t\t\t\t\t\t<div className=\"mainTitle\">Dashboard</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t{ state.issues ? (\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t<div className=\"sectionHeader\">Pending PRs</div>\n\t\t\t\t\t\t<div className=\"sectionContent\">\n\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\titems={prList}\n\t\t\t\t\t\t\tcolumns={prColumns}\n\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\tariaLabelForSelectionColumn=\"Toggle selection\"\n\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n\t\t\t\t\t\t\tcheckButtonAriaLabel=\"Row checkbox\"\n\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ !prList.length && (\n\t\t\t\t\t\t\t<div style={{textAlign:\"center\"}}>No pending PRs at this time.</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sectionHeader\">Location Updates</div>\n\t\t\t\t\t\t<div className=\"sectionContent\">\n\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\titems={issueList}\n\t\t\t\t\t\t\tcolumns={issueColumns}\n\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\tariaLabelForSelectionColumn=\"Toggle selection\"\n\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n\t\t\t\t\t\t\tcheckButtonAriaLabel=\"Row checkbox\"\n\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ !issueList.length && (\n\t\t\t\t\t\t\t<div style={{textAlign:\"center\"}}>No pending location updates at this time.</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>):(\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<ProgressIndicator description=\"Loading content...\" />\n\t\t\t\t\t</section>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { FC, memo } from 'react'\n\nconst CONTACT_EMAIL = process.env.REACT_APP_CONTACT_US_EMAIL\nconst CODE_OF_CONDUCT_URL = process.env.REACT_APP_CODE_OF_CONDUCT_URL\n\nexport const Footer: FC = memo(function Footer() {\n\tconst year = new Date().getFullYear()\n\treturn (\n\t\t<div style={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t<div className=\"appFooterRow\">\n\t\t\t\t<Link href=\"https://go.microsoft.com/fwlink/?LinkId=521839\">\n\t\t\t\t\tPrivacy &amp; Cookies\n\t\t\t\t</Link>\n\t\t\t\t{' | '}\n\t\t\t\t<Link href={`mailto:${CONTACT_EMAIL}`}>Contact Us</Link>\n\t\t\t\t{' | '}\n\t\t\t\t<Link href={CODE_OF_CONDUCT_URL}>Code of Conduct</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nconst Link: FC<{\n\thref?: string\n}> = memo(function Link({ children, href }) {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"div\"\n\t\t\tstyle={{\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tmarginLeft: 15,\n\t\t\t\tmarginRight: 15,\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignContent: 'center',\n\t\t\t}}\n\t\t\tonClick={() => href && window.open(href, '_blank')}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getAppStore } from '../store/store'\n\nexport const getStateCustomStrings = (\n\tselectedState: any,\n\tkeyFilter: string\n) => {\n\treturn getCustomStrings(selectedState.value, keyFilter)\n}\n\nexport const getRegionCustomStrings = (\n\tselectedRegion: any,\n\tkeyFilter: string\n) => {\n\tconst { repoFileData } = getAppStore()\n\tconst selectedState =\n\t\trepoFileData?.[selectedRegion.value.info.path.split('/')[0]]\n\n\treturn getCustomStrings(selectedState, keyFilter)\n}\n\nconst getCustomStrings = (selectedState: any, keyFilter: string) => {\n\tconst { globalFileData, currentLanguage } = getAppStore()\n\n\tconst customStringsList: any[] = selectedState\n\t\t? [\n\t\t\t\t...Object.entries(selectedState.strings.content),\n\t\t\t\t...Object.entries(globalFileData.customStrings.content),\n\t\t  ]\n\t\t: [...Object.entries(globalFileData.customStrings.content)]\n\n\tconst filteredList = keyFilter\n\t\t? customStringsList.filter(([key, _value]: [string, any]) =>\n\t\t\t\tkey.includes(keyFilter.toLowerCase())\n\t\t  )\n\t\t: customStringsList\n\n\treturn filteredList.map(([key, value]: [string, any]) => {\n\t\treturn {\n\t\t\tkey: key,\n\t\t\ttext: value[currentLanguage],\n\t\t}\n\t})[0].text\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tPrimaryButton,\n\tDefaultButton,\n\tTextField,\n\tDropdown,\n\tIDropdownOption,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useRef, useState } from 'react'\nimport {\n\tgetStateCustomStrings,\n\tgetRegionCustomStrings,\n} from '../selectors/locationSelectors'\n\nimport './LocationForm.scss'\n\nexport interface LocationFormProp {\n\titem?: any\n\tonSubmit?: (locationData: any) => void\n\tonCancel?: () => void\n\tisRegion?: boolean\n}\n\nconst setInitialData = (item?: any, isRegion?: boolean) => {\n\tconst getStrings = (item: any, keyFilter: string, isRegion?: boolean) => {\n\t\treturn isRegion\n\t\t\t? getRegionCustomStrings(item, keyFilter)\n\t\t\t: getStateCustomStrings(item, keyFilter)\n\t}\n\n\tif (item) {\n\t\tconst { info, vaccination } = item?.value || {}\n\t\tconst { info: vacInfo, scheduling_phone, eligibility_plan } =\n\t\t\tvaccination?.content?.links || {}\n\n\t\treturn {\n\t\t\tdetails: info.content.name,\n\t\t\tregionType: info.content.type,\n\t\t\tinfo: vacInfo?.url || '',\n\t\t\tworkflow: '',\n\t\t\tscheduling: '',\n\t\t\tproviders: '',\n\t\t\teligibility: '',\n\t\t\teligibilityPlan: eligibility_plan?.url || '',\n\t\t\tschedulingPhone: scheduling_phone?.text\n\t\t\t\t? getStrings(item, scheduling_phone.text, isRegion)\n\t\t\t\t: '',\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tdetails: '',\n\t\t\tregionType: '',\n\t\t\tinfo: '',\n\t\t\tworkflow: '',\n\t\t\tscheduling: '',\n\t\t\tproviders: '',\n\t\t\teligibility: '',\n\t\t\teligibilityPlan: '',\n\t\t\tschedulingPhone: '',\n\t\t}\n\t}\n}\n\nexport default observer(function LocationForm(props: LocationFormProp) {\n\tconst { onSubmit, onCancel, item, isRegion } = props\n\tconst [formData, setFormData] = useState<any>(setInitialData(item, isRegion))\n\tconst fieldChanges = useRef<any>(formData)\n\tconst regionTypeOptions = [\n\t\t{\n\t\t\tkey: 'state',\n\t\t\ttext: 'State',\n\t\t},\n\t\t{\n\t\t\tkey: 'territory',\n\t\t\ttext: 'Territory',\n\t\t},\n\t\t{\n\t\t\tkey: 'tribal_land',\n\t\t\ttext: 'Tribal land',\n\t\t},\n\t\t{\n\t\t\tkey: 'county',\n\t\t\ttext: 'County',\n\t\t},\n\t\t{\n\t\t\tkey: 'city',\n\t\t\ttext: 'City',\n\t\t},\n\t]\n\n\tconst formTitle = item ? `Edit location` : 'Add new location'\n\n\tconst handleRegionChange = useCallback(\n\t\t(_ev: any, item?: IDropdownOption) => {\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\tregionType: item?.key,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">{formTitle}</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<div className=\"detailsGroup\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel=\"Details\"\n\t\t\t\t\t\tname=\"details\"\n\t\t\t\t\t\tvalue={formData.details}\n\t\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tselectedKey={formData.regionType}\n\t\t\t\t\t\tplaceholder=\"Region type\"\n\t\t\t\t\t\toptions={regionTypeOptions}\n\t\t\t\t\t\tonChange={handleRegionChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"General information link for the region:\"\n\t\t\t\t\tname=\"info\"\n\t\t\t\t\tvalue={formData.info}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Link to an existing eligibility workflow tool:\"\n\t\t\t\t\tname=\"workflow\"\n\t\t\t\t\tvalue={formData.workflow}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Appointment registration scheduler:\"\n\t\t\t\t\tname=\"scheduling\"\n\t\t\t\t\tvalue={formData.scheduling}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"List of scheduling providers and locations:\"\n\t\t\t\t\tname=\"providers\"\n\t\t\t\t\tvalue={formData.providers}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Eligibility criteria about the current phase:\"\n\t\t\t\t\tname=\"eligibility\"\n\t\t\t\t\tvalue={formData.eligibility}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Documentation describing the rollout phases in detail:\"\n\t\t\t\t\tname=\"eligibilityPlan\"\n\t\t\t\t\tvalue={formData.eligibilityPlan}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"A scheduling hotline:\"\n\t\t\t\t\tname=\"schedulingPhone\"\n\t\t\t\t\tvalue={formData.schedulingPhone}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton text=\"Submit\" onClick={() => onSubmit?.(formData)} />\n\t\t\t\t<DefaultButton text=\"Cancel\" onClick={() => onCancel?.()} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getAppStore } from '../store/store'\nimport { toProperCase } from '../utils/textUtils'\n\nexport const getPhaseQualifierItems = (selectedState?: any) => {\n    return getCustomStrings(selectedState, 'eligibility.question')\n}\n\nexport const getPhaseQualifierItemsByKey = (selectedState?: any, selectedKey?: any) => {\n    return getPhaseQualifierItems(selectedState).filter(qualifier => qualifier.key.includes(selectedKey))\n}\n\nexport const getPhaseTagItems = (selectedState?: any) => {\n    const phaseQualifiers = getPhaseQualifierItems(selectedState);\n\n    const tagKeys: any[] = []\n    const tagList: any[] = []\n    phaseQualifiers.forEach(qualifier => {\n        const baseKey = qualifier.key.split('/')\n        const tagKey = baseKey[1].split('.')[0];\n\n        if (!tagKeys.includes(tagKey)) {\n            tagKeys.push(tagKey)\n            tagList.push({\n                key: tagKey,\n                text: toProperCase(tagKey)\n            })\n        }\n    })\n\n    return tagList.sort((a,b) => (a.text > b.text) ? 1 : -1)\n}\n\nexport const getPhaseMoreInfoItems = (selectedState?: any) => {\n    return getCustomStrings(selectedState, 'eligibility.moreinfo')\n}\n\nexport const getPhaseMoreInfoTextByKey = (selectedState?: any, selectedKey?: any) => {\n    return getCustomStrings(selectedState, selectedKey)[0].text\n}\n\nconst getCustomStrings = (selectedState?: any, keyFilter?: string) => {\n    const { globalFileData, currentLanguage } = getAppStore();\n    const qualifierList: any[] = selectedState\n        ? [...Object.entries(selectedState.value.strings.content), ...Object.entries(globalFileData.customStrings.content)]\n        : [...Object.entries(globalFileData.customStrings.content)]\n\n    const filteredList = keyFilter ? qualifierList.filter(([key, _value]:[string, any]) => key.includes(keyFilter)) : qualifierList\n    return filteredList\n        .map(([key, value]:[string, any]) => {\n            return {\n                key: key,\n                text: value[currentLanguage]\n            }\n        })\n        .sort((a,b) => (a.text > b.text) ? 1 : -1)\n}","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tIconButton,\n\tDropdown,\n\tDirectionalHint,\n\tTextField,\n\tIDetailsRowProps,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useState, useRef } from 'react'\nimport {\n\tgetPhaseTagItems,\n\tgetPhaseQualifierItems,\n\tgetPhaseMoreInfoItems,\n\tgetPhaseMoreInfoTextByKey,\n\tgetPhaseQualifierItemsByKey,\n} from '../selectors/phaseSelectors'\n\nimport './PhaseQualifierForm.scss'\nexport interface PhaseQualifierFormProps {\n\tselectedState: any\n\trowItems: IDetailsRowProps\n\tisEditable: boolean\n\tonRowItemRemove?: (item: any) => void\n\tonRowItemChange?: (item: IDetailsRowProps) => void\n}\n\nexport default observer(function PhaseQualiferForm(\n\tprops: PhaseQualifierFormProps\n) {\n\tconst {\n\t\tselectedState,\n\t\trowItems,\n\t\tisEditable,\n\t\tonRowItemRemove,\n\t\tonRowItemChange,\n\t} = props\n\tconst phaseTagItems = useRef(getPhaseTagItems(selectedState))\n\tconst phaseQualifierItems = useRef(getPhaseQualifierItems(selectedState))\n\tconst phaseMoreInfoItems = useRef(getPhaseMoreInfoItems(selectedState))\n\tconst [filteredQualifierItems, setFilteredQualifierItems] = useState<any[]>(\n\t\tgetPhaseQualifierItemsByKey(selectedState, rowItems.item.tagKey)\n\t)\n\tconst [moreInfoText, setMoreInfoText] = useState<string>(\n\t\tgetPhaseMoreInfoTextByKey(selectedState, rowItems.item.moreInfoKey)\n\t)\n\tconst [moreInfoUrl, setMoreInfoUrl] = useState<string>(\n\t\trowItems.item.moreInfoUrl\n\t)\n\tconst changedItem = useRef<any>(rowItems.item)\n\n\tconst onTagChange = useCallback(\n\t\t(_event, option) => {\n\t\t\tsetFilteredQualifierItems(\n\t\t\t\tphaseQualifierItems.current.filter(\n\t\t\t\t\t(q) => q.key.split('/')[1].split('.')[0] === option.key\n\t\t\t\t)\n\t\t\t)\n\t\t\tsetMoreInfoText('')\n\t\t\tsetMoreInfoUrl('')\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tkey: `${rowItems.item.groupId}-c19.eligibility.question/${option.key}`,\n\t\t\t\t\ttagKey: option.key,\n\t\t\t\t\tqualifierId: undefined,\n\t\t\t\t\ttext: '',\n\t\t\t\t\tmoreInfoKey: '',\n\t\t\t\t\tmoreInfoContent: '',\n\t\t\t\t},\n\t\t\t}\n\t\t\tonRowItemChange?.({ ...rowItems, ...{ item: changedItem.current } })\n\t\t},\n\t\t[phaseQualifierItems, onRowItemChange, rowItems]\n\t)\n\n\tconst onQualifierChange = useCallback(\n\t\t(_event, option) => {\n\t\t\tconst moreInfoKey = option.key\n\t\t\t\t.replace('question', 'moreinfo')\n\t\t\t\t.split('/')[1]\n\t\t\tconst moreInfoObj = phaseMoreInfoItems.current.find(\n\t\t\t\t(mi) => mi.key.split('/')[1] === moreInfoKey\n\t\t\t)\n\t\t\tmoreInfoObj ? setMoreInfoText(moreInfoObj.text) : setMoreInfoText('')\n\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tqualifierId: option.key,\n\t\t\t\t\ttext: option.text,\n\t\t\t\t\tmoreInfoContent: moreInfoObj?.text,\n\t\t\t\t\tmoreInfoKey:\n\t\t\t\t\t\tmoreInfoObj?.key || option.key.replace('question', 'moreinfo'),\n\t\t\t\t},\n\t\t\t}\n\t\t\tonRowItemChange?.({ ...rowItems, ...{ item: changedItem.current } })\n\t\t},\n\t\t[phaseMoreInfoItems, onRowItemChange, rowItems]\n\t)\n\n\tconst onMoreInfoTextChange = useCallback(\n\t\t(_event, value) => {\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tmoreInfoContent: value,\n\t\t\t\t},\n\t\t\t}\n\t\t\tonRowItemChange?.({ ...rowItems, ...{ item: changedItem.current } })\n\t\t\tsetMoreInfoText(value)\n\t\t},\n\t\t[onRowItemChange, rowItems]\n\t)\n\n\tconst onMoreInfoUrlChange = useCallback(\n\t\t(_event, value) => {\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tmoreInfoUrl: value,\n\t\t\t\t},\n\t\t\t}\n\t\t\tonRowItemChange?.({ ...rowItems, ...{ item: changedItem.current } })\n\t\t\tsetMoreInfoUrl(value)\n\t\t},\n\t\t[onRowItemChange, rowItems]\n\t)\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"phaseDetailRow\"\n\t\t\tstyle={{ pointerEvents: isEditable ? 'unset' : 'none' }}\n\t\t>\n\t\t\t<div className=\"mainRow\">\n\t\t\t\t<Dropdown\n\t\t\t\t\toptions={phaseTagItems.current}\n\t\t\t\t\tdefaultSelectedKey={rowItems.item.tagKey}\n\t\t\t\t\tplaceholder=\"Tag\"\n\t\t\t\t\tclassName=\"tagDropdown\"\n\t\t\t\t\tstyles={{ root: { minWidth: 250 } }}\n\t\t\t\t\tonChange={onTagChange}\n\t\t\t\t/>\n\t\t\t\t<Dropdown\n\t\t\t\t\toptions={filteredQualifierItems}\n\t\t\t\t\tdefaultSelectedKey={rowItems.item.qualifierId}\n\t\t\t\t\tplaceholder=\"Qualifier\"\n\t\t\t\t\tstyles={{ root: { width: '100%', minWidth: 0 } }}\n\t\t\t\t\tonChange={onQualifierChange}\n\t\t\t\t/>\n\t\t\t\t<IconButton\n\t\t\t\t\ticonProps={{ iconName: 'MoreVertical' }}\n\t\t\t\t\tstyles={{ menuIcon: { visibility: 'hidden', width: 0, margin: 0 } }}\n\t\t\t\t\tmenuProps={{\n\t\t\t\t\t\tisBeakVisible: false,\n\t\t\t\t\t\tdirectionalHint: DirectionalHint.rightTopEdge,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'removeRow',\n\t\t\t\t\t\t\t\ttext: 'Remove',\n\t\t\t\t\t\t\t\tonClick: () => onRowItemRemove?.(rowItems.item),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'details',\n\t\t\t\t\t\t\t\ttext: 'Details',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}}\n\t\t\t\t\ttitle=\"More\"\n\t\t\t\t\taria-label=\"More\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"detailsRow\">\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder=\"More info text\"\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={true}\n\t\t\t\t\tresizable={false}\n\t\t\t\t\tstyles={{ root: { width: 'calc(100% - 32px)', padding: '5px 0' } }}\n\t\t\t\t\tvalue={moreInfoText}\n\t\t\t\t\tonChange={onMoreInfoTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder=\"More info url\"\n\t\t\t\t\tstyles={{ root: { width: 'calc(100% - 32px)', padding: '5px 0' } }}\n\t\t\t\t\tvalue={moreInfoUrl}\n\t\t\t\t\tonChange={onMoreInfoUrlChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tIDetailsGroupRenderProps,\n\tIGroup,\n\tFontIcon,\n\tIGroupDividerProps,\n\tIDetailsListProps,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect, useCallback } from 'react'\nimport { getAppStore } from '../store/store'\nimport PhaseQualifierForm from './PhaseQualifierForm'\n\nimport './Locations.scss'\n\nexport interface LocationsPhasesProp {\n\tisRegion: boolean\n\tvalue: any\n\tselectedState: any\n}\n\nconst phaseColumns = [\n\t{\n\t\tkey: 'question',\n\t\tname: 'Question',\n\t\tfieldName: 'text',\n\t\tminWidth: 200,\n\t\tisResizable: false,\n\t\tisMultiline: true,\n\t},\n]\n\nexport default observer(function LocationsPhases(props: LocationsPhasesProp) {\n\tconst {\n\t\tglobalFileData,\n\t\tcurrentLanguage,\n\t\trepoFileData,\n\t\tisEditable,\n\t} = getAppStore()\n\tconst { isRegion, value, selectedState } = props\n\n\tconst [phaseGroup, setPhaseGroup] = useState<IGroup[]>([])\n\tconst [phaseGroupItems, setPhaseGroupItems] = useState<any[]>([])\n\n\tuseEffect(() => {\n\t\tif (repoFileData) {\n\t\t\tconst tempPhaseGroup: IGroup[] = []\n\t\t\tconst tempPhaseGroupItems: any[] = []\n\t\t\tconst currentStateObj: any = repoFileData[selectedState.key]\n\t\t\tconst phaseObj = currentStateObj.vaccination.content.phases\n\n\t\t\tphaseObj.forEach((phase: any) => {\n\t\t\t\tconst isCollapsed: boolean = !isRegion && value.value.id !== phase.id\n\n\t\t\t\tlet isActivePhase = false\n\t\t\t\tif (isRegion) {\n\t\t\t\t\tisActivePhase = value.phase === phase.id\n\t\t\t\t} else {\n\t\t\t\t\tisActivePhase =\n\t\t\t\t\t\tphase.id === currentStateObj.vaccination.content.activePhase\n\t\t\t\t}\n\n\t\t\t\ttempPhaseGroup.push({\n\t\t\t\t\tkey: phase.id + tempPhaseGroup.length,\n\t\t\t\t\tname: phase.label,\n\t\t\t\t\tstartIndex: tempPhaseGroupItems.length,\n\t\t\t\t\tcount: phase.qualifications.length,\n\t\t\t\t\tisCollapsed: isCollapsed,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tkeyId: phase.id,\n\t\t\t\t\t\tisActive: isActivePhase,\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tphase.qualifications.forEach((qualification: any) => {\n\t\t\t\t\tconst keyId: string = String(qualification.question).toLowerCase()\n\t\t\t\t\tlet label = `*Translation not found* (${keyId})`\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tcurrentStateObj.strings &&\n\t\t\t\t\t\tcurrentStateObj.strings.content[keyId]\n\t\t\t\t\t) {\n\t\t\t\t\t\tlabel =\n\t\t\t\t\t\t\tcurrentStateObj.strings.content[keyId][currentLanguage] || label\n\t\t\t\t\t} else if (globalFileData.customStrings.content[keyId]) {\n\t\t\t\t\t\tlabel =\n\t\t\t\t\t\t\tglobalFileData.customStrings.content[keyId][currentLanguage] ||\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t}\n\n\t\t\t\t\ttempPhaseGroupItems.push({\n\t\t\t\t\t\tkey: phase.id + '-' + keyId,\n\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\tmoreInfoKey: qualification?.moreInfoText\n\t\t\t\t\t\t\t? qualification.moreInfoText.toLowerCase()\n\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\tmoreInfoContent: '',\n\t\t\t\t\t\tmoreInfoUrl: qualification.moreInfoUrl,\n\t\t\t\t\t\tqualifierId: keyId,\n\t\t\t\t\t\ttagKey: keyId.split('/')[1].split('.')[0],\n\t\t\t\t\t\tgroupId: phase.id,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tif (value.isNew) {\n\t\t\t\ttempPhaseGroup.push({\n\t\t\t\t\tkey: value.keyId + tempPhaseGroup.length,\n\t\t\t\t\tname: `Phase ${value.value.id}`,\n\t\t\t\t\tstartIndex: tempPhaseGroupItems.length,\n\t\t\t\t\tcount: value.qualifications.length,\n\t\t\t\t\tisCollapsed: false,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tkeyId: value.value.id,\n\t\t\t\t\t\tisActive: value.isActive,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tsetPhaseGroup(tempPhaseGroup)\n\t\t\tsetPhaseGroupItems(tempPhaseGroupItems)\n\t\t}\n\t}, [repoFileData, globalFileData, selectedState, currentLanguage, isRegion, value])\n\n\tconst onAddQualifierClick = useCallback(\n\t\t(phaseId: any) => {\n\t\t\tconst newPhaseGroupItems: any[] = []\n\t\t\tconst newPhaseGroup: any[] = []\n\t\t\tconst insertIdx =\n\t\t\t\tphaseGroupItems\n\t\t\t\t\t.map((i) => i.key.startsWith(phaseId))\n\t\t\t\t\t.lastIndexOf(true) + 1\n\n\t\t\tconst newItem = {\n\t\t\t\tkey: `${phaseId}-c19.eligibility.question/new_qualifier`,\n\t\t\t\ttext: '',\n\t\t\t\tmoreInfoKey: '',\n\t\t\t\tmoreInfoUrl: '',\n\t\t\t\tqualifierId: 'c19.eligibility.question/new_qualifier',\n\t\t\t\ttagKey: 'new_tagKey',\n\t\t\t\tgroupId: phaseId,\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < phaseGroupItems.length; i++) {\n\t\t\t\tif (i === insertIdx) {\n\t\t\t\t\tnewPhaseGroupItems.push(newItem)\n\t\t\t\t\tnewPhaseGroupItems.push(phaseGroupItems[i])\n\t\t\t\t} else {\n\t\t\t\t\tnewPhaseGroupItems.push(phaseGroupItems[i])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (insertIdx === phaseGroupItems.length) {\n\t\t\t\tnewPhaseGroupItems.push(newItem)\n\t\t\t}\n\n\t\t\tphaseGroup.forEach((group) => {\n\t\t\t\tnewPhaseGroup.push({\n\t\t\t\t\t...group,\n\t\t\t\t\t...{\n\t\t\t\t\t\tstartIndex: newPhaseGroupItems.findIndex(\n\t\t\t\t\t\t\t(i) => i.groupId === group.data.keyId\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcount: newPhaseGroupItems.filter(\n\t\t\t\t\t\t\t(i) => i.groupId === group.data.keyId\n\t\t\t\t\t\t).length,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tsetPhaseGroup(newPhaseGroup)\n\t\t\tsetPhaseGroupItems(newPhaseGroupItems)\n\t\t},\n\t\t[phaseGroupItems, phaseGroup]\n\t)\n\n\tconst onRemoveRowItem = useCallback(\n\t\t(item: any) => {\n\t\t\tconst newPhaseGroupItems = phaseGroupItems.filter(\n\t\t\t\t(groupItem) => groupItem.key !== item.key\n\t\t\t)\n\n\t\t\tconst newPhaseGroup: any[] = []\n\t\t\tphaseGroup.forEach((group) => {\n\t\t\t\tnewPhaseGroup.push({\n\t\t\t\t\t...group,\n\t\t\t\t\t...{\n\t\t\t\t\t\tstartIndex: newPhaseGroupItems.findIndex(\n\t\t\t\t\t\t\t(i) => i.groupId === group.data.keyId\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcount: newPhaseGroupItems.filter(\n\t\t\t\t\t\t\t(i) => i.groupId === group.data.keyId\n\t\t\t\t\t\t).length,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tsetPhaseGroup(newPhaseGroup)\n\t\t\tsetPhaseGroupItems(newPhaseGroupItems)\n\t\t},\n\t\t[phaseGroupItems, phaseGroup]\n\t)\n\n\tconst onRemovePhaseGroupClick = useCallback(\n\t\t(phaseId: any) => {\n\t\t\tconst newPhaseGroupItems = phaseGroupItems.filter(\n\t\t\t\t(groupItem) => groupItem.groupId !== phaseId\n\t\t\t)\n\n\t\t\tconst newPhaseGroup: any[] = []\n\t\t\tphaseGroup\n\t\t\t\t.filter((group) => group.data.keyId !== phaseId)\n\t\t\t\t.forEach((group) => {\n\t\t\t\t\tnewPhaseGroup.push({\n\t\t\t\t\t\t...group,\n\t\t\t\t\t\t...{\n\t\t\t\t\t\t\tstartIndex: newPhaseGroupItems.findIndex(\n\t\t\t\t\t\t\t\t(i) => i.groupId === group.data.keyId\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcount: newPhaseGroupItems.filter(\n\t\t\t\t\t\t\t\t(i) => i.groupId === group.data.keyId\n\t\t\t\t\t\t\t).length,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\tsetPhaseGroup(newPhaseGroup)\n\t\t\tsetPhaseGroupItems(newPhaseGroupItems)\n\t\t},\n\t\t[phaseGroupItems, phaseGroup]\n\t)\n\n\tconst onRenderHeader: IDetailsGroupRenderProps['onRenderHeader'] = (\n\t\tprops\n\t) => {\n\t\tif (props?.group) {\n\t\t\tconst { group } = props\n\t\t\treturn (\n\t\t\t\t<div className=\"phaseGroupHeader\">\n\t\t\t\t\t<div className=\"groupHeaderLabel\" onClick={onToggleCollapse(props)}>\n\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\ticonName={group.isCollapsed ? 'ChevronRight' : 'ChevronDown'}\n\t\t\t\t\t\t\tclassName=\"groupToggleIcon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{group.name ? (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{group.name} <small>({group.data.keyId})</small>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t`Phase ${group.data.keyId}`\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"groupHeaderButtons\">\n\t\t\t\t\t\t{isEditable ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"addQualifierGroup\"\n\t\t\t\t\t\t\t\t\tonClick={() => onAddQualifierClick(group.data.keyId)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\tAdd Qualifier\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"removePhaseGroup\"\n\t\t\t\t\t\t\t\t\tonClick={() => onRemovePhaseGroupClick(group.data.keyId)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"Blocked2Solid\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#d13438' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{group.data.isActive ? (\n\t\t\t\t\t\t\t\t\t<div className=\"activeGroup\">\n\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleFill\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\tActive Phase\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className=\"activeGroup\">\n\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleRing\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\tSet as Active\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{group.data.isActive && (\n\t\t\t\t\t\t\t\t\t<div className=\"activeGroup\">\n\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleFill\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\tActive Phase\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn null\n\t}\n\n\tconst onToggleCollapse = (props: IGroupDividerProps): (() => void) => {\n\t\treturn () => {\n\t\t\tprops!.onToggleCollapse!(props!.group!)\n\t\t}\n\t}\n\n\tconst onRenderRow: IDetailsListProps['onRenderRow'] = (props) => {\n\t\tif (props) {\n\t\t\treturn (\n\t\t\t\t<PhaseQualifierForm\n\t\t\t\t\trowItems={props}\n\t\t\t\t\tselectedState={selectedState}\n\t\t\t\t\tisEditable={isEditable}\n\t\t\t\t\tonRowItemRemove={onRemoveRowItem}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"phaseGridContainer\">\n\t\t\t<DetailsList\n\t\t\t\tindentWidth={0}\n\t\t\t\titems={phaseGroupItems}\n\t\t\t\tgroups={phaseGroup}\n\t\t\t\tcolumns={phaseColumns}\n\t\t\t\tgroupProps={{\n\t\t\t\t\tshowEmptyGroups: true,\n\t\t\t\t\tonRenderHeader: onRenderHeader,\n\t\t\t\t}}\n\t\t\t\tonRenderRow={onRenderRow}\n\t\t\t\tisHeaderVisible={false}\n\t\t\t\tcheckboxVisibility={2}\n\t\t\t\tconstrainMode={1}\n\t\t\t\tselectionMode={1}\n\t\t\t\tonShouldVirtualize={() => false}\n\t\t\t/>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tPrimaryButton,\n\tDefaultButton,\n\tTextField,\n\tCheckbox,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useRef, useState } from 'react'\n\nimport './PhaseForm.scss'\n\nexport interface PhaseFormProp {\n\tonSubmit?: (phaseData: any) => void\n\tonCancel?: () => void\n}\n\nexport default observer(function PhaseForm(props: PhaseFormProp) {\n\tconst { onSubmit, onCancel } = props\n\tconst [formData, setFormData] = useState<any>({})\n\tconst fieldChanges = useRef<any>(formData)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst handleCheckboxChange = useCallback(\n\t\t(_ev: any, checked?: boolean) => {\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\tisActive: checked,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">New Phase</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Phase Id:\"\n\t\t\t\t\tname=\"phaseId\"\n\t\t\t\t\tvalue={formData.phaseId}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"Phase Name:\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={formData.name}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<Checkbox label=\"Active\" onChange={handleCheckboxChange} />\n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton text=\"Submit\" onClick={() => onSubmit?.(formData)} />\n\t\t\t\t<DefaultButton text=\"Cancel\" onClick={() => onCancel?.()} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tIColumn,\n\tFontIcon,\n\tModal,\n\tSearchBox,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useRef, useEffect, useCallback } from 'react'\nimport { getAppStore } from '../store/store'\nimport { toProperCase } from '../utils/textUtils'\nimport LocationForm from './LocationForm'\nimport LocationsPhases from './LocationsPhases'\nimport PhaseForm from './PhaseForm'\n\nimport './Locations.scss'\n\nexport interface LocationsRegionsProp {\n\tselectedState: any\n\tonNavigateBack: () => void\n}\n\nexport default observer(function LocationsRegions(props: LocationsRegionsProp) {\n\tconst [filteredRegionsList, setFilteredRegionsList] = useState<any[]>([])\n\tconst stateRegionsFullList = useRef<any[]>([])\n\tconst [selectedPhaseItem, setSelectedPhaseItem] = useState<{\n\t\tisRegion: boolean\n\t\tvalue: any\n\t\tselectedState: any\n\t}>({ isRegion: false, value: null, selectedState: null })\n\tconst [\n\t\tisLocationModalOpen,\n\t\t{ setTrue: openLocationModal, setFalse: dismissLocationModal },\n\t] = useBoolean(false)\n\tconst [\n\t\tisPhaseModalOpen,\n\t\t{ setTrue: openPhaseModal, setFalse: dismissPhaseModal },\n\t] = useBoolean(false)\n\tconst selectedSublocationItem = useRef<any>(null)\n\n\tconst state = getAppStore()\n\n\tconst { selectedState, onNavigateBack } = props\n\n\tconst subLocationsColumns = [\n\t\t{\n\t\t\tkey: 'regionCol',\n\t\t\tname: 'Region',\n\t\t\tfieldName: 'name',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'activePhaseCol',\n\t\t\tname: 'Active Phase ID',\n\t\t\tfieldName: 'phase',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editLocation',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter((loc) => (state.isEditable ? true : loc.key !== 'editCol'))\n\n\tconst phaseColumns = [\n\t\t{\n\t\t\tkey: 'idCol',\n\t\t\tname: 'Phase ID',\n\t\t\tfieldName: 'keyId',\n\t\t\tminWidth: 50,\n\t\t\tmaxWidth: 200,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'nameCol',\n\t\t\tname: 'Name',\n\t\t\tfieldName: 'name',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'qualCol',\n\t\t\tname: '# of qualifications',\n\t\t\tfieldName: 'qualifications',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: false,\n\t\t},\n\t]\n\n\tconst [phaseItemList, setPhaseItemList] = useState<any[]>(\n\t\tsetInitialPhaseItems(selectedState)\n\t)\n\n\tuseEffect(() => {\n\t\tif (selectedState?.regions > 0) {\n\t\t\tconst tempList: any[] = []\n\t\t\tObject.entries(selectedState.value.regions).forEach(([key, value]) => {\n\t\t\t\tconst valObj = value as any\n\t\t\t\ttempList.push({\n\t\t\t\t\tkey: key,\n\t\t\t\t\tname: toProperCase(key),\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tphase: valObj.vaccination.content.activePhase\n\t\t\t\t\t\t? valObj.vaccination.content.activePhase\n\t\t\t\t\t\t: selectedState.value.vaccination.content.activePhase,\n\t\t\t\t})\n\t\t\t})\n\t\t\tsetFilteredRegionsList(tempList)\n\t\t\tstateRegionsFullList.current = tempList\n\t\t}\n\t}, [selectedState, stateRegionsFullList])\n\n\tconst selectedPhase = useCallback(\n\t\t(isRegion: boolean, value: any) => {\n\t\t\tsetSelectedPhaseItem({ isRegion, value, selectedState })\n\t\t},\n\t\t[selectedState]\n\t)\n\n\tconst onLocationFormSubmit = useCallback(\n\t\t(_locationData) => {\n\t\t\tdismissLocationModal()\n\t\t},\n\t\t[dismissLocationModal]\n\t)\n\n\tconst onLocationFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedSublocationItem.current = item ?? null\n\t\t\topenLocationModal()\n\t\t},\n\t\t[openLocationModal]\n\t)\n\n\tconst onRenderItemColumn = useCallback(\n\t\t(item?: any, _index?: number, column?: IColumn) => {\n\t\t\tconst fieldContent = item[column?.fieldName as keyof any] as string\n\n\t\t\tif (column?.key === 'editCol') {\n\t\t\t\treturn state.isEditable ? (\n\t\t\t\t\t<FontIcon\n\t\t\t\t\t\ticonName=\"Edit\"\n\t\t\t\t\t\tclassName=\"editIcon\"\n\t\t\t\t\t\tonClick={() => onLocationFormOpen(item)}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t} else {\n\t\t\t\treturn <span>{fieldContent}</span>\n\t\t\t}\n\t\t},\n\t\t[onLocationFormOpen, state.isEditable]\n\t)\n\n\tconst onRegionFilter = useCallback(\n\t\t(_event: any, text?: string | undefined) => {\n\t\t\tif (text) {\n\t\t\t\tsetFilteredRegionsList(\n\t\t\t\t\tstateRegionsFullList.current.filter(\n\t\t\t\t\t\t(region) => region.name.toLowerCase().indexOf(text) > -1\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tsetFilteredRegionsList(stateRegionsFullList.current)\n\t\t\t}\n\t\t},\n\t\t[stateRegionsFullList]\n\t)\n\n\tconst onPhaseFormSubmit = useCallback(\n\t\t(phaseData) => {\n\t\t\tdismissPhaseModal()\n\n\t\t\t//TODO: check to move added phase to repoFileData level if possible\n\t\t\tconst updatedList: any[] = phaseItemList\n\t\t\tupdatedList.push({\n\t\t\t\tkey: String(phaseData.phaseId) + phaseItemList.length,\n\t\t\t\tkeyId: phaseData.name + (phaseData.isActive ? ' (active)' : ''),\n\t\t\t\tname: phaseData.name + (phaseData.isActive ? ' (active)' : ''),\n\t\t\t\tqualifications: 0,\n\t\t\t\tvalue: {\n\t\t\t\t\tid: phaseData.phaseId,\n\t\t\t\t\tqualifications: [],\n\t\t\t\t},\n\t\t\t\tisActive: phaseData.isActive,\n\t\t\t\tisNew: true,\n\t\t\t})\n\n\t\t\tsetPhaseItemList(updatedList)\n\t\t},\n\t\t[phaseItemList, setPhaseItemList, dismissPhaseModal]\n\t)\n\n\treturn (\n\t\t<div className=\"bodyContainer\">\n\t\t\t<div className=\"bodyHeader subContent\">\n\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t<div className=\"breadCrumbs\">\n\t\t\t\t\t\t<span className=\"crumbLink\" onClick={onNavigateBack}>\n\t\t\t\t\t\t\t/ Locations{' '}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{selectedPhaseItem.value ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName=\"crumbLink\"\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tsetSelectedPhaseItem({\n\t\t\t\t\t\t\t\t\t\t\tisRegion: false,\n\t\t\t\t\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\t\t\t\t\tselectedState: null,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t/ {selectedState.text + ' '}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{selectedPhaseItem.isRegion ? (\n\t\t\t\t\t\t\t\t\t<>/ {selectedPhaseItem.value.name}</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>/ Phase Overview</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>/ {selectedState.text}</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mainTitle\">\n\t\t\t\t\t\t{selectedPhaseItem.value ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{selectedPhaseItem.isRegion ? (\n\t\t\t\t\t\t\t\t\t<>{selectedPhaseItem.value.name} Region Phase Overview</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>{selectedState.text} Phase Overview</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>{selectedState.text}</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{selectedPhaseItem.value ? (\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<LocationsPhases\n\t\t\t\t\t\t\tisRegion={selectedPhaseItem.isRegion}\n\t\t\t\t\t\t\tvalue={selectedPhaseItem.value}\n\t\t\t\t\t\t\tselectedState={selectedState}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t{selectedState.value.vaccination.content.phases.length > 0 ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"listTitle\">Phases</div>\n\t\t\t\t\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"addLocationHeaderButton\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={openPhaseModal}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\tAdd Phase\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\t\titems={phaseItemList}\n\t\t\t\t\t\t\t\t\tcolumns={phaseColumns}\n\t\t\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t\t\tonItemInvoked={(item) => selectedPhase(false, item)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>No phases available at this time.</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t{selectedState.regions > 0 ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"listTitle\">Sublocation</div>\n\t\t\t\t\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t\t\t\t\t<SearchBox\n\t\t\t\t\t\t\t\t\t\tstyles={{ root: { width: 400 } }}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\t\t\t\tonChange={(ev, text) => onRegionFilter(ev, text)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"addLocationHeaderButton\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => onLocationFormOpen(null)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\tAdd Sublocation\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\t\titems={filteredRegionsList}\n\t\t\t\t\t\t\t\t\tcolumns={subLocationsColumns}\n\t\t\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\t\t\tselectionPreservedOnEmptyClick={true}\n\t\t\t\t\t\t\t\t\tariaLabelForSelectionColumn=\"Toggle selection\"\n\t\t\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n\t\t\t\t\t\t\t\t\tcheckButtonAriaLabel=\"Row checkbox\"\n\t\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t\t\tonItemInvoked={(item) => selectedPhase(true, item)}\n\t\t\t\t\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\t\t\t\t\tclassName=\"locationDetailsList\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>No regions available at this time.</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Modal\n\t\t\t\tisOpen={isLocationModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<LocationForm\n\t\t\t\t\titem={selectedSublocationItem.current}\n\t\t\t\t\tonCancel={dismissLocationModal}\n\t\t\t\t\tonSubmit={onLocationFormSubmit}\n\t\t\t\t\tisRegion={true}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t\t<Modal\n\t\t\t\tisOpen={isPhaseModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<PhaseForm onCancel={dismissPhaseModal} onSubmit={onPhaseFormSubmit} />\n\t\t\t</Modal>\n\t\t</div>\n\t)\n})\n\nconst setInitialPhaseItems = (selectedState: any): any[] => {\n\treturn selectedState.value.vaccination.content.phases.map(\n\t\t(phase: any, idx: number) => {\n\t\t\tconst activePhase: string =\n\t\t\t\tselectedState.value.vaccination.content.activePhase\n\t\t\treturn {\n\t\t\t\tkey: String(phase.id) + idx,\n\t\t\t\tkeyId: String(phase.id) + (phase.id === activePhase ? ' (active)' : ''),\n\t\t\t\tname:\n\t\t\t\t\ttoProperCase(phase.label ?? phase.id) +\n\t\t\t\t\t(phase.id === activePhase ? ' (active)' : ''),\n\t\t\t\tqualifications: phase.qualifications.length,\n\t\t\t\tvalue: phase,\n\t\t\t\tisNew: false,\n\t\t\t}\n\t\t}\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tProgressIndicator,\n\tFontIcon,\n\tModal,\n\tIColumn,\n\tSearchBox,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useRef, useEffect, useCallback } from 'react'\nimport { getAppStore } from '../store/store'\nimport LocationForm from './LocationForm'\n\nimport './Locations.scss'\n\nexport interface LocationsStatesProp {\n\tonSelectedItem: (item: any) => void\n}\n\nexport default observer(function LocationsStates(props: LocationsStatesProp) {\n\tconst { onSelectedItem } = props\n\n\tconst [\n\t\tisLocationModalOpen,\n\t\t{ setTrue: openLocationModal, setFalse: dismissLocationModal },\n\t] = useBoolean(false)\n\tconst [filteredStateList, setFilteredStateList] = useState<any[]>([])\n\tconst stateRepoFullList = useRef<any[]>([])\n\tconst selectedLocationItem = useRef<any>(null)\n\n\tconst state = getAppStore()\n\n\tconst locationColumns = [\n\t\t{\n\t\t\tkey: 'stateCol',\n\t\t\tname: 'State',\n\t\t\tfieldName: 'text',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'regionCol',\n\t\t\tname: 'Sublocations',\n\t\t\tfieldName: 'regions',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editLocation',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter((loc) => (state.isEditable ? true : loc.key !== 'editCol'))\n\n\tuseEffect(() => {\n\t\tif (state.repoFileData) {\n\t\t\tconst tempList: any[] = []\n\t\t\tObject.entries(state.repoFileData).forEach(([key, value]) => {\n\t\t\t\tconst stateId = value?.info?.content.id\n\t\t\t\tconst stateNames = state?.globalFileData?.cdcStateNames.content\n\n\t\t\t\tconst stateLabel =\n\t\t\t\t\tstateNames[`cdc/${stateId}/state_name`] &&\n\t\t\t\t\tstateNames[`cdc/${stateId}/state_name`][state.currentLanguage] &&\n\t\t\t\t\tstateNames[`cdc/${stateId}/state_name`][\n\t\t\t\t\t\tstate.currentLanguage\n\t\t\t\t\t].trim() !== ''\n\t\t\t\t\t\t? stateNames[`cdc/${stateId}/state_name`][state.currentLanguage]\n\t\t\t\t\t\t: `*Translation Not Found* (${stateId})`\n\n\t\t\t\ttempList.push({\n\t\t\t\t\tkey: key,\n\t\t\t\t\ttext: stateLabel,\n\t\t\t\t\tregions: value?.regions ? Object.keys(value.regions).length : 0,\n\t\t\t\t\tvalue: value,\n\t\t\t\t})\n\t\t\t})\n\t\t\tsetFilteredStateList(tempList)\n\t\t\tstateRepoFullList.current = tempList\n\t\t}\n\t}, [state.repoFileData, state.globalFileData, state.currentLanguage, stateRepoFullList])\n\n\tconst onStateFilter = useCallback(\n\t\t(_event: any, text?: string | undefined) => {\n\t\t\tif (text) {\n\t\t\t\tsetFilteredStateList(\n\t\t\t\t\tstateRepoFullList.current.filter(\n\t\t\t\t\t\t(state) => state.text.toLowerCase().indexOf(text) > -1\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tsetFilteredStateList(stateRepoFullList.current)\n\t\t\t}\n\t\t},\n\t\t[stateRepoFullList]\n\t)\n\n\tconst openSelection = useCallback(\n\t\t(item: any) => {\n\t\t\tonSelectedItem(item)\n\t\t},\n\t\t[onSelectedItem]\n\t)\n\n\tconst onLocationFormSubmit = useCallback(\n\t\t(_locationData) => {\n\t\t\tdismissLocationModal()\n\t\t},\n\t\t[dismissLocationModal]\n\t)\n\n\tconst onLocationFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedLocationItem.current = item ?? null\n\t\t\topenLocationModal()\n\t\t},\n\t\t[openLocationModal]\n\t)\n\n\tconst onRenderItemColumn = useCallback(\n\t\t(item?: any, _index?: number, column?: IColumn) => {\n\t\t\tconst fieldContent = item[column?.fieldName as keyof any] as string\n\n\t\t\tif (column?.key === 'editCol') {\n\t\t\t\treturn state.isEditable ? (\n\t\t\t\t\t<FontIcon\n\t\t\t\t\t\ticonName=\"Edit\"\n\t\t\t\t\t\tclassName=\"editIcon\"\n\t\t\t\t\t\tonClick={() => onLocationFormOpen(item)}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t} else {\n\t\t\t\treturn <span>{fieldContent}</span>\n\t\t\t}\n\t\t},\n\t\t[onLocationFormOpen, state.isEditable]\n\t)\n\n\treturn (\n\t\t<div className=\"bodyContainer\">\n\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t<div className=\"breadCrumbs\">/ Locations</div>\n\t\t\t\t\t<div className=\"mainTitle\">Locations</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"bodyContent\">\n\t\t\t\t{state.repoFileData ? (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t\t\t<SearchBox\n\t\t\t\t\t\t\t\tstyles={{ root: { width: 400 } }}\n\t\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\t\tonChange={(ev, text) => onStateFilter(ev, text)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"addLocationHeaderButton\"\n\t\t\t\t\t\t\t\t\tonClick={() => onLocationFormOpen(null)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\tAdd Location\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\titems={filteredStateList}\n\t\t\t\t\t\t\tcolumns={locationColumns}\n\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\tselectionPreservedOnEmptyClick={true}\n\t\t\t\t\t\t\tariaLabelForSelectionColumn=\"Toggle selection\"\n\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n\t\t\t\t\t\t\tcheckButtonAriaLabel=\"Row checkbox\"\n\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\tonItemInvoked={openSelection}\n\t\t\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\t\t\tclassName=\"locationDetailsList\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t) : (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<ProgressIndicator description=\"Loading content...\" />\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\tisOpen={isLocationModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<LocationForm\n\t\t\t\t\titem={selectedLocationItem.current}\n\t\t\t\t\tonCancel={dismissLocationModal}\n\t\t\t\t\tonSubmit={onLocationFormSubmit}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport { useState, useCallback } from 'react'\nimport LocationsRegions from './LocationsRegions'\nimport LocationsStates from './LocationsStates'\n\nimport './Locations.scss'\n\nexport default observer(function Locations() {\n\tconst [selectedState, setSelectedState] = useState<any>(null)\n\n\tconst onNavigateBack = useCallback(() => {\n\t\tsetSelectedState(null)\n\t}, [])\n\n\treturn (\n\t\t<div className=\"locationPageContainer\">\n\t\t\t{!selectedState ? (\n\t\t\t\t<LocationsStates onSelectedItem={setSelectedState} />\n\t\t\t) : (\n\t\t\t\t<LocationsRegions\n\t\t\t\t\tselectedState={selectedState}\n\t\t\t\t\tonNavigateBack={onNavigateBack}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { action } from 'satcheljs'\n\nexport const loginUser = action('loginUser')\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport { DefaultButton } from 'office-ui-fabric-react'\nimport { loginUser } from '../actions/authActions'\n\nimport './Login.scss'\n\nexport default observer(function Login() {\n\treturn (\n\t\t<div className=\"loginPageContainer\">\n\t\t\t<div className=\"loginContainer\">\n\t\t\t\t<h3>Data Composer</h3>\n\t\t\t\t<DefaultButton text=\"Login with Github\" onClick={loginUser} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { IGroup, DetailsList } from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect } from 'react'\nimport { getAppStore } from '../store/store'\nimport { toProperCase } from '../utils/textUtils'\n\nimport './QualifierPanel.scss'\n\nexport default observer(function QualifierPanel() {\n\tconst { globalFileData, currentLanguage } = getAppStore()\n\tconst [qualifierGroup, setQualifierGroup] = useState<IGroup[]>([])\n\tconst [qualifierGroupItems, setQualifierGroupItems] = useState<any[]>([])\n\n\tuseEffect(() => {\n\t\tif (globalFileData?.customStrings) {\n\t\t\tconst groupKeys: any[] = []\n\t\t\tconst questionItemKeys: any[] = []\n\n\t\t\tconst tempQualifierGroup: IGroup[] = []\n\t\t\tconst tempQualifierGroupItems: any[] = []\n\n\t\t\tconst contentObj = globalFileData.customStrings.content\n\t\t\tconst questionKeys = Object.keys(contentObj).filter((k) =>\n\t\t\t\tk.includes('eligibility.question')\n\t\t\t)\n\n\t\t\tquestionKeys.forEach((key) => {\n\t\t\t\tconst questionGroupKey = key.split('/')[1].split('.')\n\n\t\t\t\tif (!groupKeys.includes(questionGroupKey[0])) {\n\t\t\t\t\tgroupKeys.push(questionGroupKey[0])\n\n\t\t\t\t\ttempQualifierGroup.push({\n\t\t\t\t\t\tkey: questionGroupKey[0],\n\t\t\t\t\t\tname: toProperCase(questionGroupKey[0]),\n\t\t\t\t\t\tstartIndex: tempQualifierGroupItems.length,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tisCollapsed: true,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconst groupIdx = tempQualifierGroup.findIndex(\n\t\t\t\t\t\t(obj) => obj.key === questionGroupKey[0]\n\t\t\t\t\t)\n\t\t\t\t\ttempQualifierGroup[groupIdx].count++\n\t\t\t\t}\n\n\t\t\t\tif (!questionItemKeys.includes(key)) {\n\t\t\t\t\tquestionItemKeys.push(key)\n\n\t\t\t\t\ttempQualifierGroupItems.push({\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\ttext: contentObj[key][currentLanguage]\n\t\t\t\t\t\t\t? contentObj[key][currentLanguage]\n\t\t\t\t\t\t\t: `*Translation Not Found* (${currentLanguage})`,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t// open the first group:\n\t\t\ttempQualifierGroup[0].isCollapsed = false\n\n\t\t\tsetQualifierGroup(tempQualifierGroup)\n\t\t\tsetQualifierGroupItems(tempQualifierGroupItems)\n\t\t}\n\t}, [globalFileData, currentLanguage, setQualifierGroup, setQualifierGroupItems])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: 'questionColKey',\n\t\t\tname: 'Question',\n\t\t\tfieldName: 'text',\n\t\t\tminWidth: 100,\n\t\t\tisResizable: false,\n\t\t},\n\t]\n\n\treturn (\n\t\t<div className=\"qualifierPanelContainer\">\n\t\t\t<div className=\"panelHeader\">\n\t\t\t\t<div className=\"panelHeaderTitle\">Qualifiers</div>\n\t\t\t</div>\n\t\t\t<div className=\"panelBody\">\n\t\t\t\t<section>\n\t\t\t\t\t<DetailsList\n\t\t\t\t\t\titems={qualifierGroupItems}\n\t\t\t\t\t\tgroups={qualifierGroup}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tgroupProps={{\n\t\t\t\t\t\t\tshowEmptyGroups: false,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcompact={true}\n\t\t\t\t\t\tisHeaderVisible={false}\n\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\tclassName=\"qualifierGroupItem\"\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\n\nimport './Translate.scss'\n\nexport default observer(function Translate() {\n\treturn (\n\t\t<div className=\"translatePageContainer\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t<div className=\"breadCrumbs\">/ Translate</div>\n\t\t\t\t\t\t<div className=\"mainTitle\">Translate</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t<section>this is where contents go</section>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDropdown,\n\tIconButton,\n\tPersona,\n\tPersonaSize,\n\tPivot,\n\tPivotItem,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { setCurrentLanguage } from '../mutators/repoMutators'\nimport {\n\tisUserAuthenticated,\n\tisUserAuthorized,\n} from '../selectors/authSelectors'\nimport { getAppStore } from '../store/store'\nimport { getLanguageDisplayText } from '../utils/textUtils'\nimport Dashboard from './Dashboard'\nimport { Footer } from './Footer'\nimport Locations from './Locations'\nimport Login from './Login'\nimport QualifierPanel from './QualifierPanel'\nimport Translate from './Translate'\n\nimport './App_reset_styles.scss'\nimport './App.scss'\n\nexport default observer(function App() {\n\tconst state = getAppStore()\n\n\tconst languageKeys = 'en-us,ko-kr,vi-vn,zh-cn,es-us,de-de,es-es,fi-fi,fr-fr,he-il,it-it,ja-jp,pt-pt,sv-se,th-th'.split(\n\t\t','\n\t)\n\n\tconst languageOptions = languageKeys.map((key) => {\n\t\treturn {\n\t\t\tkey: key,\n\t\t\ttext: getLanguageDisplayText(key, key),\n\t\t}\n\t})\n\n\treturn (\n\t\t<div className=\"rootContentWrapper\">\n\t\t\t{isUserAuthenticated() ? (\n\t\t\t\t<>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<div className=\"appPageContainer\">\n\t\t\t\t\t\t\t\t<div className=\"appHeaderWrapper\">\n\t\t\t\t\t\t\t\t\t<div className=\"appHeaderContainer\">\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\ticonProps={{ iconName: 'waffle' }}\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Apps\"\n\t\t\t\t\t\t\t\t\t\t\tstyles={{\n\t\t\t\t\t\t\t\t\t\t\t\ticon: { fontSize: '24px', color: 'white' },\n\t\t\t\t\t\t\t\t\t\t\t\trootHovered: { backgroundColor: 'transparent' },\n\t\t\t\t\t\t\t\t\t\t\t\trootPressed: { backgroundColor: 'transparent' },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className=\"appHeaderTitle\">Data Composer</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"appHeaderPersona\">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultSelectedKey={state.currentLanguage}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e, o) => setCurrentLanguage(o)}\n\t\t\t\t\t\t\t\t\t\t\t\tariaLabel=\"Pick Language\"\n\t\t\t\t\t\t\t\t\t\t\t\toptions={languageOptions}\n\t\t\t\t\t\t\t\t\t\t\t\tstyles={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tdropdown: { border: 'none' },\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'white !important',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tcaretDown: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'white !important',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tdropdownOptionText: { fontSize: '14px' },\n\t\t\t\t\t\t\t\t\t\t\t\t\troot: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectors: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t':hover': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,.25);',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"appHeaderUsername\">\n\t\t\t\t\t\t\t\t\t\t\t{state.userDisplayName}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<Persona\n\t\t\t\t\t\t\t\t\t\t\ttext={state.userDisplayName}\n\t\t\t\t\t\t\t\t\t\t\tsize={PersonaSize.size32}\n\t\t\t\t\t\t\t\t\t\t\thidePersonaDetails={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"appBodyWrapper\">\n\t\t\t\t\t\t\t\t\t{isUserAuthorized() ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"appBodyLeft\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Pivot>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem headerText=\"Dashboard\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dashboard />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem headerText=\"Locations\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Locations />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem headerText=\"Translate\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Translate />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t</Pivot>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{state.toggleQualifier && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"appBodyRight\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<QualifierPanel />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"appBodyLeft\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"dashboardPageWrapper\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mainTitle\">Welcome!</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<section style={{ width: '70%', margin: '0px auto' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tThank you for your interest in helping to manage the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata, unfortunately right now access to this tool\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequires collaborator permissions on{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={`https://www.github.com/${process.env.REACT_APP_REPO_OWNER}/${process.env.REACT_APP_REPO_NAME}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis repo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t. Feel free to request access over on GitHub!\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t\t<div>404 page not found.</div>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Login />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t)}\n\t\t\t<Footer />\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getAppStore } from '../store/store'\n\nexport const isUserAuthenticated = (): boolean => {\n\treturn getAppStore().isAuthenticated\n}\n\nexport const isUserAuthorized = (): boolean => {\n\treturn getAppStore().isAuthorized\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { action } from 'satcheljs'\n\nexport const createPR = action('createPR', (fileData: any) => ({\n\tfileData,\n}))\n\nexport const getRepoFileData = action('getRepoFileData')\n\nexport const initializeGitData = action('initializeGitData')\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { mutatorAction } from 'satcheljs'\nimport { AppState } from '../store/schema/AppState'\nimport { getAppStore } from '../store/store'\n\nexport const setUserAuthData = mutatorAction(\n\t'setUserAuthData',\n\t(data: AppState | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.accessToken = data.accessToken\n\t\t\tstore.email = data.email\n\t\t\tstore.isAuthenticated = data.isAuthenticated\n\t\t\tstore.userDisplayName = data.userDisplayName\n\t\t\tstore.username = data.username\n\t\t}\n\t}\n)\n\nexport const setUserNoAccess = mutatorAction('setUserNoAccess', () => {\n\tconst store = getAppStore()\n\tstore.isAuthorized = false\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { AppState } from '../store/schema/AppState'\n\nexport const loginUserService = async (): Promise<AppState | undefined> => {\n\tlet authResp = undefined\n\n\tif (!firebase.apps.length) {\n\t\tfirebase.initializeApp({\n\t\t\tapiKey: process.env.REACT_APP_FIREBASE_KEY,\n\t\t\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\t\t})\n\t}\n\n\tconst provider = new firebase.auth.GithubAuthProvider()\n\tprovider.addScope('repo')\n\n\tconst response = await firebase.auth().signInWithPopup(provider)\n\n\tif (response) {\n\t\tconst oauthCreds = response.credential as firebase.auth.OAuthCredential\n\t\tauthResp = {\n\t\t\tisAuthenticated: true,\n\t\t\taccessToken: oauthCreds.accessToken,\n\t\t\temail: response.user?.email,\n\t\t\tuserDisplayName: response.user?.displayName,\n\t\t\tusername: response.additionalUserInfo?.username,\n\t\t} as AppState\n\t}\n\n\treturn authResp\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nexport const convertCSVDataToObj = (csvData: any) => {\n\tconst returnObj: any = {}\n\n\tcsvData.forEach((row: any) => {\n\t\tconst stringLabel: string = Object.keys(row).find(\n\t\t\t(x) => x.trim() === 'String ID'\n\t\t) as string\n\t\tconst stringId: string = row[stringLabel]\n\n\t\tdelete row[stringLabel]\n\t\treturnObj[stringId.toLowerCase()] = row\n\t})\n\n\treturn returnObj\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport parse from 'csv-parse/lib/sync'\nimport { getAppStore } from '../store/store'\nimport { convertCSVDataToObj } from '../utils/dataUtils'\nimport { b64_to_utf8, utf8_to_b64 } from '../utils/textUtils'\n\nconst createPath = (obj: any, pathInput: string, value: any = undefined) => {\n\tlet path = pathInput.split('/')\n\tlet current = obj\n\twhile (path.length > 1) {\n\t\tconst [head, ...tail] = path\n\t\tpath = tail\n\t\tif (current[head] === undefined) {\n\t\t\tcurrent[head] = {}\n\t\t}\n\t\tcurrent = current[head]\n\t}\n\tif (!current[path[0]]) {\n\t\tcurrent[path[0]] = {}\n\t} else {\n\t\tcurrent[path[0]] = { ...current[path[0]], ...value }\n\t}\n\treturn obj\n}\n\nconst getContent = async (url: string, token: string) => {\n\tconst response = await fetch(`${url}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAuthorization: `token ${token}`,\n\t\t},\n\t})\n\tconst data = await response.json()\n\n\treturn data\n}\n\nexport const repoServices = async (\n\tcommand: string,\n\textraData: any = undefined\n): Promise<any | undefined> => {\n\tconst state = getAppStore()\n\tconst githubRepoOwner = process.env.REACT_APP_REPO_OWNER\n\tconst githubRepoName = process.env.REACT_APP_REPO_NAME\n\n\tswitch (command) {\n\t\tcase 'checkAccess':\n\t\t\tconst loadAccessResponse = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/collaborators/${state.username}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn loadAccessResponse\n\n\t\t\tbreak\n\t\tcase 'getBranches':\n\t\t\tconst loadBranchesResponse = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/branches`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\treturn await loadBranchesResponse.json()\n\t\tcase 'getPullRequests':\n\t\t\tconst loadPRResponse = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/pulls`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\treturn await loadPRResponse.json()\n\t\tcase 'getIssues':\n\t\t\tconst loadIssuesResponse = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/issues`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\treturn await loadIssuesResponse.json()\n\t\t\tbreak\n\t\t\tbreak\n\t\tcase 'getRepoFileData':\n\t\t\tconst dataFolderResp = await fetch(\n\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\tconst dataFolderObj = await dataFolderResp.json()\n\t\t\tconst policyFolderGitUrl = dataFolderObj.find(\n\t\t\t\t(folder: { name: string }) => folder.name === 'policies'\n\t\t\t).git_url\n\t\t\tconst loadPolicyFolderResponse = await fetch(\n\t\t\t\t`${policyFolderGitUrl}?recursive=true`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\tconst policyFolderData = await loadPolicyFolderResponse.json()\n\t\t\tconst stateData: any = {}\n\t\t\tpolicyFolderData.tree.forEach(async (element: any) => {\n\t\t\t\tif (element.type === 'tree') {\n\t\t\t\t\tcreatePath(stateData, element.path)\n\t\t\t\t} else {\n\t\t\t\t\tconst lastInstance = element.path.lastIndexOf('/')\n\t\t\t\t\tconst filePath = element.path.substring(0, lastInstance)\n\t\t\t\t\tconst fileName: string = element.path.substring(lastInstance + 1)\n\t\t\t\t\tconst fileType: string = fileName.split('.')[0]\n\t\t\t\t\tconst fileObj: any = {}\n\n\t\t\t\t\tconst fileData = await getContent(\n\t\t\t\t\t\tString(element.url),\n\t\t\t\t\t\tString(state.accessToken)\n\t\t\t\t\t)\n\n\t\t\t\t\tswitch (fileName.split('.')[1].toLowerCase()) {\n\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\tfileObj[fileType] = {\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\tcontent: JSON.parse(b64_to_utf8(fileData.content)),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'md':\n\t\t\t\t\t\t\tfileObj['desc_md'] = {\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\tcontent: b64_to_utf8(fileData.content),\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'csv':\n\t\t\t\t\t\t\tfileObj['strings'] = {\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\tcontent: convertCSVDataToObj(\n\t\t\t\t\t\t\t\t\tparse(b64_to_utf8(fileData.content), { columns: true })\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fileObj !== {}) {\n\t\t\t\t\t\tcreatePath(stateData, filePath, fileObj)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconst localizationFolderGitUrl = dataFolderObj.find(\n\t\t\t\t(folder: { name: string }) => folder.name === 'localization'\n\t\t\t).git_url\n\n\t\t\tconst localizationResponse = await fetch(\n\t\t\t\t`${localizationFolderGitUrl}?recursive=true`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tconst localizationData = await localizationResponse.json()\n\n\t\t\tconst customStrings = localizationData.tree.find(\n\t\t\t\t(file: { path: string }) => file.path === 'custom-strings.csv'\n\t\t\t)\n\t\t\tconst cdcStateNames = localizationData.tree.find(\n\t\t\t\t(file: { path: string }) => file.path === 'cdc-state-names.csv'\n\t\t\t)\n\t\t\tconst cdcStateLinks = localizationData.tree.find(\n\t\t\t\t(file: { path: string }) => file.path === 'cdc-state-links.csv'\n\t\t\t)\n\n\t\t\tlet customStringsData: any = {}\n\t\t\tlet cdcStateNamesData: any = {}\n\t\t\tlet cdcStateLinksData: any = {}\n\n\t\t\tconst customStringsDataParse = await getContent(\n\t\t\t\tString(customStrings.url),\n\t\t\t\tString(state.accessToken)\n\t\t\t)\n\t\t\tcustomStringsData = convertCSVDataToObj(\n\t\t\t\tparse(b64_to_utf8(customStringsDataParse.content), { columns: true })\n\t\t\t)\n\n\t\t\tconst cdcStateNamesDataParse = await getContent(\n\t\t\t\tString(cdcStateNames.url),\n\t\t\t\tString(state.accessToken)\n\t\t\t)\n\t\t\tcdcStateNamesData = convertCSVDataToObj(\n\t\t\t\tparse(b64_to_utf8(cdcStateNamesDataParse.content), { columns: true })\n\t\t\t)\n\n\t\t\tconst cdcStateLinksDataParse = await getContent(\n\t\t\t\tString(cdcStateLinks.url),\n\t\t\t\tString(state.accessToken)\n\t\t\t)\n\t\t\tcdcStateLinksData = convertCSVDataToObj(\n\t\t\t\tparse(b64_to_utf8(cdcStateLinksDataParse.content), { columns: true })\n\t\t\t)\n\n\t\t\tcustomStrings['content'] = customStringsData\n\t\t\tcdcStateNames['content'] = cdcStateNamesData\n\t\t\tcdcStateLinks['content'] = cdcStateLinksData\n\n\t\t\treturn [stateData, customStrings, cdcStateNames, cdcStateLinks]\n\t\t\tbreak\n\t\tcase 'createPR':\n\t\t\tif (state?.mainBranch) {\n\t\t\t\tconst mainBranch = state?.mainBranch\n\t\t\t\tconst branchName = `refs/heads/${state.username}-policy-${Date.now()}`\n\t\t\t\tconst createBranchResponse = await fetch(\n\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/git/refs`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tref: branchName,\n\t\t\t\t\t\t\tsha: mainBranch.commit.sha,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\tconst newBranch = await createBranchResponse.json()\n\n\t\t\t\tconst fileResp = await fetch(\n\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/contents/packages/plans/data/policies/${extraData.path}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tbranch: branchName,\n\t\t\t\t\t\t\tmessage: 'auto file creation',\n\t\t\t\t\t\t\tcontent: utf8_to_b64('[FileContent]'),\n\t\t\t\t\t\t\tsha: extraData.sha,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\tconst prResp = await fetch(\n\t\t\t\t\t`https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/pulls`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\thead: branchName,\n\t\t\t\t\t\t\tbase: 'main',\n\t\t\t\t\t\t\ttitle: 'auto PR creation',\n\t\t\t\t\t\t}),\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\tconsole.log(newBranch, fileResp)\n\n\t\t\t\treturn prResp.json()\n\t\t\t}\n\t\t\tbreak\n\t}\n\n\treturn undefined\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { orchestrator } from 'satcheljs'\nimport { loginUser } from '../actions/authActions'\nimport { initializeGitData } from '../actions/repoActions'\nimport { setUserAuthData, setUserNoAccess } from '../mutators/authMutators'\nimport { loginUserService } from '../services/loginUserService'\nimport { repoServices } from '../services/repoServices'\n\norchestrator(loginUser, async () => {\n\tconst resp = await loginUserService()\n\tif (resp) {\n\t\tsetUserAuthData(resp)\n\t\tconst accessResp = await repoServices('checkAccess')\n\t\tif (accessResp.ok) {\n\t\t\tinitializeGitData()\n\t\t} else {\n\t\t\tsetUserNoAccess()\n\t\t}\n\t}\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { orchestrator } from 'satcheljs'\nimport {\n\tcreatePR,\n\tgetRepoFileData,\n\tinitializeGitData,\n} from '../actions/repoActions'\nimport {\n\tsetBranchList,\n\thandleCreatePR,\n\tsetRepoFileData,\n\tsetIssuesList\n} from '../mutators/repoMutators'\nimport { repoServices } from '../services/repoServices'\n\n\norchestrator(createPR, async (message) => {\n\tconst { fileData } = message\n\tconst resp = await repoServices('createPR', fileData)\n\thandleCreatePR(resp)\n})\n\norchestrator(getRepoFileData, async () => {\n\tconst resp = await repoServices('getRepoFileData')\n\tsetRepoFileData(resp)\n})\n\norchestrator(initializeGitData, async () => {\n\tlet resp = await repoServices('getBranches')\n\tsetBranchList(resp)\n\n\tresp = await repoServices('getRepoFileData')\n\tsetRepoFileData(resp)\n\n\tresp = await repoServices('getIssues')\n\tsetIssuesList(resp)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { initializeIcons } from '@fluentui/react/lib/Icons'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './components/App'\nimport './orchestrators/authOrchestrators'\nimport './orchestrators/repoOrchestrators'\n\nfunction render() {\n\ttry {\n\t\tconst basePath = process.env.REACT_APP_BASE_PATH\n\t\tinitializeIcons()\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<Router basename={basePath}>\n\t\t\t\t\t<App />\n\t\t\t\t</Router>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} catch (err) {\n\t\tconsole.error('error rendering app', err)\n\t}\n}\n\nrender()\n"],"sourceRoot":""}