{"version":3,"sources":["intl lazy /^/.//.*/.json$/ groupOptions: {} namespace object","actions/authActions.ts","actions/intlActions.ts","actions/repoActions.ts","store/localStorage.ts","store/store.ts","mutators/authMutators.ts","utils/dataUtils.ts","utils/textUtils.ts","selectors/phaseSelectors.ts","selectors/locationSelectors.ts","mutators/repoMutators.ts","selectors/intlSelectors.ts","components/Dashboard.tsx","components/Footer.tsx","components/LocationForm.tsx","components/LocationDetails.tsx","components/PhaseForm.tsx","components/LocationPhaseList.tsx","components/LocationPhaseOverrideBar.tsx","components/PhaseQualifierForm.tsx","components/LocationPhaseQualifiers.tsx","components/LocationsBreadcrumbs.tsx","components/DeleteLocationForm.tsx","components/LocationsStates.tsx","components/Locations.tsx","components/Login.tsx","components/AddQualiferForm.tsx","selectors/qualifierSelectors.ts","components/QualifierPanel.tsx","selectors/changesSelectors.ts","components/Review.tsx","components/Translate.tsx","components/UnAuthorized.tsx","components/UserAccessExpirationForm.tsx","components/App.tsx","services/loginUserService.ts","services/repoServices.ts","orchestrators/authOrchestrators.ts","orchestrators/repoOrchestrators.ts","mutators/intlMutators.ts","orchestrators/intlOrchestrators.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","loginUser","action","reLoginUser","setAppLanguage","language","createPR","fileData","loadAllStringsData","initializeGitData","loadPR","prNumber","loadBranch","branch","saveContinue","loadAllLocationData","location","LOCAL_STORE_KEY","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","warn","clearState","removeItem","initialStore","isAuthenticated","isAuthorized","accessToken","undefined","username","email","userDisplayName","branches","issues","repoFileData","initRepoFileData","mainBranch","currentLanguage","isEditable","pendingChanges","isDataRefreshing","prChanges","loadedPRData","userWorkingBranch","userWorkingBranches","userAccessExpired","isDataStale","isSavingCommits","localization","defaultLanguage","committedDeletes","breadCrumbs","pendingChangeList","added","modified","deleted","getAppStore","createStore","localState","getAppState","store","getRootStore","get","autorun","state","local","stringify","setItem","saveState","setUserAccessToken","mutatorAction","setUserAuthData","data","setUserAccessExpired","setUserNoAccess","logoutUser","window","reload","convertCSVDataToObj","csvData","returnObj","forEach","row","stringLabel","find","x","trim","stringId","toLowerCase","pathFind","obj","path","i","length","configs","languageKeys","toProperCase","text","res","replace","letter","toUpperCase","startsWith","formatId","getLanguageKeys","split","getLanguageDisplayText","languageCode","Intl","DisplayNames","type","of","utf8_to_b64","str","btoa","unescape","encodeURIComponent","b64_to_utf8","decodeURIComponent","escape","atob","createCSVDataString","contentObj","contentKeys","result","join","key","rowValues","lang","push","StringFormat","args","toString","match","index","getCustomStrings","currentLocation","keyFilter","rootRepo","info","isCurrentLocationRoot","qualifierList","entries","strings","content","filter","includes","sort","a","b","getPhaseQualifierItems","getPhaseQualifierItemsByKey","selectedKey","qualifier","endsWith","getPhaseMoreInfoTextByKey","getExactCustomStrings","getParentLocationVaccinationData","pathArray","currentLocationRoot","splice","vaccination","parentLocation","phases","isPhaseDataOverridden","parentVacData","isEqual","getCustomString","stringSearch","getCurrentLocationObj","locationData","pathKey","name","slice","getLocationPhaseData","currLocation","value","activePhase","parentLocationVaccinationData","clone","setIsDataRefreshing","setIsDataStale","setPendingChanges","setSavingCommitsFlag","setBranchList","process","setUserWorkingBranches","setIssuesList","callback","setCommittedDeletes","commits","deletedFiles","c","commit","message","setLoadedPRData","prData","last_commit","pop","setUserWorkingBranch","clearLoadedPRData","setInitRepoFileData","updateRepoFileData","sha","url","git_url","setLoadAllStringsData","item","setLocationData","initCurrLocation","regions","dataLoaded","setCurrentLanguage","setBreadcrumbs","addPhaseOverviewCrumb","phaseOverviewCrumbs","updatePhaseOverviewTitle","phase_overview","deleteCrumbs","parentPath","newCrumbs","addLocation","locationPath","locationId","details","locationFilePath","newLocation","filePathArray","filePath","locationPathKey","locationNameKey","stringsContent","schedulingPhoneObj","schedulingPhone","schedulingPhoneKey","schedulingPhoneDesc","schedulingPhoneDescKey","metadata","code_alpha","code_numeric","regionType","links","eligibility","eligibilityPlan","eligibility_plan","providers","workflow","scheduling","scheduling_phone","createLocationDataObj","section","getRegionsRecursive","returnArr","region","concat","deleteLocation","regionPathArray","updateLocationData","rootPath","rootLocation","currLocationNameKey","locationKey","worflow","description","noPhaseLabel","modifyKeyIdx","findIndex","m","modifyRootKeyIdx","copyPhaseData","phase","qualifications","question","moreInfoText","moreInfoTextSms","moreInfoTextVoice","moreInfoUrl","modifyMoreInfoText","phaseGroupId","qualifierId","isRootLocation","phaseGroupIndex","phaseQualifiers","qualifierIdx","pq","calcInfoKey","locationCode","newStringsObj","moreInfoSmsKey","moreInfoVoiceKey","modifyMoreInfoLinks","updateQualifier","oldQualifierId","qualifierSmsKey","qualifierVoiceKey","rootStringsObj","phaseQualiferObj","questionSms","questionVoice","oldQualifierObj","addQualifier","removeQualifier","removePhase","phaseId","removeIndex","label","updatePhase","phaseName","addPhase","duplicatePhase","setActivePhase","deleteKeyRecursive","dataSource","changeList","qualifierKey","addKeyRecursive","isSms","isVoice","updateRootLocationQualifiers","rootLocationKey","newQualifier","stringsObj","isNew","qualifierKeyBank","customStringKeys","qKey","tagKey","substr","qualifierSms","qualifierVoice","recursiveFindAndReplace","saveObj","regionObj","updateStrings","stringsList","getText","isHtml","insertStrings","ReactHtmlParser","observer","useState","prList","setPRList","issueList","setIssueList","useBoolean","hideDialog","toggleHideDialog","toggle","noteKeys","setNoteKeys","useEffect","tempPRList","tempIssueList","requestUpdate","Date","updated_at","isScrappedIssue","labels","some","pull_request","title","author","user","login","update","toLocaleString","toggleCallout","useCallback","tempItems","indexOf","prColumns","fieldName","minWidth","isResizable","onRender","column","body","FontIcon","className","number","iconName","onClick","Callout","onDismiss","target","gapSpace","setInitialFocus","role","directionalHint","ariaLabel","disabled","href","html_url","rel","issueColumns","userWorkingBranchColumns","parseInt","refreshData","onRefreshDataClick","ProgressIndicator","DetailsList","items","columns","setKey","layoutMode","DetailsListLayoutMode","justified","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","checkButtonAriaLabel","checkboxVisibility","style","textAlign","Dialog","hidden","dialogContentProps","DialogType","normal","closeButtonAriaLabel","modalProps","isBlocking","DialogFooter","PrimaryButton","DefaultButton","display","flexDirection","Link","memo","children","cursor","marginLeft","marginRight","alignContent","open","props","onSubmit","onCancel","currentPath","vacInfo","setInitialData","formData","setFormData","fieldChanges","useRef","regionTypeOptions","baseTitle","formTitle","handleRegionChange","_ev","current","handleTextChange","ev","onNoLabelChange","checked","canSubmit","TextField","onChange","Dropdown","placeholder","options","Checkbox","isLocationModalOpen","openLocationModal","setTrue","dismissLocationModal","setFalse","onLocationFormSubmit","locationFormData","prevItem","initPath","locationName","isUrl","maxWidth","isMultiline","color","selectionPreservedOnEmptyClick","onRenderDetailsHeader","Modal","isOpen","isModeless","isDarkOverlay","duplicate","keyId","isActive","hasError","setHasError","isDuplicate","nextPhaseId","disableSubmit","onGetErrorMessage","validateOnLoad","validateOnFocusIn","validateOnFocusOut","onItemClicked","phaseItemList","setPhaseItemList","isPhaseModalOpen","openPhaseModal","dismissPhaseModal","selectedPhaseItem","phaseColumns","loc","activeText","newList","setInitialPhaseItems","onPhaseFormOpen","onRenderItemColumn","_index","fieldContent","onPhaseFormSubmit","phaseData","generateUIPhaseList","onItemInvoked","idx","String","breadcrumbs","parentLocationName","messageBarSpecific","messageBarAdopted","parentData","getParentLocationData","MessageBar","messageBarType","groupKey","rowItem","onRowItemQualifierChange","onRowItemRemove","onRowItemTextChange","phaseTagItems","tagKeys","tagList","getPhaseTagItems","phaseQualifierItems","filteredQualifierItems","setFilteredQualifierItems","setMoreInfoText","setMoreInfoTextSms","setMoreInfoTextVoice","locationPhases","currPhase","groupId","currQualification","qualification","getPhaseMoreInfoUrl","setMoreInfoUrl","changedItem","moreInfoContent","moreInfoKey","moreInfoTextSmsKey","moreInfoTextVoiceKey","currentPhase","onTagChange","_event","option","q","onQualifierChange","onMoreInfoTextChange","onMoreInfoTextSmsChange","onMoreInfoTextVoiceChange","onMoreInfoUrlChange","pointerEvents","defaultSelectedKey","styles","root","width","IconButton","iconProps","menuIcon","visibility","margin","menuProps","isBeakVisible","DirectionalHint","rightTopEdge","aria-label","multiline","autoAdjustHeight","resizable","padding","onBlur","phaseList","setPhaseList","groupToggleState","isDuplicateModalOpen","openDuplicateModal","dismissDuplicateModal","selectedPhaseGroup","tempPhaseList","isCollapsed","isActivePhase","tempPhaseObj","count","phaseItems","onRemoveRowItem","group","newItemIndex","onDuplicatePhaseClick","onDuplicateSubmit","onChangeRowItemText","currentItem","initItem","onChangeRowItemQualifier","toggleGroup","onToggleCollapse","groupItem","marginTop","newItem","onAddQualifierClick","currentLocationTitle","navigateBack","onSelectedItem","isDeleteLocationModalOpen","openDeleteLocationModal","dismissDeleteLocationModal","filteredStateList","setFilteredStateList","stateRepoFullList","selectedLocationItem","selectedLocationPath","locationColumns","col","tempLocationlist","nextFilteredStateList","locKey","locDetails","onStateFilter","openSelection","onDeleteLocationFormSubmit","onLocationFormOpen","onLocationDeleteFormOpen","SearchBox","setCurrentLocation","isPhaseSelected","showPhaseComponent","hidePhaseComponent","setCurrentLocationTitle","phaseOverviewText","updateCurrentLocation","newTitle","getLocationsData","openPhaseItem","LocationPhaseOverrideBar","LocationDetails","LocationPhaseList","tagsOptions","sms","voice","globalQualifiersList","replaceAll","getGlobalQualifierValidationTexts","isAddingTag","setIsAddingTag","handleTagChange","newQualifierText","isTagDuplicate","newTag","newTagKey","createNewTag","qualifierGroup","setQualifierGroup","qualifierGroupItems","setQualifierGroupItems","isAddQualifierModalOpen","openAddQualifierModal","dismissAddQualifierModal","formItem","groupKeys","questionItemKeys","tempQualifierGroup","tempQualifierGroupItems","k","questionGroupKey","groupIdx","startIndex","smsKey","voiceKey","onAddQualifierFormOpen","addQualifierSubmit","setTimeout","tag","groups","groupProps","showEmptyGroups","compact","isHeaderVisible","getChanges","changesList","showDashboard","changesColumns","showLoading","setShowLoading","initData","prTitle","prDetails","setInitialFormData","handleSubmit","resp","error","rows","sinceDate","renderChangeLists","fileUploadRef","createRef","errorMessage","setErrorMessage","onReaderLoadData","readerEvent","handleFileUpload","file","reader","FileReader","onload","readAsText","onDragFile","preventDefault","stopPropagation","recursiveFindStrings","elem","returnStrings","regionStrings","assign","onFileDownload","results","stringData","Blob","csvUrl","URL","createObjectURL","MessageBarType","dismissButtonAriaLabel","onDragEnter","onDragOver","onDrop","dataTransfer","kind","getAsFile","ref","files","click","isPanelOpen","showPanel","hidePanel","isPersonaMenuOpen","showPersonaMenu","hidePersonaMenu","branchWasSaved","setBranchWasSaved","isAccessExpiration","showAccessExpirationModal","hideAccessExpirationModal","setSelectedKey","personaComponent","onbeforeunload","excludeLanguage","togglePanel","headerText","onAccessExpirationFormSubmit","renderRepoMessageBar","committer","renderSaveContinueMessageBar","actions","Spinner","ariaLive","labelPosition","MessageBarButton","exact","icon","fontSize","rootHovered","backgroundColor","rootPressed","l","dropdown","border","caretDown","dropdownOptionText","selectors","Persona","size","PersonaSize","size32","hidePersonaDetails","ContextualMenu","onItemClick","Pivot","onLinkClick","PivotItem","itemKey","to","firebaseApp","firebase","initializeApp","apiKey","authDomain","loginUserService","authResp","provider","auth","GithubAuthProvider","addScope","signInWithPopup","response","oauthCreds","credential","displayName","additionalUserInfo","githubRepoOwner","githubRepoName","createPath","pathInput","setNewValue","head","tail","gitFetch","headers","json","_options","apiUrl","fetch","method","Authorization","ok","status","getContent","token","createWorkingBranch","branchName","commitFileChanges","actionText","fileSha","query","commitChanges","branchLastCommitSha","upsertedList","locationResp","upserted","arr","skipFetch","desc_md","updatedFiles","repoServices","command","extraData","now","Accept","since","userPrs","allBranches","usersBranches","pr","prs","all","populatedPRs","loadPRResponse","commitResp","dataFolderObj","policyFolderGitUrl","folder","loadPolicyFolderResponse","stateData","tree","element","lastInstance","lastIndexOf","substring","fileName","fileType","fileObj","infoData","stringsData","vaccinationData","repoRef","locationRegionsFolder","loadRegionsResponse","promiseList","fileExt","allSettled","filePromise","fileInfo","policyFolderData","values","pathStr","prFormData","base","prResp","orchestrator","accessResp","handleError","nextWorkingBranches","date","toISOString","changes","setLocalization","setDefaultLanguage","isEmpty","rtl","isRtlLang","initializeIcons","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e4dd3aa8.chunk.js","sourcesContent":["var map = {\n\t\"./en-us.json\": [\n\t\t285,\n\t\t3\n\t],\n\t\"./es-us.json\": [\n\t\t286,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 150;\nmodule.exports = webpackAsyncContext;","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { action } from 'satcheljs'\n\nexport const loginUser = action('loginUser')\nexport const reLoginUser = action('reLoginUser')\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { action } from 'satcheljs'\n\nexport const setAppLanguage = action('setAppLanguage', (language: string) => ({\n\tlanguage,\n}))\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { action } from 'satcheljs'\n\nexport const createPR = action('createPR', (fileData: any) => ({\n\tfileData,\n}))\n\nexport const loadAllStringsData = action('loadAllStringsData')\n\nexport const initializeGitData = action('initializeGitData')\n\nexport const loadPR = action('loadPR', (prNumber: any) => ({\n\tprNumber,\n}))\n\nexport const loadBranch = action('loadBranch', (branch: any) => ({\n\tbranch,\n}))\n\nexport const saveContinue = action('saveContinue')\n\nexport const getLocationData = action('getLocationData', (location: any) => ({\n\tlocation\n}))\n\nexport const loadAllLocationData = action('loadAllLocationData', (location:any) => ({location}))","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { AppState } from './schema/AppState'\n\nexport const LOCAL_STORE_KEY = 'dataComposer'\n\nexport const loadState = (): AppState | undefined => {\n\ttry {\n\t\tconst serializedState = localStorage.getItem(LOCAL_STORE_KEY)\n\n\t\tif (!serializedState) return undefined\n\n\t\treturn JSON.parse(serializedState)\n\t} catch (err) {\n\t\tconsole.warn('Error loading state', err)\n\t\tclearState()\n\t\treturn undefined\n\t}\n}\n\nexport const saveState = (state: any): void => {\n\ttry {\n\t\tconst local = loadState()\n\t\tconst serializedState = JSON.stringify({\n\t\t\t...local,\n\t\t\t...state,\n\t\t})\n\n\t\tlocalStorage.setItem(LOCAL_STORE_KEY, serializedState)\n\t} catch (err) {\n\t\tconsole.warn('Error saving state', err)\n\t\tclearState()\n\t}\n}\n\nexport const clearState = (): void => {\n\tlocalStorage.removeItem(LOCAL_STORE_KEY)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { autorun } from 'mobx'\nimport { createStore, getRootStore } from 'satcheljs'\nimport { loadState, saveState } from './localStorage'\nimport { AppState } from './schema/AppState'\n\nexport const initialStore = {\n\tisAuthenticated: false,\n\tisAuthorized: true,\n\taccessToken: undefined,\n\tusername: undefined,\n\temail: undefined,\n\tuserDisplayName: undefined,\n\tbranches: undefined,\n\tissues: [],\n\trepoFileData: undefined,\n\tinitRepoFileData: undefined,\n\tmainBranch: undefined,\n\tcurrentLanguage: 'en-us',\n\tisEditable: true,\n\tpendingChanges: false,\n\tisDataRefreshing: false,\n\tprChanges: undefined,\n\tloadedPRData: undefined,\n\tuserWorkingBranch: undefined,\n\tuserWorkingBranches: [],\n\tuserAccessExpired: false,\n\tisDataStale: false,\n\tisSavingCommits: false,\n\tlocalization: {},\n\tdefaultLanguage: {},\n\tcommittedDeletes: [],\n\tbreadCrumbs: {},\n\tpendingChangeList: {added: [], modified: [], deleted: []}\n}\n\nexport const getAppState = (): AppState => {\n\tconst localState = loadState()\n\n\treturn {\n\t\t...initialStore,\n\t\t...localState\n\t}\n}\n\nexport const getAppStore = createStore<AppState>('appState', getAppState())\n\nconst store = getRootStore().get('appState')\n\nautorun(() => {\n\tif (store)\n\t\tsaveState({\n\t\t\taccessToken: store.accessToken,\n\t\t\tisAuthorized: store.isAuthorized,\n\t\t\tisAuthenticated: store.isAuthenticated,\n\t\t\tuserDisplayName: store.userDisplayName,\n\t\t\tusername: store.username,\n\t\t\temail: store.email,\n\t\t\tuserAccessExpired: store.userAccessExpired,\n\t\t\tlocalization: store.localization,\n\t\t\tcurrentLanguage: store.currentLanguage\n\t\t})\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { mutatorAction } from 'satcheljs'\nimport { clearState } from '../store/localStorage'\nimport { AppState } from '../store/schema/AppState'\nimport { getAppStore } from '../store/store'\n\nexport const setUserAccessToken = mutatorAction(\n\t'setUserAccessToken',\n\t(accessToken?: any) => {\n\t\tconst store = getAppStore()\n\t\tstore.accessToken = accessToken\n\t}\n)\n\nexport const setUserAuthData = mutatorAction(\n\t'setUserAuthData',\n\t(data: AppState | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.accessToken = data.accessToken\n\t\t\tstore.email = data.email\n\t\t\tstore.isAuthenticated = data.isAuthenticated\n\t\t\tstore.userDisplayName = data.userDisplayName\n\t\t\tstore.username = data.username\n\t\t}\n\t}\n)\n\nexport const setUserAccessExpired = mutatorAction('setUserAccessExpired', (userAccessExpired: boolean) => {\n\tconst store = getAppStore()\n\tstore.userAccessExpired = userAccessExpired\n})\n\nexport const setUserNoAccess = mutatorAction('setUserNoAccess', () => {\n\tconst store = getAppStore()\n\tstore.isAuthorized = false\n})\n\nexport const logoutUser = mutatorAction('logoutUser', () => {\n\tclearState()\n\n\twindow.location.reload()\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nexport const convertCSVDataToObj = (csvData: any): any => {\n\tconst returnObj: any = {}\n\n\tcsvData.forEach((row: any) => {\n\t\tconst stringLabel: string = Object.keys(row).find(\n\t\t\t(x) => x.trim() === 'String ID'\n\t\t) as string\n\t\tconst stringId: string = row[stringLabel]\n\n\t\tdelete row[stringLabel]\n\t\treturnObj[stringId.toLowerCase()] = row\n\t})\n\n\treturn returnObj\n}\n\nexport const pathFind = (obj: any, path: string[]): any => {\n\tfor (let i = 0; i < path.length; i++) {\n\t\tobj = obj[path[i]]\n\t}\n\treturn obj\n}\n\nexport const createLocationDataObj = (\n\tlocationId: string,\n\tfilePathArray: string[],\n\tlocationData: any,\n\tcurrentLanguage: string\n): any => {\n\tconst filePath = filePathArray.join('/')\n\tconst locationPathKey = filePathArray.join('.')\n\n\tconst locationNameKey = `name.${locationPathKey}`\n\n\tconst stringsContent = {\n\t\t[locationNameKey]: { [currentLanguage]: locationData.details },\n\t}\n\n\tlet schedulingPhoneObj: any = {}\n\n\tif (locationData?.schedulingPhone !== '') {\n\t\tconst schedulingPhoneKey = `scheduling.phone.${locationNameKey}`\n\t\tstringsContent[schedulingPhoneKey] = {\n\t\t\t[currentLanguage]: locationData.schedulingPhone,\n\t\t}\n\n\t\tschedulingPhoneObj = {\n\t\t\turl: `tel:${locationData.schedulingPhone}`,\n\t\t\ttext: schedulingPhoneKey,\n\t\t}\n\n\t\tif (locationData.schedulingPhoneDesc !== '') {\n\t\t\tconst schedulingPhoneDescKey = `scheduling.phone.description.${locationNameKey}`\n\t\t\tstringsContent[schedulingPhoneDescKey] = {\n\t\t\t\t[currentLanguage]: locationData.schedulingPhoneDesc,\n\t\t\t}\n\t\t\tschedulingPhoneObj['description'] = schedulingPhoneDescKey\n\t\t}\n\t}\n\n\treturn {\n\t\tinfo: {\n\t\t\tcontent: {\n\t\t\t\tid: locationId,\n\t\t\t\tmetadata: {\n\t\t\t\t\tcode_alpha: locationId,\n\t\t\t\t\tcode_numeric: 0,\n\t\t\t\t},\n\t\t\t\tname: locationNameKey,\n\t\t\t\ttype: locationData.regionType,\n\t\t\t},\n\t\t\tname: 'info.json',\n\t\t\tpath: `${filePath}/info.json`,\n\t\t\tsha: '',\n\t\t\ttype: 'info',\n\t\t\turl: '',\n\t\t},\n\t\tstrings: {\n\t\t\tcontent: stringsContent,\n\t\t\tname: `${locationId}.csv`,\n\t\t\tpath: `${filePath}/${locationId}.csv`,\n\t\t\tsha: '',\n\t\t\ttype: locationId,\n\t\t\turl: '',\n\t\t},\n\t\tvaccination: {\n\t\t\tcontent: {\n\t\t\t\tphases: [],\n\t\t\t\tactivePhase: '',\n\t\t\t\tlinks: {\n\t\t\t\t\t...(locationData?.eligibility !== '' && {\n\t\t\t\t\t\teligibility: {\n\t\t\t\t\t\t\turl: locationData.eligibility,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t...(locationData?.eligibilityPlan !== '' && {\n\t\t\t\t\t\teligibility_plan: {\n\t\t\t\t\t\t\turl: locationData.eligibilityPlan,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t...(locationData?.info !== '' && {\n\t\t\t\t\t\tinfo: {\n\t\t\t\t\t\t\turl: locationData.info,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t...(locationData?.providers !== '' && {\n\t\t\t\t\t\tproviders: {\n\t\t\t\t\t\t\turl: locationData.providers,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t...(locationData?.workflow !== '' && {\n\t\t\t\t\t\tworkflow: {\n\t\t\t\t\t\t\turl: locationData.workflow,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t...(locationData?.scheduling !== '' && {\n\t\t\t\t\t\tscheduling: {\n\t\t\t\t\t\t\turl: locationData.scheduling,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t...(locationData?.schedulingPhone !== '' && {\n\t\t\t\t\t\tscheduling_phone: schedulingPhoneObj,\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t},\n\t\t\tname: 'vaccination.json',\n\t\t\tpath: `${filePath}/vaccination.json`,\n\t\t\tsha: '',\n\t\t\ttype: 'vaccination',\n\t\t\turl: '',\n\t\t},\n\t}\n}","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nconst configs = {\n\tlanguageKeys:\n\t\t'en-us,ko-kr,vi-vn,zh-cn,es-us,de-de,es-es,fi-fi,fr-fr,he-il,it-it,ja-jp,pt-pt,sv-se,th-th',\n\tdefaultLanguage: 'en-us',\n}\n\n\nexport const toProperCase = (text: string): string => {\n\tif (!text) return ''\n\n\tconst res = text\n\t\t.replace(/_/g, ' ')\n\t\t.toLowerCase()\n\t\t.replace(/\\b[a-z](?=[a-z]{2})/g, function (letter) {\n\t\t\treturn letter.toUpperCase()\n\t\t})\n\n\tif (res.startsWith('us ')) {\n\t\treturn res.replace('us ', 'US ')\n\t}\n\n\tif (res.startsWith('st. ')) {\n\t\treturn res.replace('st. ', 'St. ')\n\t}\n\treturn res\n}\n\nexport const formatId = (text: string): string => {\n\treturn text\n\t\t?.trim()\n\t\t.replace(/[^a-z0-9\\s]/gi, '')\n\t\t.replace(/\\s+/g, '_')\n\t\t.toLowerCase()\n}\n\nexport const getLanguageKeys = (): string[] => {\n\treturn configs.languageKeys.split(',')\n}\n\nexport const getLanguageOptions = (excludeLanguage?: string): any[] => {\n\treturn getLanguageKeys()\n\t\t.map((key) => {\n\t\t\treturn {\n\t\t\t\tkey: key,\n\t\t\t\ttext: getLanguageDisplayText(key, key),\n\t\t\t}\n\t\t})\n\t\t.filter((l) => l.key !== excludeLanguage)\n}\n\nexport const getLanguageDisplayText = (\n\tcurrentLanguage: string,\n\tlanguageCode: string\n): string => {\n\t// @ts-expect-error DisplayNames not on Intl\n\tconst languageName = new Intl.DisplayNames([currentLanguage], {\n\t\ttype: 'language',\n\t})\n\treturn languageName.of(languageCode)\n}\n\nexport const utf8_to_b64 = (str: string): string => {\n\treturn btoa(unescape(encodeURIComponent(str)))\n}\n\nexport const b64_to_utf8 = (str: string): string => {\n\treturn decodeURIComponent(escape(atob(str)))\n}\n\nexport const createCSVDataString = (contentObj: any): string => {\n\tconst languageKeys = getLanguageKeys()\n\tconst contentKeys = Object.keys(contentObj)\n\n\tlet result = 'String ID,' + languageKeys.join(',') + '\\n'\n\n\tfor (const key of contentKeys) {\n\t\tconst rowValues = [key]\n\t\tlanguageKeys.forEach((lang: string) => {\n\t\t\tif (contentObj[key][lang]) {\n\t\t\t\trowValues.push(`\"${contentObj[key][lang].replace(/\"/g, '\"\"')}\"`)\n\t\t\t} else {\n\t\t\t\trowValues.push('')\n\t\t\t}\n\t\t})\n\n\t\tresult += rowValues.join(',') + '\\n'\n\t}\n\treturn result\n}\n\n/**\n *\n * @param str String to inject arguments into\n * @param args Arguments to inject into string\n * @returns string with arguments injected\n */\nexport const StringFormat = (str: string, ...args: string[]): string => {\n\treturn str.toString().replace(/{(\\d+)}/g, (match, index) => args[index] || '')\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { isEqual } from 'lodash'\nimport { getAppStore } from '../store/store'\nimport { pathFind } from '../utils/dataUtils'\nimport { toProperCase } from '../utils/textUtils'\n\nconst getCustomStrings = (currentLocation?: any, keyFilter?: string) => {\n\tconst { repoFileData, currentLanguage } = getAppStore()\n\tconst currentLocationRoot = currentLocation.info.path.split('/')[0]\n\tconst rootRepo = repoFileData[currentLocationRoot]\n\tconst isCurrentLocationRoot = currentLocation.info.path === rootRepo.info.path\n\n\tconst qualifierList: any[] =\n\t\tcurrentLocation && !isCurrentLocationRoot\n\t\t\t? [\n\t\t\t\t\t...Object.entries(currentLocation.strings?.content ?? {}),\n\t\t\t\t\t...Object.entries(rootRepo.strings.content),\n\t\t\t  ]\n\t\t\t: [...Object.entries(rootRepo.strings.content)]\n\n\tconst filteredList = keyFilter\n\t\t? qualifierList.filter(([key, _value]: [string, any]) =>\n\t\t\t\tkey.includes(keyFilter)\n\t\t  )\n\t\t: qualifierList\n\treturn filteredList\n\t\t.map(([key, value]: [string, any]) => {\n\t\t\treturn {\n\t\t\t\tkey: key,\n\t\t\t\ttext: value[currentLanguage],\n\t\t\t}\n\t\t})\n\t\t.sort((a, b) => (a.text > b.text ? 1 : -1))\n}\n\nexport const getExactCustomStrings = (\n\tcurrentLocation?: any,\n\tkeyFilter?: string\n): any[] => {\n\tconst { repoFileData, currentLanguage } = getAppStore()\n\tconst currentLocationRoot = currentLocation.info.path.split('/')[0]\n\tconst rootRepo = repoFileData[currentLocationRoot]\n\tconst isCurrentLocationRoot = currentLocation.info.path === rootRepo.info.path\n\n\tconst qualifierList: any[] =\n\t\tcurrentLocation && !isCurrentLocationRoot\n\t\t\t? [\n\t\t\t\t\t...Object.entries(currentLocation.strings?.content ?? {}),\n\t\t\t\t\t...Object.entries(rootRepo.strings.content),\n\t\t\t  ]\n\t\t\t: [...Object.entries(rootRepo.strings.content)]\n\n\tconst filteredList = keyFilter\n\t\t? qualifierList.filter(\n\t\t\t\t([key, _value]: [string, any]) => key.toLowerCase() === keyFilter\n\t\t  )\n\t\t: qualifierList\n\treturn filteredList\n\t\t.map(([key, value]: [string, any]) => {\n\t\t\treturn {\n\t\t\t\tkey: key,\n\t\t\t\ttext: value[currentLanguage],\n\t\t\t}\n\t\t})\n\t\t.sort((a, b) => (a.text > b.text ? 1 : -1))\n}\n\nexport const getPhaseQualifierItems = (currentLocation?: any): any => {\n\treturn getCustomStrings(currentLocation, 'eligibility.question/')\n}\n\nexport const getPhaseTagItems = (\n\tcurrentLocation?: any\n): { key: string; text: string }[] => {\n\tconst phaseQualifiers = getPhaseQualifierItems(currentLocation)\n\n\tconst tagKeys: any[] = []\n\tconst tagList: any[] = []\n\tphaseQualifiers.forEach((qualifier: any) => {\n\t\tconst baseKey = qualifier.key.split('/')\n\t\tconst tagKey = baseKey[1].split('.')[0]\n\n\t\tif (!tagKeys.includes(tagKey)) {\n\t\t\ttagKeys.push(tagKey)\n\t\t\ttagList.push({\n\t\t\t\tkey: tagKey,\n\t\t\t\ttext: toProperCase(tagKey),\n\t\t\t})\n\t\t}\n\t})\n\n\treturn tagList.sort((a, b) => (a.text > b.text ? 1 : -1))\n}\n\nexport const getPhaseQualifierItemsByKey = (\n\tcurrentLocation?: any,\n\tselectedKey?: any\n): any[] => {\n\treturn getPhaseQualifierItems(currentLocation).filter((qualifier: any) => {\n\t\treturn (\n\t\t\tqualifier.key.startsWith(`c19.eligibility.question/${selectedKey}.`) ||\n\t\t\tqualifier.key.endsWith(`c19.eligibility.question/${selectedKey}`)\n\t\t)\n\t})\n}\n\nexport const getPhaseMoreInfoItems = (currentLocation?: any): any[] => {\n\treturn getCustomStrings(currentLocation, 'eligibility.moreinfo')\n}\n\nexport const getPhaseMoreInfoTextByKey = (\n\tcurrentLocation?: any,\n\tselectedKey?: any\n): string => {\n\tif (selectedKey) {\n\t\tconst res = getExactCustomStrings(currentLocation, selectedKey)\n\t\tif (res.length > 0) {\n\t\t\treturn res[0].text\n\t\t}\n\t}\n\n\treturn ''\n}\n\nexport const getPhaseMoreInfoUrl = (rowItem: any): string => {\n\tconst locationPhases = rowItem.location.vaccination.content.phases\n\tconst currPhase = locationPhases?.find(\n\t\t(phase: { id: any }) => phase.id === rowItem.groupId\n\t)\n\tif (currPhase) {\n\t\tconst currQualification = currPhase?.qualifications.find(\n\t\t\t(qualification: { question: any }) =>\n\t\t\t\tqualification.question === rowItem.qualifierId\n\t\t)\n\t\tif (currQualification) {\n\t\t\treturn currQualification.moreInfoUrl\n\t\t}\n\t}\n\n\treturn rowItem.moreInfoUrl\n}\n\nexport const getParentLocationData = (currentLocation: any): any => {\n\tconst { repoFileData } = getAppStore()\n\tconst pathArray = currentLocation.info.path.split('/')\n\tconst currentLocationRoot = currentLocation.info.path.split('/')[0]\n\tpathArray.splice(-1, 1) //remove info.json\n\tpathArray.splice(-2, 2) //remove current location level\n\n\tif (pathArray.length === 0) {\n\t\treturn repoFileData[currentLocationRoot]\n\t} else {\n\t\treturn pathFind(repoFileData, pathArray)\n\t}\n}\n\nexport const getParentLocationVaccinationData = (currentLocation: any): any => {\n\tconst { repoFileData } = getAppStore()\n\tconst pathArray = currentLocation.info.path.split('/')\n\tconst currentLocationRoot = currentLocation.info.path.split('/')[0]\n\tpathArray.splice(-1, 1) //remove info.json\n\tpathArray.splice(-2, 2) //remove current location level\n\tconst vaccinationData = null\n\n\tif (pathArray.length === 0) {\n\t\treturn repoFileData[currentLocationRoot].vaccination\n\t}\n\n\tfor (let i = pathArray.length; i >= 0; i--) {\n\t\tconst parentLocation = pathFind(repoFileData, pathArray)\n\n\t\tif (i === 0 || pathArray.length === 0) {\n\t\t\treturn repoFileData[currentLocationRoot].vaccination\n\t\t}\n\n\t\tif (\n\t\t\t!parentLocation.vaccination?.content?.phases ||\n\t\t\tparentLocation.vaccination.content.phases.length === 0\n\t\t) {\n\t\t\tpathArray.splice(-2, 2)\n\t\t} else {\n\t\t\treturn parentLocation.vaccination\n\t\t}\n\t}\n\n\treturn vaccinationData\n}\n\nexport const isPhaseDataOverridden = (currentLocation: any): boolean => {\n\tconst parentVacData = getParentLocationVaccinationData(currentLocation)\n\tif (\n\t\t!currentLocation.vaccination.content?.phases ||\n\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t) {\n\t\treturn false\n\t} else {\n\t\treturn !isEqual(currentLocation.vaccination.content, parentVacData.content)\n\t}\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { cloneDeep as clone } from 'lodash'\nimport { getAppStore } from '../store/store'\nimport { pathFind } from '../utils/dataUtils'\nimport { getParentLocationVaccinationData } from './phaseSelectors'\n\nexport const getCustomString = (\n\tcurrentLocation: any,\n\tkeyFilter: string\n): string => {\n\tconst { repoFileData, currentLanguage } = getAppStore()\n\tconst currentLocationRoot = currentLocation.info.path.split('/')[0]\n\n\tconst rootRepo = repoFileData[currentLocationRoot]\n\n\tconst stringsList: any[] = currentLocation\n\t\t? [\n\t\t\t\t...Object.entries(currentLocation.strings?.content ?? {}),\n\t\t\t\t...Object.entries(rootRepo?.strings.content ?? {}),\n\t\t  ]\n\t\t: [...Object.entries( rootRepo?.strings.content ?? {} )]\n\n\tconst stringSearch = stringsList.find(\n\t\t([key, _value]: [string, any]) => \n\t\t\tkey?.toLowerCase() === keyFilter?.toLowerCase()\n\t)\n\tif (stringSearch) {\n\t\treturn stringSearch[1][currentLanguage]\n\t}\n\treturn ''\n}\n\nexport const getCurrentLocationObj = (currentLocation: any): any => {\n\tconst { repoFileData } = getAppStore()\n\tconst pathArray = currentLocation.info.path.split('/')\n\tpathArray.splice(-1, 1)\n\n\treturn {\n\t\tlocationData: pathFind(repoFileData, pathArray),\n\t\tpathKey: pathArray.join('.'),\n\t\tname: pathArray.slice(-1)[0]\n\t}\n}\n\nexport const getLocationPhaseData = (\n\tcurrentLocation: any\n): { phases: any[]; activePhase: string } => {\n\tconst currLocation = currentLocation.value || currentLocation\n\n\tlet phases: any[] = currLocation.vaccination.content.phases\n\tlet activePhase: string = currLocation.vaccination.content.activePhase\n\n\tif (!phases || phases.length === 0) {\n\t\tconst parentLocationVaccinationData = getParentLocationVaccinationData(\n\t\t\tcurrLocation\n\t\t)\n\n\t\tif (parentLocationVaccinationData) {\n\t\t\tphases = clone(parentLocationVaccinationData.content.phases)\n\t\t\tactivePhase = activePhase ?? clone(parentLocationVaccinationData.content.activePhase)\n\t\t} else {\n\t\t\treturn { phases: [], activePhase: '' }\n\t\t}\n\t}\n\n\treturn { phases, activePhase }\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { cloneDeep as clone } from 'lodash'\nimport { mutatorAction } from 'satcheljs'\nimport {\n\tgetCurrentLocationObj,\n\tgetLocationPhaseData,\n} from '../selectors/locationSelectors'\nimport { getAppStore } from '../store/store'\nimport { createLocationDataObj, pathFind } from '../utils/dataUtils'\nimport { formatId } from '../utils/textUtils'\n\nexport const setIsDataRefreshing = mutatorAction(\n\t'setIsDataRefreshing',\n\t(isDataRefreshing: boolean) => {\n\t\tconst store = getAppStore()\n\t\tstore.isDataRefreshing = isDataRefreshing\n\t}\n)\n\nexport const setIsDataStale = mutatorAction(\n\t'isDataStale',\n\t(isDataStale: boolean) => {\n\t\tconst store = getAppStore()\n\t\tstore.isDataStale = isDataStale\n\t}\n)\n\nexport const setPendingChanges = mutatorAction(\n\t'setPendingChanges',\n\t(pendingChanges: boolean) => {\n\t\tconst store = getAppStore()\n\t\tstore.pendingChanges = pendingChanges\n\t\tstore.pendingChangeList = {\n\t\t\tadded: [],\n\t\t\tmodified: [],\n\t\t\tdeleted: [],\n\t\t}\n\t}\n)\n\nexport const setSavingCommitsFlag = mutatorAction(\n\t'setSavingCommitsFlag',\n\t(data: boolean) => {\n\t\tconst store = getAppStore()\n\t\tstore.isSavingCommits = data\n\t}\n)\n\nexport const setBranchList = mutatorAction(\n\t'setBranchList',\n\t(data: any[] | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.branches = data\n\t\t\tconst mainBranch = data.find(\n\t\t\t\t(branch) => branch.name === process.env.REACT_APP_MAIN_BRANCH\n\t\t\t)\n\t\t\tstore.mainBranch = mainBranch\n\t\t}\n\t}\n)\n\nexport const setUserWorkingBranches = mutatorAction(\n\t'setUserWorkingBranches',\n\t(userWorkingBranches: any[] | undefined) => {\n\t\tif (userWorkingBranches) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.userWorkingBranches = userWorkingBranches\n\t\t}\n\t}\n)\n\nexport const setIssuesList = mutatorAction(\n\t'setIssuesList',\n\t(data: any[] | undefined, callback?: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.issues = data\n\n\t\t\tif (callback) {\n\t\t\t\tcallback()\n\t\t\t}\n\t\t}\n\t}\n)\n\n/**\n * Filters and sets commited deletes\n */\nexport const setCommittedDeletes = mutatorAction(\n\t'setCommittedDeletes',\n\t(commits: any[] | undefined) => {\n\t\tconst store = getAppStore()\n\t\tif (commits) {\n\t\t\tconst deletedFiles = commits\n\t\t\t\t.filter((c: any) => c.commit.message.startsWith('Removed'))\n\t\t\t\t.map((c: any) => c.commit.message.replace('Removed ', ''))\n\n\t\t\tstore.committedDeletes = deletedFiles\n\t\t}\n\t}\n)\n\nexport const setLoadedPRData = mutatorAction(\n\t'setLoadedPRData',\n\t(prData: any | undefined) => {\n\t\tconst store = getAppStore()\n\t\tif (prData) {\n\t\t\tstore.loadedPRData = prData.data\n\t\t\tstore.prChanges = {\n\t\t\t\tlast_commit: prData?.commits ? [...prData.commits].pop() : undefined,\n\t\t\t}\n\t\t}\n\t}\n)\n\nexport const setUserWorkingBranch = mutatorAction(\n\t'setUserWorkingBranch',\n\t(data: any | undefined) => {\n\t\tconst store = getAppStore()\n\t\tstore.userWorkingBranch = data\n\t}\n)\n\nexport const clearLoadedPRData = mutatorAction('clearLoadedPRData', () => {\n\tconst store = getAppStore()\n\tstore.pendingChanges = false\n\tstore.prChanges = undefined\n\tstore.loadedPRData = undefined\n})\n\nexport const setInitRepoFileData = mutatorAction(\n\t'setInitRepoFileData',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.repoFileData = data\n\t\t\tstore.initRepoFileData = data\n\t\t\tstore.pendingChangeList = {\n\t\t\t\tadded: [],\n\t\t\t\tmodified: [],\n\t\t\t\tdeleted: [],\n\t\t\t}\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const updateRepoFileData = mutatorAction(\n\t'updateRepoFileData',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tObject.keys(data).forEach((key) => {\n\t\t\t\tconst pathArray = key.split('/')\n\t\t\t\tpathArray.splice(-1, 1)\n\n\t\t\t\tconst currLocation = pathFind(store.repoFileData, pathArray)\n\n\t\t\t\tif (key.endsWith('info.json')) {\n\t\t\t\t\tcurrLocation.info.sha = data[key].content.sha\n\t\t\t\t\tcurrLocation.info.url = data[key].content.git_url\n\t\t\t\t}\n\n\t\t\t\tif (key.endsWith('vaccination.json')) {\n\t\t\t\t\tcurrLocation.vaccination.sha = data[key].content.sha\n\t\t\t\t\tcurrLocation.vaccination.url = data[key].content.git_url\n\t\t\t\t}\n\n\t\t\t\tif (key.endsWith('.csv')) {\n\t\t\t\t\tcurrLocation.strings.sha = data[key].content.sha\n\t\t\t\t\tcurrLocation.strings.url = data[key].content.git_url\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const setLoadAllStringsData = mutatorAction(\n\t'setLoadAllStringsData',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tfor (const item of data) {\n\t\t\t\tconst pathArray = item.path.split('/')\n\t\t\t\tpathArray.splice(-1, 1)\n\n\t\t\t\tconst currLocation = pathFind(store.repoFileData, pathArray)\n\n\t\t\t\tif (!currLocation.strings.content) {\n\t\t\t\t\tcurrLocation.strings = item\n\t\t\t\t}\n\t\t\t}\n\t\t\tstore.isDataRefreshing = false\n\t\t}\n\t}\n)\n\nexport const setLocationData = mutatorAction(\n\t'setLocationData',\n\t(data: any, location: any) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\n\t\t\tconst currLocation = store.repoFileData[location.info.content.id]\n\t\t\tconst initCurrLocation = store.initRepoFileData[location.info.content.id]\n\n\t\t\tcurrLocation.regions = { ...currLocation.regions, ...data }\n\t\t\tinitCurrLocation.regions = { ...currLocation.regions, ...data }\n\n\t\t\tcurrLocation.dataLoaded = true\n\t\t\tinitCurrLocation.dataLoaded = true\n\t\t}\n\t}\n)\n\nexport const setCurrentLanguage = mutatorAction(\n\t'setCurrentLanguage',\n\t(data: any | undefined) => {\n\t\tif (data) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.currentLanguage = data.key\n\t\t}\n\t}\n)\n\nexport const setBreadcrumbs = mutatorAction(\n\t'setBreadcrumbs',\n\t(currentLocation: any | undefined) => {\n\t\tconst store = getAppStore()\n\t\tif (currentLocation) {\n\t\t\tconst breadCrumbs = {\n\t\t\t\t...store.breadCrumbs,\n\t\t\t\t[currentLocation.info.content.id]: {\n\t\t\t\t\tvalue: currentLocation,\n\t\t\t\t},\n\t\t\t}\n\t\t\tstore.breadCrumbs = breadCrumbs\n\t\t} else {\n\t\t\tstore.breadCrumbs = {}\n\t\t}\n\t}\n)\n\nexport const addPhaseOverviewCrumb = mutatorAction(\n\t'addPhaseOverviewCrumb',\n\t(currentLocation: any | undefined) => {\n\t\tconst store = getAppStore()\n\n\t\tif (currentLocation) {\n\t\t\tconst phaseOverviewCrumbs = {\n\t\t\t\t...store.breadCrumbs,\n\t\t\t\t[currentLocation.info.content.id]: {\n\t\t\t\t\tvalue: currentLocation,\n\t\t\t\t},\n\t\t\t\tphase_overview: {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tinfo: {\n\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tid: currentLocation.info.content.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpath: currentLocation.info.path.replace(\n\t\t\t\t\t\t\t\t'info.json',\n\t\t\t\t\t\t\t\t'regions/phase_overview/info.json'\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tstore.breadCrumbs = phaseOverviewCrumbs\n\t\t} else {\n\t\t\tstore.breadCrumbs = {}\n\t\t}\n\t}\n)\n\nexport const updatePhaseOverviewTitle = mutatorAction(\n\t'updatePhaseOverTitle',\n\t(data: string) => {\n\t\tconst store = getAppStore()\n\t\tstore.breadCrumbs.phase_overview.value.info.content = {\n\t\t\tid: data,\n\t\t\tname: data,\n\t\t}\n\t}\n)\n\nexport const deleteCrumbs = mutatorAction('deleteCrumbs', (data: any) => {\n\tconst store = getAppStore()\n\tif (data) {\n\t\tconst pathArray = data.value.info.path.split('/')\n\t\tpathArray.splice(-1, 1)\n\t\tpathArray.push('regions')\n\t\tconst parentPath = pathArray.join('/')\n\t\tconst newCrumbs = { ...store.breadCrumbs }\n\t\tfor (const item in newCrumbs) {\n\t\t\tif (newCrumbs[item].value.info.path.startsWith(parentPath)) {\n\t\t\t\tdelete newCrumbs[item]\n\t\t\t}\n\t\t}\n\n\t\tstore.breadCrumbs = newCrumbs\n\t}\n})\n\nexport const addLocation = mutatorAction(\n\t'addLocation',\n\t(locationData: any, locationPath: any) => {\n\t\tif (locationData) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst locationId = locationData.details\n\t\t\t\t.replace(/[^a-z0-9\\s]/gi, '')\n\t\t\t\t.replace(/\\s/g, '_')\n\t\t\t\t.toLowerCase()\n\n\t\t\tlet locationFilePath = [locationId]\n\n\t\t\tif (locationPath) {\n\t\t\t\tconst pathArray = locationPath.split('/')\n\t\t\t\tpathArray.splice(-1, 1)\n\t\t\t\tpathArray.push('regions')\n\t\t\t\tpathArray.push(locationId)\n\t\t\t\tlocationFilePath = pathArray\n\t\t\t}\n\n\t\t\tconst newLocation = createLocationDataObj(\n\t\t\t\tlocationId,\n\t\t\t\tlocationFilePath,\n\t\t\t\tlocationData,\n\t\t\t\tstore.currentLanguage\n\t\t\t)\n\n\t\t\tif (!locationPath) {\n\t\t\t\tstore.repoFileData[locationId] = newLocation\n\t\t\t} else {\n\t\t\t\tconst pathArray = locationPath.split('/')\n\t\t\t\tpathArray.splice(-1, 1)\n\n\t\t\t\tconst parentLocation = pathFind(store.repoFileData, pathArray)\n\t\t\t\tif (parentLocation.regions) {\n\t\t\t\t\tparentLocation.regions[locationId] = newLocation\n\t\t\t\t} else {\n\t\t\t\t\tparentLocation['regions'] = { [locationId]: newLocation }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstore.pendingChangeList.added.push({\n\t\t\t\tsection: 'location',\n\t\t\t\tname: locationFilePath.slice(-1)[0],\n\t\t\t\tpathKey: locationFilePath.join('.'),\n\t\t\t\tdata: newLocation,\n\t\t\t})\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nconst getRegionsRecursive = (location: any): any => {\n\tif (!location.regions) {\n\t\treturn [{ ...location }]\n\t}\n\n\tlet returnArr: any = [{ ...location }]\n\tfor (const item of Object.keys(location.regions)) {\n\t\tif (item) {\n\t\t\tconst region = location.regions[item]\n\t\t\treturnArr = returnArr.concat(getRegionsRecursive(region))\n\t\t}\n\t}\n\treturn returnArr\n}\n\nexport const deleteLocation = mutatorAction(\n\t'deleteLocation',\n\t(locationData: any) => {\n\t\tconst store = getAppStore()\n\t\tstore.pendingChanges = true\n\n\t\tconst pathArray = locationData.value.info.path.split('/')\n\t\tpathArray.splice(-1, 1)\n\n\t\tconst currentLocation = pathFind(store.repoFileData, pathArray)\n\t\tconst regions: any = getRegionsRecursive(currentLocation)\n\n\t\tif (pathArray.length === 1) {\n\t\t\tdelete store.repoFileData[locationData.key]\n\t\t} else {\n\t\t\tpathArray.splice(-1, 1)\n\t\t\tconst parentRegion = pathFind(store.repoFileData, pathArray)\n\t\t\tdelete parentRegion[locationData.key]\n\t\t}\n\n\t\tfor (const region of regions) {\n\t\t\tconst regionPathArray = region.info.path.split('/')\n\t\t\tregionPathArray.splice(-1, 1)\n\t\t\tstore.pendingChangeList.deleted.push({\n\t\t\t\tsection: 'location',\n\t\t\t\tname: regionPathArray.slice(-1)[0],\n\t\t\t\tpathKey: regionPathArray.join('.'),\n\t\t\t\tdata: region,\n\t\t\t})\n\t\t}\n\t\tstore.repoFileData = { ...store.repoFileData }\n\t}\n)\n\nexport const updateLocationData = mutatorAction(\n\t'updateLocationData',\n\t(locationData: any, locationPath: any) => {\n\t\tif (locationData) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst pathArray = locationPath.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\t\t\tconst rootPath = pathArray[0]\n\n\t\t\tconst currLocation = pathFind(store.repoFileData, pathArray)\n\t\t\tconst rootLocation = store.repoFileData[rootPath]\n\n\t\t\tconst currLocationNameKey = currLocation.info.content.name\n\n\t\t\tif (currLocation.strings.content[currLocationNameKey]) {\n\t\t\t\tcurrLocation.strings.content[currLocationNameKey][\n\t\t\t\t\tstore.currentLanguage\n\t\t\t\t] = locationData.details\n\t\t\t} else if (rootLocation.strings.content[currLocationNameKey]) {\n\t\t\t\trootLocation.strings.content[currLocationNameKey][\n\t\t\t\t\tstore.currentLanguage\n\t\t\t\t] = locationData.details\n\t\t\t} else {\n\t\t\t\tconst locationKey = `name.${pathArray.join('.')}`\n\t\t\t\tcurrLocation.strings.content = {\n\t\t\t\t\t[locationKey]: {\n\t\t\t\t\t\t[store.currentLanguage]: locationData.details,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tcurrLocation.info.content.name = locationKey\n\t\t\t}\n\n\t\t\tcurrLocation.info.content.type = locationData.regionType\n\t\t\tif (locationData.info !== '') {\n\t\t\t\tif (currLocation.vaccination.content.links.info) {\n\t\t\t\t\tcurrLocation.vaccination.content.links.info.url = locationData.info\n\t\t\t\t} else {\n\t\t\t\t\tcurrLocation.vaccination.content.links['info'] = {\n\t\t\t\t\t\turl: locationData.info,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete currLocation.vaccination.content.links.info\n\t\t\t}\n\n\t\t\tif (locationData.worflow !== '') {\n\t\t\t\tif (currLocation.vaccination.content.links.worflow) {\n\t\t\t\t\tcurrLocation.vaccination.content.links.worflow.url =\n\t\t\t\t\t\tlocationData.worflow\n\t\t\t\t} else {\n\t\t\t\t\tcurrLocation.vaccination.content.links['worflow'] = {\n\t\t\t\t\t\turl: locationData.worflow,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete currLocation.vaccination.content.links.worflow\n\t\t\t}\n\n\t\t\tif (locationData.scheduling !== '') {\n\t\t\t\tif (currLocation.vaccination.content.links.scheduling) {\n\t\t\t\t\tcurrLocation.vaccination.content.links.scheduling.url =\n\t\t\t\t\t\tlocationData.scheduling\n\t\t\t\t} else {\n\t\t\t\t\tcurrLocation.vaccination.content.links['scheduling'] = {\n\t\t\t\t\t\turl: locationData.scheduling,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete currLocation.vaccination.content.links.scheduling\n\t\t\t}\n\n\t\t\tif (locationData.providers !== '') {\n\t\t\t\tif (currLocation.vaccination.content.links.providers) {\n\t\t\t\t\tcurrLocation.vaccination.content.links.providers.url =\n\t\t\t\t\t\tlocationData.providers\n\t\t\t\t} else {\n\t\t\t\t\tcurrLocation.vaccination.content.links['providers'] = {\n\t\t\t\t\t\turl: locationData.providers,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete currLocation.vaccination.content.links.providers\n\t\t\t}\n\n\t\t\tif (locationData.eligibility !== '') {\n\t\t\t\tif (currLocation.vaccination.content.links.eligibility) {\n\t\t\t\t\tcurrLocation.vaccination.content.links.eligibility.url =\n\t\t\t\t\t\tlocationData.eligibility\n\t\t\t\t} else {\n\t\t\t\t\tcurrLocation.vaccination.content.links['eligibility'] = {\n\t\t\t\t\t\turl: locationData.eligibility,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete currLocation.vaccination.content.links.eligibility\n\t\t\t}\n\n\t\t\tif (locationData.eligibilityPlan !== '') {\n\t\t\t\tif (currLocation.vaccination.content.links.eligibility_plan) {\n\t\t\t\t\tcurrLocation.vaccination.content.links.eligibility_plan.url =\n\t\t\t\t\t\tlocationData.eligibilityPlan\n\t\t\t\t} else {\n\t\t\t\t\tcurrLocation.vaccination.content.links['eligibility_plan'] = {\n\t\t\t\t\t\turl: locationData.eligibilityPlan,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete currLocation.vaccination.content.links.eligibility_plan\n\t\t\t}\n\n\t\t\tif (locationData.schedulingPhone !== '') {\n\t\t\t\tif (currLocation.vaccination.content.links.scheduling_phone) {\n\t\t\t\t\tconst schedulingPhoneKey =\n\t\t\t\t\t\tcurrLocation.vaccination.content.links.scheduling_phone.text\n\n\t\t\t\t\tif (currLocation.strings.content[schedulingPhoneKey]) {\n\t\t\t\t\t\tcurrLocation.strings.content[schedulingPhoneKey][\n\t\t\t\t\t\t\tstore.currentLanguage\n\t\t\t\t\t\t] = locationData.schedulingPhone\n\t\t\t\t\t} else if (rootLocation.strings.content[schedulingPhoneKey]) {\n\t\t\t\t\t\trootLocation.strings.content[schedulingPhoneKey][\n\t\t\t\t\t\t\tstore.currentLanguage\n\t\t\t\t\t\t] = locationData.schedulingPhone\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrLocation.vaccination.content.links.scheduling_phone.url = `tel:${locationData.schedulingPhone}`\n\n\t\t\t\t\tif (locationData.schedulingPhoneDesc !== '') {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcurrLocation.vaccination.content.links.scheduling_phone\n\t\t\t\t\t\t\t\t.description\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst schedulingPhoneDescKey =\n\t\t\t\t\t\t\t\tcurrLocation.vaccination.content.links.scheduling_phone\n\t\t\t\t\t\t\t\t\t.description\n\t\t\t\t\t\t\tif (currLocation.strings.content[schedulingPhoneDescKey]) {\n\t\t\t\t\t\t\t\tcurrLocation.strings.content[schedulingPhoneDescKey][\n\t\t\t\t\t\t\t\t\tstore.currentLanguage\n\t\t\t\t\t\t\t\t] = locationData.schedulingPhoneDesc\n\t\t\t\t\t\t\t} else if (rootLocation.strings.content[schedulingPhoneDescKey]) {\n\t\t\t\t\t\t\t\trootLocation.strings.content[schedulingPhoneDescKey][\n\t\t\t\t\t\t\t\t\tstore.currentLanguage\n\t\t\t\t\t\t\t\t] = locationData.schedulingPhoneDesc\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst schedulingPhoneDescKey = `c19.link/scheduling.phone.description.${pathArray.join(\n\t\t\t\t\t\t\t\t'.'\n\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\tcurrLocation.strings.content[schedulingPhoneDescKey] = {\n\t\t\t\t\t\t\t\t[store.currentLanguage]: locationData.schedulingPhoneDesc,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrLocation.vaccination.content.links.scheduling_phone[\n\t\t\t\t\t\t\t\t'description'\n\t\t\t\t\t\t\t] = schedulingPhoneDescKey\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete currLocation.vaccination.content.links.scheduling_phone\n\t\t\t\t\t\t\t.description\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst schedulingPhoneKey = `c19.link/scheduling.phone.${pathArray.join(\n\t\t\t\t\t\t'.'\n\t\t\t\t\t)}`\n\t\t\t\t\tconst schedulingPhoneObj: any = {\n\t\t\t\t\t\ttext: schedulingPhoneKey,\n\t\t\t\t\t\turl: `tel:${locationData.schedulingPhone}`,\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrLocation.strings.content[schedulingPhoneKey] = {\n\t\t\t\t\t\t[store.currentLanguage]: locationData.schedulingPhone,\n\t\t\t\t\t}\n\n\t\t\t\t\tif (locationData.schedulingPhoneDesc !== '') {\n\t\t\t\t\t\tconst schedulingPhoneDescKey = `c19.link/scheduling.phone.description.${pathArray.join(\n\t\t\t\t\t\t\t'.'\n\t\t\t\t\t\t)}`\n\t\t\t\t\t\tcurrLocation.strings.content[schedulingPhoneDescKey] = {\n\t\t\t\t\t\t\t[store.currentLanguage]: locationData.schedulingPhoneDesc,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tschedulingPhoneObj['description'] = schedulingPhoneDescKey\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrLocation.vaccination.content.links.scheduling_phone = schedulingPhoneObj\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete currLocation.vaccination.content.links.scheduling_phone\n\t\t\t}\n\n\t\t\tcurrLocation.vaccination.content['noPhaseLabel'] =\n\t\t\t\tlocationData.noPhaseLabel\n\n\t\t\tconst pathKey = pathArray.join('.')\n\t\t\tconst modifyKeyIdx = store.pendingChangeList.modified.findIndex(\n\t\t\t\t(m: any) => m.pathKey === pathKey && m.section === 'location'\n\t\t\t)\n\n\t\t\tif (modifyKeyIdx > -1) {\n\t\t\t\tstore.pendingChangeList.modified[modifyKeyIdx].data = currLocation\n\t\t\t} else {\n\t\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\t\tsection: 'location',\n\t\t\t\t\tname: pathArray.slice(-1)[0],\n\t\t\t\t\tpathKey: pathKey,\n\t\t\t\t\tdata: currLocation,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst modifyRootKeyIdx = store.pendingChangeList.modified.findIndex(\n\t\t\t\t(m: any) => m.pathKey === rootPath\n\t\t\t)\n\n\t\t\tif (modifyRootKeyIdx > -1) {\n\t\t\t\tstore.pendingChangeList.modified[modifyRootKeyIdx].data = rootLocation\n\t\t\t} else {\n\t\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\t\tsection: 'location',\n\t\t\t\t\tname: rootPath,\n\t\t\t\t\tpathKey: rootPath,\n\t\t\t\t\tdata: rootLocation,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nconst copyPhaseData = (currentLocation: any, phases: any) => {\n\tphases.forEach((phase: any) => {\n\t\tphase.qualifications.forEach((question: any) => {\n\t\t\tdelete question.moreInfoText\n\t\t\tdelete question.moreInfoTextSms\n\t\t\tdelete question.moreInfoTextVoice\n\t\t\tdelete question.moreInfoUrl\n\t\t})\n\t})\n\n\tcurrentLocation.vaccination.content.phases = phases\n}\n\nexport const modifyMoreInfoText = mutatorAction(\n\t'modifyMoreInfoText',\n\t({\n\t\tcurrentLocation,\n\t\tphaseGroupId,\n\t\tqualifierId,\n\t\tmoreInfoText,\n\t\tmoreInfoTextSms,\n\t\tmoreInfoTextVoice,\n\t}: any) => {\n\t\tif (currentLocation && phaseGroupId && qualifierId) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\t\t\tconst isRootLocation = pathArray.length === 1\n\n\t\t\tconst { phases, activePhase } = getLocationPhaseData(currentLocation)\n\n\t\t\tif (\n\t\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t\t) {\n\t\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t\t}\n\n\t\t\tif (!currentLocation.vaccination.content?.activePhase) {\n\t\t\t\tcurrentLocation.vaccination.content.activePhase = activePhase\n\t\t\t}\n\n\t\t\tconst phaseGroupIndex = currentLocation.vaccination.content.phases.findIndex(\n\t\t\t\t(phase: any) => phase.id === phaseGroupId\n\t\t\t)\n\n\t\t\tconst phaseQualifiers =\n\t\t\t\tcurrentLocation.vaccination.content.phases[phaseGroupIndex]\n\t\t\t\t\t.qualifications\n\t\t\tconst qualifierIdx = phaseQualifiers.findIndex(\n\t\t\t\t(pq: any) => pq.question === qualifierId\n\t\t\t)\n\n\t\t\tlet calcInfoKey = `${qualifierId.replace('question', 'moreinfo')}`\n\n\t\t\tif (!isRootLocation) {\n\t\t\t\tconst locationCode =\n\t\t\t\t\tcurrentLocation.info.content?.metadata?.code_alpha ||\n\t\t\t\t\tcurrentLocation.info.content.id\n\t\t\t\tcalcInfoKey += `.${locationCode.toLowerCase()}.${phaseGroupId}`\n\t\t\t}\n\n\t\t\tif (!moreInfoText) {\n\t\t\t\tdelete currentLocation.strings.content[calcInfoKey]\n\t\t\t} else {\n\t\t\t\tconst newStringsObj: any = {}\n\t\t\t\tnewStringsObj[store.currentLanguage] = moreInfoText\n\t\t\t\tcurrentLocation.strings.content[calcInfoKey] = newStringsObj\n\n\t\t\t\tphaseQualifiers[qualifierIdx].moreInfoText = calcInfoKey\n\t\t\t}\n\n\t\t\tconst moreInfoSmsKey = calcInfoKey.replace('moreinfo', 'moreinfo.sms')\n\t\t\tif (!moreInfoTextSms) {\n\t\t\t\tdelete currentLocation.strings.content[moreInfoSmsKey]\n\t\t\t} else {\n\t\t\t\tconst newStringsObj: any = {}\n\t\t\t\tnewStringsObj[store.currentLanguage] = moreInfoTextSms\n\t\t\t\tcurrentLocation.strings.content[moreInfoSmsKey] = newStringsObj\n\n\t\t\t\tphaseQualifiers[qualifierIdx].moreInfoTextSms = moreInfoSmsKey\n\t\t\t}\n\n\t\t\tconst moreInfoVoiceKey = calcInfoKey.replace('moreinfo', 'moreinfo.voice')\n\t\t\tif (!moreInfoTextVoice) {\n\t\t\t\tdelete currentLocation.strings.content[moreInfoVoiceKey]\n\t\t\t} else {\n\t\t\t\tconst newStringsObj: any = {}\n\t\t\t\tnewStringsObj[store.currentLanguage] = moreInfoTextVoice\n\t\t\t\tcurrentLocation.strings.content[moreInfoVoiceKey] = newStringsObj\n\n\t\t\t\tphaseQualifiers[qualifierIdx].moreInfoTextVoice = moreInfoVoiceKey\n\t\t\t}\n\n\t\t\tconst pathKey = pathArray.join('.')\n\t\t\tconst modifyKeyIdx = store.pendingChangeList.modified.findIndex(\n\t\t\t\t(m: any) => m.pathKey === pathKey && m.section === 'qualifier'\n\t\t\t)\n\n\t\t\tif (modifyKeyIdx > -1) {\n\t\t\t\tstore.pendingChangeList.modified[modifyKeyIdx].data = currentLocation\n\t\t\t} else {\n\t\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\t\tsection: 'qualifier',\n\t\t\t\t\tname: currentLocation.info.content.id,\n\t\t\t\t\tpathKey: pathKey,\n\t\t\t\t\tdata: currentLocation,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const modifyMoreInfoLinks = mutatorAction(\n\t'modifyMoreInfoLinks',\n\t({ currentLocation, phaseGroupId, qualifierId, moreInfoUrl }: any) => {\n\t\tif (currentLocation && phaseGroupId && qualifierId && moreInfoUrl) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\n\t\t\tconst { phases, activePhase } = getLocationPhaseData(currentLocation)\n\n\t\t\tif (\n\t\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t\t) {\n\t\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t\t}\n\n\t\t\tif (!currentLocation.vaccination.content?.activePhase) {\n\t\t\t\tcurrentLocation.vaccination.content.activePhase = activePhase\n\t\t\t}\n\n\t\t\tconst phaseGroupIndex = currentLocation.vaccination.content.phases.findIndex(\n\t\t\t\t(phase: any) => phase.id === phaseGroupId\n\t\t\t)\n\n\t\t\tconst phaseQualifiers =\n\t\t\t\tcurrentLocation.vaccination.content.phases[phaseGroupIndex]\n\t\t\t\t\t.qualifications\n\t\t\tconst qualifierIdx = phaseQualifiers.findIndex(\n\t\t\t\t(pq: any) => pq.question === qualifierId\n\t\t\t)\n\n\t\t\tphaseQualifiers[qualifierIdx].moreInfoUrl = moreInfoUrl\n\t\t\tconst pathKey = pathArray.join('.')\n\t\t\tconst modifyKeyIdx = store.pendingChangeList.modified.findIndex(\n\t\t\t\t(m: any) => m.pathKey === pathKey && m.section === 'qualifier'\n\t\t\t)\n\n\t\t\tif (modifyKeyIdx > -1) {\n\t\t\t\tstore.pendingChangeList.modified[modifyKeyIdx].data = currentLocation\n\t\t\t} else {\n\t\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\t\tsection: 'qualifier',\n\t\t\t\t\tname: currentLocation.info.content.id,\n\t\t\t\t\tpathKey: pathKey,\n\t\t\t\t\tdata: currentLocation,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const updateQualifier = mutatorAction(\n\t'updateQualifier',\n\t({ currentLocation, phaseGroupId, qualifierId, oldQualifierId }: any) => {\n\t\tif (currentLocation && phaseGroupId && qualifierId && oldQualifierId) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\n\t\t\tconst qualifierSmsKey = qualifierId.replace(\n\t\t\t\t'.question/',\n\t\t\t\t'.question.sms/'\n\t\t\t)\n\t\t\tconst qualifierVoiceKey = qualifierId.replace(\n\t\t\t\t'.question/',\n\t\t\t\t'.question.voice/'\n\t\t\t)\n\n\t\t\tconst rootStringsObj = store.repoFileData[pathArray[0]].strings.content\n\t\t\tconst phaseQualiferObj: any = { question: qualifierId }\n\n\t\t\tif (rootStringsObj[qualifierSmsKey]) {\n\t\t\t\tphaseQualiferObj.questionSms = qualifierSmsKey\n\t\t\t}\n\n\t\t\tif (rootStringsObj[qualifierVoiceKey]) {\n\t\t\t\tphaseQualiferObj.questionVoice = qualifierVoiceKey\n\t\t\t}\n\n\t\t\tconst { phases, activePhase } = getLocationPhaseData(currentLocation)\n\n\t\t\tif (\n\t\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t\t) {\n\t\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t\t}\n\n\t\t\tif (!currentLocation.vaccination.content?.activePhase) {\n\t\t\t\tcurrentLocation.vaccination.content.activePhase = activePhase\n\t\t\t}\n\n\t\t\tconst phaseGroupIndex = currentLocation.vaccination.content.phases.findIndex(\n\t\t\t\t(phase: any) => phase.id === phaseGroupId\n\t\t\t)\n\n\t\t\tconst phaseQualifiers =\n\t\t\t\tcurrentLocation.vaccination.content.phases[phaseGroupIndex]\n\t\t\t\t\t.qualifications\n\t\t\tconst qualifierIdx = phaseQualifiers.findIndex(\n\t\t\t\t(pq: any) => pq.question === oldQualifierId\n\t\t\t)\n\n\t\t\tconst oldQualifierObj = phaseQualifiers[qualifierIdx]\n\n\t\t\tif (oldQualifierObj.moreInfoText) {\n\t\t\t\tdelete currentLocation.strings.content[oldQualifierObj.moreInfoText]\n\t\t\t}\n\n\t\t\tif (oldQualifierObj.moreInfoTextSms) {\n\t\t\t\tdelete currentLocation.strings.content[oldQualifierObj.moreInfoTextSms]\n\t\t\t}\n\n\t\t\tif (oldQualifierObj.moreInfoTextVoice) {\n\t\t\t\tdelete currentLocation.strings.content[\n\t\t\t\t\toldQualifierObj.moreInfoTextVoice\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tphaseQualifiers[qualifierIdx] = phaseQualiferObj\n\n\t\t\tconst pathKey = pathArray.join('.')\n\t\t\tconst modifyKeyIdx = store.pendingChangeList.modified.findIndex(\n\t\t\t\t(m: any) => m.pathKey === pathKey && m.section === 'qualifier'\n\t\t\t)\n\n\t\t\tif (modifyKeyIdx > -1) {\n\t\t\t\tstore.pendingChangeList.modified[modifyKeyIdx].data = currentLocation\n\t\t\t} else {\n\t\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\t\tsection: 'qualifier',\n\t\t\t\t\tname: currentLocation.info.content.id,\n\t\t\t\t\tpathKey: pathKey,\n\t\t\t\t\tdata: currentLocation,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const addQualifier = mutatorAction(\n\t'addQualifier',\n\t({ currentLocation, phaseGroupId, qualifierId }: any) => {\n\t\tif (currentLocation && phaseGroupId && qualifierId) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\n\t\t\tconst qualifierSmsKey = qualifierId.replace(\n\t\t\t\t'.question/',\n\t\t\t\t'.question.sms/'\n\t\t\t)\n\t\t\tconst qualifierVoiceKey = qualifierId.replace(\n\t\t\t\t'.question/',\n\t\t\t\t'.question.voice/'\n\t\t\t)\n\n\t\t\tconst rootStringsObj = store.repoFileData[pathArray[0]].strings.content\n\t\t\tconst phaseQualiferObj: any = { question: qualifierId }\n\n\t\t\tif (rootStringsObj[qualifierSmsKey]) {\n\t\t\t\tphaseQualiferObj.questionSms = qualifierSmsKey\n\t\t\t}\n\n\t\t\tif (rootStringsObj[qualifierVoiceKey]) {\n\t\t\t\tphaseQualiferObj.questionVoice = qualifierVoiceKey\n\t\t\t}\n\n\t\t\tconst { phases, activePhase } = getLocationPhaseData(currentLocation)\n\n\t\t\tif (\n\t\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t\t) {\n\t\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t\t}\n\n\t\t\tif (!currentLocation.vaccination.content?.activePhase) {\n\t\t\t\tcurrentLocation.vaccination.content.activePhase = activePhase\n\t\t\t}\n\n\t\t\tconst phaseGroupIndex = currentLocation.vaccination.content.phases.findIndex(\n\t\t\t\t(phase: any) => phase.id === phaseGroupId\n\t\t\t)\n\t\t\tconst pathKey = pathArray.join('.')\n\n\t\t\tconst phaseQualifiers =\n\t\t\t\tcurrentLocation.vaccination.content.phases[phaseGroupIndex]\n\t\t\t\t\t.qualifications\n\t\t\tphaseQualifiers.push(phaseQualiferObj)\n\n\t\t\tstore.pendingChangeList.added.push({\n\t\t\t\tsection: 'qualifier',\n\t\t\t\tname: currentLocation.info.content.id,\n\t\t\t\tpathKey: pathKey,\n\t\t\t\tdata: currentLocation,\n\t\t\t})\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const removeQualifier = mutatorAction(\n\t'removeQualifier',\n\t({ currentLocation, phaseGroupId, qualifierId }: any) => {\n\t\tif (currentLocation && phaseGroupId && qualifierId) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\n\t\t\tconst { phases, activePhase } = getLocationPhaseData(currentLocation)\n\n\t\t\tif (\n\t\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t\t) {\n\t\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t\t}\n\n\t\t\tif (!currentLocation.vaccination.content?.activePhase) {\n\t\t\t\tcurrentLocation.vaccination.content.activePhase = activePhase\n\t\t\t}\n\n\t\t\tconst phaseGroupIndex = currentLocation.vaccination.content.phases.findIndex(\n\t\t\t\t(phase: any) => phase.id === phaseGroupId\n\t\t\t)\n\t\t\tconst pathKey = pathArray.join('.')\n\n\t\t\tconst phaseQualifiers =\n\t\t\t\tcurrentLocation.vaccination.content.phases[phaseGroupIndex]\n\t\t\t\t\t.qualifications\n\t\t\tconst qualifierIdx = phaseQualifiers.findIndex(\n\t\t\t\t(pq: any) => pq.question === qualifierId\n\t\t\t)\n\n\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\tsection: 'qualifier',\n\t\t\t\tname: currentLocation.info.content.id,\n\t\t\t\tpathKey: pathKey,\n\t\t\t\tdata: currentLocation,\n\t\t\t})\n\n\t\t\tphaseQualifiers.splice(qualifierIdx, 1)\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const removePhase = mutatorAction(\n\t'removePhase',\n\t({ currentLocation, phaseId }: any) => {\n\t\tif (currentLocation && phaseId) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\n\t\t\tconst { phases } = getLocationPhaseData(currentLocation)\n\n\t\t\tconst removeIndex = phases.findIndex((phase: any) => phase.id === phaseId)\n\t\t\tconst name = phases[removeIndex].label || phases[removeIndex].id\n\t\t\tphases.splice(removeIndex, 1)\n\n\t\t\tif (\n\t\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t\t) {\n\t\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t\t} else {\n\t\t\t\tcurrentLocation.vaccination.content.phases = phases\n\t\t\t}\n\n\t\t\tif (currentLocation.vaccination.content.activePhase === phaseId) {\n\t\t\t\tdelete currentLocation.vaccination.content.activePhase\n\t\t\t}\n\n\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\tsection: 'phase',\n\t\t\t\tname: name,\n\t\t\t\tpathKey: pathArray.join('.'),\n\t\t\t\tdata: currentLocation,\n\t\t\t})\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const updatePhase = mutatorAction(\n\t'updatePhase',\n\t(currentLocation: any, phaseId: string, phaseName: string) => {\n\t\tconst store = getAppStore()\n\t\tstore.pendingChanges = true\n\n\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\tpathArray.splice(-1, 1)\n\n\t\tconst { phases, activePhase } = getLocationPhaseData(currentLocation)\n\n\t\tif (\n\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t) {\n\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t} else {\n\t\t\tcurrentLocation.vaccination.content.phases = phases\n\t\t}\n\n\t\tif (!currentLocation.vaccination.content?.activePhase) {\n\t\t\tcurrentLocation.vaccination.content.activePhase = activePhase\n\t\t}\n\n\t\tconst affectedPhase = currentLocation.vaccination.content.phases.find(\n\t\t\t(phase: any) => phase.id === phaseId\n\t\t)\n\n\t\taffectedPhase.label = phaseName\n\n\t\tconst pathKey = pathArray.join('.')\n\t\tconst modifyKeyIdx = store.pendingChangeList.modified.findIndex(\n\t\t\t(m: any) => m.pathKey === pathKey && m.section === 'phase'\n\t\t)\n\n\t\tif (modifyKeyIdx > -1) {\n\t\t\tstore.pendingChangeList.modified[modifyKeyIdx].data = currentLocation\n\t\t} else {\n\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\tsection: 'phase',\n\t\t\t\tname: currentLocation.info.content.id,\n\t\t\t\tpathKey: pathKey,\n\t\t\t\tdata: currentLocation,\n\t\t\t})\n\t\t}\n\n\t\tstore.repoFileData = { ...store.repoFileData }\n\t}\n)\n\nexport const addPhase = mutatorAction(\n\t'addPhase',\n\t({ currentLocation, id, label }: any) => {\n\t\tif (currentLocation && id && label) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\t\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\n\t\t\tconst { phases, activePhase } = getLocationPhaseData(currentLocation)\n\n\t\t\tif (\n\t\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t\t) {\n\t\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t\t} else {\n\t\t\t\tcurrentLocation.vaccination.content.phases = phases\n\t\t\t}\n\n\t\t\tif (!currentLocation.vaccination.content?.activePhase) {\n\t\t\t\tcurrentLocation.vaccination.content.activePhase = activePhase\n\t\t\t}\n\n\t\t\tcurrentLocation.vaccination.content.phases.push({\n\t\t\t\tid,\n\t\t\t\tlabel,\n\t\t\t\tqualifications: [],\n\t\t\t})\n\n\t\t\tconst pathKey = pathArray.join('.')\n\t\t\tstore.pendingChangeList.added.push({\n\t\t\t\tsection: 'phase',\n\t\t\t\tname: label,\n\t\t\t\tpathKey: pathKey,\n\t\t\t\tdata: currentLocation,\n\t\t\t})\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const duplicatePhase = mutatorAction(\n\t'duplicatePhase',\n\t({ currentLocation, phaseId, name }: any) => {\n\t\tif (currentLocation && phaseId && name) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\t\t\tconst pathArray = currentLocation.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\n\t\t\tconst { phases } = getLocationPhaseData(currentLocation)\n\n\t\t\tif (\n\t\t\t\t!currentLocation.vaccination.content?.phases ||\n\t\t\t\tcurrentLocation.vaccination.content?.phases.length === 0\n\t\t\t) {\n\t\t\t\tcopyPhaseData(currentLocation, phases)\n\t\t\t} else {\n\t\t\t\tcurrentLocation.vaccination.content.phases = phases\n\t\t\t}\n\n\t\t\tconst phase = clone(\n\t\t\t\tcurrentLocation.vaccination.content.phases.find(\n\t\t\t\t\t(phase: any) => phase.id === phaseId\n\t\t\t\t)\n\t\t\t)\n\n\t\t\tconst duplicatePhase = {\n\t\t\t\t...phase,\n\t\t\t\tid: formatId(name),\n\t\t\t\tlabel: name,\n\t\t\t}\n\n\t\t\tcurrentLocation.vaccination.content.phases.push(duplicatePhase)\n\n\t\t\tconst pathKey = pathArray.join('.')\n\t\t\tstore.pendingChangeList.added.push({\n\t\t\t\tsection: 'phase',\n\t\t\t\tname: name,\n\t\t\t\tpathKey: pathKey,\n\t\t\t\tdata: currentLocation,\n\t\t\t})\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nexport const setActivePhase = mutatorAction(\n\t'setActivePhase',\n\t({ currentLocation, phaseId }): any => {\n\t\tif (currentLocation && phaseId) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\n\t\t\tconst { locationData: currLocation, pathKey } = getCurrentLocationObj(\n\t\t\t\tcurrentLocation\n\t\t\t)\n\n\t\t\tcurrLocation.vaccination.content.activePhase = phaseId\n\n\t\t\tconst modifyKeyIdx = store.pendingChangeList.modified.findIndex(\n\t\t\t\t(m: any) => m.pathKey === pathKey && m.section === 'phase'\n\t\t\t)\n\n\t\t\tif (modifyKeyIdx > -1) {\n\t\t\t\tstore.pendingChangeList.modified[modifyKeyIdx].data = currLocation\n\t\t\t} else {\n\t\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\t\tsection: 'phase',\n\t\t\t\t\tname: phaseId,\n\t\t\t\t\tpathKey: pathKey,\n\t\t\t\t\tdata: currLocation,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nconst deleteKeyRecursive = (key: string, dataSource: any, changeList: any) => {\n\tif (dataSource.regions) {\n\t\tfor (const region in dataSource.regions) {\n\t\t\tconst location = dataSource.regions[region]\n\t\t\tif (JSON.stringify(location)?.toLowerCase().includes(key)) {\n\t\t\t\tdeleteKeyRecursive(key, location, changeList)\n\t\t\t}\n\t\t}\n\t}\n\n\tif (\n\t\tJSON.stringify(dataSource.vaccination.content)?.toLowerCase().includes(key)\n\t) {\n\t\tconst pathArray = dataSource.info.path.split('/')\n\t\tpathArray.splice(-1, 1)\n\n\t\tdataSource.vaccination.content.phases.forEach((phase: any) => {\n\t\t\tif (JSON.stringify(phase)?.toLowerCase().includes(key)) {\n\t\t\t\tphase.qualifications.forEach((qualifier: any) => {\n\t\t\t\t\tObject.keys(qualifier).forEach((qualifierKey: string) => {\n\t\t\t\t\t\tif (qualifier[qualifierKey].toLowerCase() === key) {\n\t\t\t\t\t\t\tdelete qualifier[qualifierKey]\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tchangeList.push({\n\t\t\tsection: 'phase',\n\t\t\tname: dataSource.info.content.id,\n\t\t\tpathKey: pathArray.join('.'),\n\t\t\tdata: dataSource,\n\t\t})\n\t}\n}\n\nconst addKeyRecursive = (\n\tkey: string,\n\tdataSource: any,\n\tchangeList: any,\n\tisSms = false,\n\tisVoice = false\n) => {\n\tif (dataSource.regions) {\n\t\tfor (const region in dataSource.regions) {\n\t\t\tconst location = dataSource.regions[region]\n\t\t\tif (JSON.stringify(location)?.toLowerCase().includes(key)) {\n\t\t\t\taddKeyRecursive(key, location, changeList, isSms, isVoice)\n\t\t\t}\n\t\t}\n\t}\n\n\tif (\n\t\tJSON.stringify(dataSource.vaccination.content)?.toLowerCase().includes(key)\n\t) {\n\t\tconst pathArray = dataSource.info.path.split('/')\n\t\tpathArray.splice(-1, 1)\n\n\t\tdataSource.vaccination.content.phases.forEach((phase: any) => {\n\t\t\tif (JSON.stringify(phase)?.toLowerCase().includes(key)) {\n\t\t\t\tphase.qualifications.forEach((qualifier: any) => {\n\t\t\t\t\tif (qualifier.question.toLowerCase() === key) {\n\t\t\t\t\t\tif (isSms && !qualifier.questionSms) {\n\t\t\t\t\t\t\tqualifier.questionSms = key.replace(\n\t\t\t\t\t\t\t\t'.question/',\n\t\t\t\t\t\t\t\t'.question.sms/'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tchangeList.push({\n\t\t\t\t\t\t\t\tsection: 'phase',\n\t\t\t\t\t\t\t\tname: dataSource.info.content.id,\n\t\t\t\t\t\t\t\tpathKey: pathArray.join('.'),\n\t\t\t\t\t\t\t\tdata: dataSource,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isVoice && !qualifier.questionVoice) {\n\t\t\t\t\t\t\tqualifier.questionVoice = key.replace(\n\t\t\t\t\t\t\t\t'.question/',\n\t\t\t\t\t\t\t\t'.question.voice/'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tchangeList.push({\n\t\t\t\t\t\t\t\tsection: 'phase',\n\t\t\t\t\t\t\t\tname: dataSource.info.content.id,\n\t\t\t\t\t\t\t\tpathKey: pathArray.join('.'),\n\t\t\t\t\t\t\t\tdata: dataSource,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport const updateRootLocationQualifiers = mutatorAction(\n\t'updateRootLocationQualifiers',\n\t({ rootLocationKey, newQualifier }: any | undefined) => {\n\t\tif (rootLocationKey && newQualifier) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\t\t\tconst stringsObj = store.repoFileData[rootLocationKey].strings.content\n\n\t\t\tlet qualifierKey = ''\n\t\t\tlet qualifierSmsKey = ''\n\t\t\tlet qualifierVoiceKey = ''\n\n\t\t\tif (newQualifier.isNew) {\n\t\t\t\tconst qualifierKeyBank = newQualifier.qualifier\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.replace(/[^A-Za-z0-9]/g, '_')\n\t\t\t\t\t.split('_')\n\t\t\t\t\t.filter((i: string) => i) as string[]\n\n\t\t\t\tconst customStringKeys = Object.keys(stringsObj)\n\n\t\t\t\tlet qKey = ''\n\t\t\t\tfor (let i = 0; i < qualifierKeyBank.length; i++) {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tqKey = qualifierKeyBank[0]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tqKey = `${qKey}_${qualifierKeyBank[i]}`\n\t\t\t\t\t}\n\t\t\t\t\tqualifierKey = `c19.eligibility.question/${newQualifier.tagKey.toLowerCase()}.${qKey}`\n\n\t\t\t\t\tif (!customStringKeys.includes(qualifierKey)) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tqualifierKey = qualifierKey.endsWith('_')\n\t\t\t\t\t? qualifierKey.substr(0, qualifierKey.length - 1)\n\t\t\t\t\t: qualifierKey\n\n\t\t\t\tqualifierSmsKey = qualifierKey.replace('.question/', '.question.sms/')\n\t\t\t\tqualifierVoiceKey = qualifierKey.replace(\n\t\t\t\t\t'.question/',\n\t\t\t\t\t'.question.voice/'\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tqualifierKey = newQualifier.key\n\t\t\t\tqualifierSmsKey = newQualifier.key.replace(\n\t\t\t\t\t'.question/',\n\t\t\t\t\t'.question.sms/'\n\t\t\t\t)\n\t\t\t\tqualifierVoiceKey = newQualifier.key.replace(\n\t\t\t\t\t'.question/',\n\t\t\t\t\t'.question.voice/'\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tstringsObj[qualifierKey] = {\n\t\t\t\t...stringsObj[qualifierKey],\n\t\t\t\t[store.currentLanguage]: newQualifier.qualifier,\n\t\t\t}\n\n\t\t\tif (!newQualifier.qualifierSms && !newQualifier.isNew) {\n\t\t\t\tdeleteKeyRecursive(\n\t\t\t\t\tqualifierSmsKey,\n\t\t\t\t\tstore.repoFileData[rootLocationKey],\n\t\t\t\t\tstore.pendingChangeList.modified\n\t\t\t\t)\n\t\t\t\tdelete stringsObj[qualifierSmsKey]\n\t\t\t} else if (newQualifier.qualifierSms) {\n\t\t\t\taddKeyRecursive(\n\t\t\t\t\tqualifierKey,\n\t\t\t\t\tstore.repoFileData[rootLocationKey],\n\t\t\t\t\tstore.pendingChangeList.modified,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse\n\t\t\t\t)\n\t\t\t\tstringsObj[qualifierSmsKey] = {\n\t\t\t\t\t...stringsObj[qualifierSmsKey],\n\t\t\t\t\t[store.currentLanguage]: newQualifier.qualifierSms,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!newQualifier.qualifierVoice && !newQualifier.isNew) {\n\t\t\t\tdeleteKeyRecursive(\n\t\t\t\t\tqualifierVoiceKey,\n\t\t\t\t\tstore.repoFileData[rootLocationKey],\n\t\t\t\t\tstore.pendingChangeList.modified\n\t\t\t\t)\n\t\t\t\tdelete stringsObj[qualifierVoiceKey]\n\t\t\t} else if (newQualifier.qualifierVoice) {\n\t\t\t\taddKeyRecursive(\n\t\t\t\t\tqualifierKey,\n\t\t\t\t\tstore.repoFileData[rootLocationKey],\n\t\t\t\t\tstore.pendingChangeList.modified,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t\tstringsObj[qualifierVoiceKey] = {\n\t\t\t\t\t...stringsObj[qualifierVoiceKey],\n\t\t\t\t\t[store.currentLanguage]: newQualifier.qualifierVoice,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst modifyRootKeyIdx = store.pendingChangeList.modified.findIndex(\n\t\t\t\t(m: any) => m.pathKey === rootLocationKey\n\t\t\t)\n\n\t\t\tif (modifyRootKeyIdx > -1) {\n\t\t\t\tstore.pendingChangeList.modified[modifyRootKeyIdx].data =\n\t\t\t\t\tstore.repoFileData[rootLocationKey]\n\t\t\t} else {\n\t\t\t\tstore.pendingChangeList.modified.push({\n\t\t\t\t\tsection: 'qualifier',\n\t\t\t\t\tname: rootLocationKey,\n\t\t\t\t\tpathKey: rootLocationKey,\n\t\t\t\t\tdata: store.repoFileData[rootLocationKey],\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n\nconst recursiveFindAndReplace = (\n\tkey: string,\n\tsaveObj: any,\n\tlocation: any,\n\tchangeList: any\n) => {\n\tif (\n\t\tlocation.strings &&\n\t\tlocation.strings.content &&\n\t\tlocation.strings.content[key]\n\t) {\n\t\tconst { locationData, pathKey, name } = getCurrentLocationObj(location)\n\t\tlocation.strings.content[key] = saveObj\n\n\t\tconst translateChangeKey = changeList.findIndex(\n\t\t\t(m: any) => m.pathKey === pathKey && m.section === 'translations'\n\t\t)\n\t\tif (translateChangeKey === -1) {\n\t\t\tchangeList.push({\n\t\t\t\tsection: 'translations',\n\t\t\t\tname: name,\n\t\t\t\tpathKey: pathKey,\n\t\t\t\tdata: locationData,\n\t\t\t})\n\t\t}\n\t\treturn\n\t}\n\tif (location.regions) {\n\t\tfor (const region of Object.keys(location.regions)) {\n\t\t\tconst regionObj = location.regions[region]\n\t\t\tif (JSON.stringify(regionObj).includes(key)) {\n\t\t\t\trecursiveFindAndReplace(key, saveObj, regionObj, changeList)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport const updateStrings = mutatorAction(\n\t'udpateStrings',\n\t(stringsList: any) => {\n\t\tif (stringsList) {\n\t\t\tconst store = getAppStore()\n\t\t\tstore.pendingChanges = true\n\t\t\tObject.keys(stringsList).forEach((stringId: string) => {\n\t\t\t\tfor (const item of Object.keys(store.repoFileData)) {\n\t\t\t\t\tconst location = store.repoFileData[item]\n\t\t\t\t\tif (JSON.stringify(location).includes(stringId)) {\n\t\t\t\t\t\trecursiveFindAndReplace(\n\t\t\t\t\t\t\tstringId,\n\t\t\t\t\t\t\tstringsList[stringId],\n\t\t\t\t\t\t\tlocation,\n\t\t\t\t\t\t\tstore.pendingChangeList.modified\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tstore.repoFileData = { ...store.repoFileData }\n\t\t}\n\t}\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { get } from 'lodash'\nimport { ReactNode } from 'react'\nimport ReactHtmlParser from 'react-html-parser'\n\nimport { getAppStore } from '../store/store'\nimport { StringFormat } from '../utils/textUtils'\n\n/**\n *\n * @param key translation json key\n * @param isHtml true if getText parses translation string to html\n * @param insertStrings array of strings to inject into translation\n * @returns string or html\n */\nexport function getText(\n\tkey: string,\n\tisHtml: true,\n\t...insertStrings: any[]\n): ReactNode\nexport function getText(key: string): string\nexport function getText(\n\tkey: string,\n\tisHtml?: true,\n\t...insertStrings: any[]\n): any {\n\tconst { localization, defaultLanguage } = getAppStore()\n\n\tlet res =\n\t\tget(localization, key) ?? get(defaultLanguage, key) ?? `NO COPY FOR ${key}`\n\n\tif (!isHtml) return res.toString()\n\n\tif (insertStrings.length)\n\t\tres = ReactHtmlParser(StringFormat(res, ...insertStrings))\n\telse res = ReactHtmlParser(res)\n\n\treturn res\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tProgressIndicator,\n\tIColumn,\n\tFontIcon,\n\tDialog,\n\tDialogType,\n\tDialogFooter,\n\tPrimaryButton,\n\tDefaultButton,\n\tCallout,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect, useCallback } from 'react'\nimport { initializeGitData, loadPR, loadBranch } from '../actions/repoActions'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getAppStore } from '../store/store'\n\nimport './Dashboard.scss'\n\nexport default observer(function Dashboard() {\n\tconst state = getAppStore()\n\tconst [prList, setPRList] = useState<any[]>([])\n\tconst [issueList, setIssueList] = useState<any[]>([])\n\tconst [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true)\n\tconst [noteKeys, setNoteKeys] = useState<any>([])\n\n\tuseEffect(() => {\n\t\tif (state.issues) {\n\t\t\tconst tempPRList: any = []\n\t\t\tconst tempIssueList: any = []\n\t\t\tstate.issues.forEach((item: any) => {\n\t\t\t\tconst requestUpdate: Date = new Date(item.updated_at)\n\t\t\t\tconst isScrappedIssue = item.labels.some(\n\t\t\t\t\t(x: any) => x.name.toLowerCase() === 'scrapped changes'\n\t\t\t\t)\n\n\t\t\t\tif (item.pull_request) {\n\t\t\t\t\ttempPRList.push({\n\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\tauthor: item.user.login,\n\t\t\t\t\t\tupdate: requestUpdate.toLocaleString(),\n\t\t\t\t\t\taction: item,\n\t\t\t\t\t})\n\t\t\t\t} else if (isScrappedIssue) {\n\t\t\t\t\ttempIssueList.push({\n\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\tauthor: item.user.login,\n\t\t\t\t\t\tupdate: requestUpdate.toLocaleString(),\n\t\t\t\t\t\taction: item,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tsetPRList(tempPRList)\n\t\t\tsetIssueList(tempIssueList)\n\t\t}\n\t}, [state.issues])\n\n\tconst onIssueActionRender = (\n\t\titem?: any,\n\t\tindex?: number,\n\t\tcolumn?: IColumn\n\t) => {\n\t\treturn (\n\t\t\t<a\n\t\t\t\tclassName=\"tableActionLink\"\n\t\t\t\thref={item?.action?.html_url}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>\n\t\t\t\t<FontIcon iconName=\"CircleAdditionSolid\" />\n\t\t\t\t{t('Dashboard.LocationUpdates.view')}\n\t\t\t</a>\n\t\t)\n\t}\n\n\tconst onPRActionRender = (item?: any, index?: number, column?: IColumn) => {\n\t\tconst disabled = state.loadedPRData?.number === item?.action.number\n\t\treturn (\n\t\t\t<div className=\"actionsColumn\">\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"tableActionLink\"\n\t\t\t\t\thref={item?.action?.html_url}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t<FontIcon iconName=\"CircleAdditionSolid\" />\n\t\t\t\t\t{t('Dashboard.PendingPRs.approve')}\n\t\t\t\t</a>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loadPRButton ${disabled ? 'disabled' : ''}`}\n\t\t\t\t\tonClick={() => loadPR(item.action.number)}\n\t\t\t\t>\n\t\t\t\t\t<FontIcon iconName=\"DrillDownSolid\" />\n\t\t\t\t\t{t('Dashboard.PendingPRs.load')}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst onBranchActionRender = (\n\t\titem?: any,\n\t\tindex?: number,\n\t\tcolumn?: IColumn\n\t) => {\n\t\tconst disabled = state.userWorkingBranch === item?.name\n\n\t\treturn (\n\t\t\t<div className=\"actionsColumn\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loadPRButton ${disabled ? 'disabled' : ''}`}\n\t\t\t\t\tonClick={() => loadBranch(item)}\n\t\t\t\t>\n\t\t\t\t\t<FontIcon iconName=\"DrillDownSolid\" />\n\t\t\t\t\t{t('Dashboard.WorkingBranches.load')}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst toggleCallout = useCallback(\n\t\t(id: number) => {\n\t\t\tconst tempItems = [...noteKeys]\n\t\t\tconst index = tempItems.indexOf(id)\n\t\t\tif (index > -1) {\n\t\t\t\ttempItems.splice(index, 1)\n\t\t\t} else {\n\t\t\t\ttempItems.push(id)\n\t\t\t}\n\n\t\t\tsetNoteKeys(tempItems)\n\t\t},\n\t\t[noteKeys]\n\t)\n\n\tconst onPRNotesRender = (item?: any, index?: number, column?: IColumn) => {\n\t\tif (!item.action.body) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<FontIcon\n\t\t\t\t\tclassName={`infoButton pr-${item.action.number}`}\n\t\t\t\t\ticonName=\"InfoSolid\"\n\t\t\t\t\tonClick={() => toggleCallout(item.action.number)}\n\t\t\t\t/>\n\t\t\t\t{noteKeys.includes(item.action.number) && (\n\t\t\t\t\t<Callout\n\t\t\t\t\t\tonDismiss={() => toggleCallout(item.action.number)}\n\t\t\t\t\t\ttarget={`.infoButton.pr-${item.action.number}`}\n\t\t\t\t\t\tgapSpace={4}\n\t\t\t\t\t\tsetInitialFocus={true}\n\t\t\t\t\t\trole=\"alertDialog\"\n\t\t\t\t\t\tclassName=\"infoCallout\"\n\t\t\t\t\t\tdirectionalHint={5}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"infoCalloutBody\">\n\t\t\t\t\t\t\t<div className=\"infoHeader\">\n\t\t\t\t\t\t\t\t{t('Dashboard.PendingPRs.notes')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"infoBody\">{item.action.body}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Callout>\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst onBranchCreatedDateRender = (item: any) => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{new Date(parseInt(item.name.split('-policy-')[1])).toLocaleString()}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst prColumns = [\n\t\t{\n\t\t\tkey: 'titleCol',\n\t\t\tname: t('Dashboard.LocationUpdates.columns.title'),\n\t\t\tfieldName: 'title',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'notesCol',\n\t\t\tname: t('Dashboard.LocationUpdates.columns.notes'),\n\t\t\tfieldName: 'notes',\n\t\t\tminWidth: 100,\n\t\t\tisResizable: true,\n\t\t\tonRender: onPRNotesRender,\n\t\t},\n\t\t{\n\t\t\tkey: 'authorCol',\n\t\t\tname: t('Dashboard.LocationUpdates.columns.author'),\n\t\t\tfieldName: 'author',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'updateCol',\n\t\t\tname: t('Dashboard.LocationUpdates.columns.update'),\n\t\t\tfieldName: 'update',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'actionCol',\n\t\t\tname: '',\n\t\t\tariaLabel: t('Dashboard.LocationUpdates.action.ariaLabel'),\n\t\t\tfieldName: 'action',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t\tonRender: onPRActionRender,\n\t\t},\n\t]\n\n\tconst issueColumns = [\n\t\t{\n\t\t\tkey: 'titleCol',\n\t\t\tname: t('Dashboard.LocationUpdates.columns.title'),\n\t\t\tfieldName: 'title',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'authorCol',\n\t\t\tname: t('Dashboard.LocationUpdates.columns.author'),\n\t\t\tfieldName: 'author',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'updateCol',\n\t\t\tname: t('Dashboard.LocationUpdates.columns.update'),\n\t\t\tfieldName: 'update',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'actionCol',\n\t\t\tname: '',\n\t\t\tariaLabel: t('Dashboard.LocationUpdates.columns.action.ariaLabel'),\n\t\t\tfieldName: 'action',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t\tonRender: onIssueActionRender,\n\t\t},\n\t]\n\n\tconst userWorkingBranchColumns = [\n\t\t{\n\t\t\tkey: 'branchName',\n\t\t\tname: t('Dashboard.WorkingBranches.columns.branchName'),\n\t\t\tfieldName: 'name',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'createdCol',\n\t\t\tname: t('Dashboard.WorkingBranches.columns.createdOn'),\n\t\t\tfieldName: 'createdOn',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t\tonRender: onBranchCreatedDateRender,\n\t\t},\n\t\t{\n\t\t\tkey: 'actionCol',\n\t\t\tname: '',\n\t\t\tariaLabel: t('Dashboard.WorkingBranches.columns.actionsColumn.ariaLabel'),\n\t\t\tfieldName: 'action',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t\tonRender: onBranchActionRender,\n\t\t},\n\t]\n\n\tconst refreshData = useCallback(() => {\n\t\tinitializeGitData()\n\t\ttoggleHideDialog()\n\t}, [toggleHideDialog])\n\n\tconst onRefreshDataClick = useCallback(() => {\n\t\tif (state.pendingChanges) {\n\t\t\ttoggleHideDialog()\n\t\t} else {\n\t\t\tinitializeGitData()\n\t\t}\n\t}, [state.pendingChanges, toggleHideDialog])\n\n\treturn (\n\t\t<div className=\"dashboardPageWrapper\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t<div className=\"breadCrumbs\">/ {t('Dashboard.title')}</div>\n\t\t\t\t\t\t<div className=\"mainTitle\">{t('Dashboard.title')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t{!state.isDataRefreshing ? (\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div className=\"refreshRow\">\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"refreshDataHeaderButton\"\n\t\t\t\t\t\t\t\t\tonClick={onRefreshDataClick}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon iconName=\"Refresh\" className=\"refreshIcon\" />\n\t\t\t\t\t\t\t\t\t{t('Dashboard.RefreshButton')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sectionHeader\">\n\t\t\t\t\t\t\t\t{t('Dashboard.WorkingBranches.title')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sectionContent\">\n\t\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\t\titems={state.userWorkingBranches}\n\t\t\t\t\t\t\t\t\tcolumns={userWorkingBranchColumns}\n\t\t\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\t\t\tariaLabelForSelectionColumn={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.WorkingBranches.ariaLabelForSelectionColumn'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.WorkingBranches.ariaLabelForSelectAllCheckbox'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcheckButtonAriaLabel={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.WorkingBranches.checkButtonAriaLabel'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{!state.userWorkingBranches.length && (\n\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t{t('Dashboard.WorkingBranches.empty')}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sectionHeader\">\n\t\t\t\t\t\t\t\t{t('Dashboard.PendingPRs.title')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sectionContent\">\n\t\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\t\titems={prList}\n\t\t\t\t\t\t\t\t\tcolumns={prColumns}\n\t\t\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\t\t\tariaLabelForSelectionColumn={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.PendingPRs.ariaLabelForSelectionColumn'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.PendingPRs.ariaLabelForSelectAllCheckbox'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcheckButtonAriaLabel={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.PendingPRs.checkButtonAriaLabel'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{!prList.length && (\n\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t{t('Dashboard.WorkingBranches.empty')}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sectionHeader\">\n\t\t\t\t\t\t\t\t{t('Dashboard.LocationUpdates.title')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sectionContent\">\n\t\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\t\titems={issueList}\n\t\t\t\t\t\t\t\t\tcolumns={issueColumns}\n\t\t\t\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\t\t\t\tariaLabelForSelectionColumn={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.LocationUpdates.ariaLabelForSelectionColumn'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tariaLabelForSelectAllCheckbox={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.LocationUpdates.ariaLabelForSelectAllCheckbox'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcheckButtonAriaLabel={t(\n\t\t\t\t\t\t\t\t\t\t'Dashboard.LocationUpdates.checkButtonAriaLabel'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{!issueList.length && (\n\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t{t('Dashboard.LocationUpdates.empty')}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<ProgressIndicator description={t('Dashboard.loading')} />\n\t\t\t\t\t\t</section>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Dialog\n\t\t\t\thidden={hideDialog}\n\t\t\t\tonDismiss={toggleHideDialog}\n\t\t\t\tdialogContentProps={{\n\t\t\t\t\ttype: DialogType.normal,\n\t\t\t\t\tcloseButtonAriaLabel: 'Close',\n\t\t\t\t\ttitle: t('Dashboard.RefreshButton'),\n\t\t\t\t}}\n\t\t\t\tmodalProps={{ isBlocking: false }}\n\t\t\t>\n\t\t\t\t<div className=\"dialogBodyText\">\n\t\t\t\t\t{t('Dashboard.PendingChangesDialog.text', true)}\n\t\t\t\t</div>\n\t\t\t\t<DialogFooter>\n\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\tonClick={refreshData}\n\t\t\t\t\t\ttext={t('Dashboard.PendingChangesDialog.submit')}\n\t\t\t\t\t/>\n\t\t\t\t\t<DefaultButton\n\t\t\t\t\t\tonClick={toggleHideDialog}\n\t\t\t\t\t\ttext={t('Dashboard.PendingChangesDialog.cancel')}\n\t\t\t\t\t/>\n\t\t\t\t</DialogFooter>\n\t\t\t</Dialog>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport { FC, memo } from 'react'\nimport { getText as t } from '../selectors/intlSelectors'\n\nconst CONTACT_EMAIL = process.env.REACT_APP_CONTACT_US_EMAIL\nconst CODE_OF_CONDUCT_URL = process.env.REACT_APP_CODE_OF_CONDUCT_URL\n\nexport default observer(function Footer() {\n\treturn (\n\t\t<div style={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t<div className=\"appFooterRow\">\n\t\t\t\t<Link href=\"https://go.microsoft.com/fwlink/?LinkId=521839\">\n\t\t\t\t\t{t('App.Footer.privacyCookies')}\n\t\t\t\t</Link>\n\t\t\t\t{' | '}\n\t\t\t\t<Link href={`mailto:${CONTACT_EMAIL}`}>\n\t\t\t\t\t{t('App.Footer.contactUs')}\n\t\t\t\t</Link>\n\t\t\t\t{' | '}\n\t\t\t\t<Link href={CODE_OF_CONDUCT_URL}>{t('App.Footer.codeOfConduct')}</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nconst Link: FC<{\n\thref?: string\n}> = memo(function Link({ children, href }) {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"div\"\n\t\t\tstyle={{\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tmarginLeft: 15,\n\t\t\t\tmarginRight: 15,\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignContent: 'center',\n\t\t\t}}\n\t\t\tonClick={() => href && window.open(href, '_blank')}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tPrimaryButton,\n\tDefaultButton,\n\tTextField,\n\tDropdown,\n\tIDropdownOption,\n\tCheckbox,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useRef, useState } from 'react'\nimport { getText as t } from '../selectors/intlSelectors'\nimport {\n\tgetCustomString,\n} from '../selectors/locationSelectors'\nimport { toProperCase } from '../utils/textUtils'\nimport './LocationForm.scss'\n\nexport interface LocationFormProp {\n\tcurrentLocation?: any\n\tcurrentPath:string\n\tonSubmit?: (locationData: any, prevItem: any, initPath:string) => void\n\tonCancel?: () => void\n}\n\nconst setInitialData = (currentLocation?: any) => {\n\n\tif (currentLocation) {\n\t\tconst { info, vaccination } = currentLocation || {}\n\t\tconst {\n\t\t\tinfo: vacInfo,\n\t\t\tscheduling_phone,\n\t\t\teligibility_plan,\n\t\t\tworkflow,\n\t\t\tscheduling,\n\t\t\tproviders,\n\t\t\teligibility,\n\t\t} = vaccination?.content?.links || {}\n\n\t\treturn {\n\t\t\tdetails: getCustomString(currentLocation, info.content.name) || toProperCase(info.content.name),\n\t\t\tregionType: info.content.type,\n\t\t\tinfo: vacInfo?.url || '',\n\t\t\tworkflow: workflow?.url || '',\n\t\t\tscheduling: scheduling?.url || '',\n\t\t\tproviders: providers?.url || '',\n\t\t\teligibility: eligibility?.url || '',\n\t\t\teligibilityPlan: eligibility_plan?.url || '',\n\t\t\tschedulingPhone: scheduling_phone?.text\n\t\t\t\t? getCustomString(currentLocation, scheduling_phone.text)\n\t\t\t\t: '',\n\t\t\tschedulingPhoneDesc: scheduling_phone?.description\n\t\t\t\t? getCustomString(currentLocation, scheduling_phone.description)\n\t\t\t\t: '',\n\t\t\tnoPhaseLabel: vaccination.content?.noPhaseLabel || false,\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tdetails: '',\n\t\t\tregionType: '',\n\t\t\tinfo: '',\n\t\t\tworkflow: '',\n\t\t\tscheduling: '',\n\t\t\tproviders: '',\n\t\t\teligibility: '',\n\t\t\teligibilityPlan: '',\n\t\t\tschedulingPhone: '',\n\t\t\tschedulingPhoneDesc: '',\n\t\t\tnoPhaseLabel: false,\n\t\t}\n\t}\n}\n\nexport default observer(function LocationForm(props: LocationFormProp) {\n\tconst { onSubmit, onCancel, currentLocation, currentPath } = props\n\tconst [formData, setFormData] = useState<any>(setInitialData(currentLocation))\n\tconst fieldChanges = useRef<any>(formData)\n\tconst regionTypeOptions = [\n\t\t{\n\t\t\tkey: 'country',\n\t\t\ttext: t('LocationForm.regionTypeOptions.country'),\n\t\t},\n\t\t{\n\t\t\tkey: 'state',\n\t\t\ttext: t('LocationForm.regionTypeOptions.state'),\n\t\t},\n\t\t{\n\t\t\tkey: 'territory',\n\t\t\ttext: t('LocationForm.regionTypeOptions.territory'),\n\t\t},\n\t\t{\n\t\t\tkey: 'tribal_land',\n\t\t\ttext: t('LocationForm.regionTypeOptions.tribal_land'),\n\t\t},\n\t\t{\n\t\t\tkey: 'county',\n\t\t\ttext: t('LocationForm.regionTypeOptions.county'),\n\t\t},\n\t\t{\n\t\t\tkey: 'city',\n\t\t\ttext: t('LocationForm.regionTypeOptions.city'),\n\t\t},\n\t]\n\n\tconst baseTitle = t('LocationForm.baseTitle.location')\n\tconst formTitle = currentLocation\n\t\t? `${t('LocationForm.formTitle.edit')} ${baseTitle}`\n\t\t: `${t('LocationForm.formTitle.new')} ${baseTitle}`\n\n\tconst handleRegionChange = useCallback(\n\t\t(_ev: any, item?: IDropdownOption) => {\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\tregionType: item?.key,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst onNoLabelChange = useCallback(\n\t\t(_ev: any, checked?: boolean) => {\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\tnoPhaseLabel: checked,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst canSubmit = useCallback(() => {\n\t\treturn formData.details !== '' && formData.regionType !== ''\n\t}, [formData])\n\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">{formTitle}</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<div className=\"detailsGroup\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel={t('LocationForm.details')}\n\t\t\t\t\t\tname=\"details\"\n\t\t\t\t\t\tvalue={formData.details}\n\t\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tselectedKey={formData.regionType}\n\t\t\t\t\t\tplaceholder={t('LocationForm.regionTypeOptions.placeholder')}\n\t\t\t\t\t\toptions={regionTypeOptions}\n\t\t\t\t\t\tonChange={handleRegionChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('LocationForm.info')}\n\t\t\t\t\tname=\"info\"\n\t\t\t\t\tvalue={formData.info}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('LocationForm.workflow')}\n\t\t\t\t\tname=\"workflow\"\n\t\t\t\t\tvalue={formData.workflow}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('LocationForm.scheduling')}\n\t\t\t\t\tname=\"scheduling\"\n\t\t\t\t\tvalue={formData.scheduling}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('LocationForm.providers')}\n\t\t\t\t\tname=\"providers\"\n\t\t\t\t\tvalue={formData.providers}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('LocationForm.eligibility')}\n\t\t\t\t\tname=\"eligibility\"\n\t\t\t\t\tvalue={formData.eligibility}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('LocationForm.eligibilityPlan')}\n\t\t\t\t\tname=\"eligibilityPlan\"\n\t\t\t\t\tvalue={formData.eligibilityPlan}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('LocationForm.schedulingPhone')}\n\t\t\t\t\tname=\"schedulingPhone\"\n\t\t\t\t\tvalue={formData.schedulingPhone}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('LocationForm.schedulingPhoneDesc')}\n\t\t\t\t\tname=\"schedulingPhoneDesc\"\n\t\t\t\t\tvalue={formData.schedulingPhoneDesc}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t/>\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabel={t('LocationForm.noPhaseLabel')}\n\t\t\t\t\tchecked={formData.noPhaseLabel}\n\t\t\t\t\tonChange={onNoLabelChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton\n\t\t\t\t\ttext={t('App.submit')}\n\t\t\t\t\tdisabled={!canSubmit()}\n\t\t\t\t\tonClick={() => onSubmit?.(formData, currentLocation, currentPath)}\n\t\t\t\t/>\n\t\t\t\t<DefaultButton text={t('App.cancel')} onClick={() => onCancel?.()} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tFontIcon,\n\tIColumn,\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tModal,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback } from 'react'\n\nimport { updateLocationData } from '../mutators/repoMutators'\n\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getCustomString } from '../selectors/locationSelectors'\nimport { getAppStore } from '../store/store'\n\nimport './Locations.scss'\nimport { toProperCase } from '../utils/textUtils'\nimport LocationForm from './LocationForm'\n\nexport interface LocationsDetailsProp {\n\tcurrentLocation: any\n}\n\nexport default observer(function LocationsDetails(props: LocationsDetailsProp) {\n\tconst { currentLocation } = props\n\tconst currentPath = currentLocation.info.path\n\tconst { isEditable } = getAppStore()\n\n\tconst [\n\t\tisLocationModalOpen,\n\t\t{ setTrue: openLocationModal, setFalse: dismissLocationModal },\n\t] = useBoolean(false)\n\n\tconst onLocationFormSubmit = useCallback(\n\t\t(locationFormData, prevItem, initPath) => {\n\t\t\tdismissLocationModal()\n\n\t\t\tif (prevItem) {\n\t\t\t\tupdateLocationData(locationFormData, initPath)\n\t\t\t}\n\t\t},\n\t\t[dismissLocationModal]\n\t)\n\n\tconst items = []\n\n\tconst locationName =\n\t\tgetCustomString(currentLocation, currentLocation?.info?.content?.name) ||\n\t\ttoProperCase(currentLocation?.info?.content?.id)\n\titems.push({ label: t('LocationForm.details'), value: locationName, isUrl: false })\n\n\tswitch (currentLocation.info.content.type.toLowerCase()) {\n\t\tcase 'state':\n\t\t\titems.push({\n\t\t\t\tlabel: t('LocationForm.regionTypeOptions.placeholder'),\n\t\t\t\tvalue: t('LocationForm.regionTypeOptions.state'),\n\t\t\t\tisUrl: false,\n\t\t\t})\n\t\t\tbreak\n\t\tcase 'territory':\n\t\t\titems.push({\n\t\t\t\tlabel: t('LocationForm.regionTypeOptions.placeholder'),\n\t\t\t\tvalue: t('LocationForm.regionTypeOptions.territory'),\n\t\t\t\tisUrl: false,\n\t\t\t})\n\t\t\tbreak\n\t\tcase 'tribal_land':\n\t\t\titems.push({\n\t\t\t\tlabel: t('LocationForm.regionTypeOptions.placeholder'),\n\t\t\t\tvalue: t('LocationForm.regionTypeOptions.tribal_land'),\n\t\t\t\tisUrl: false,\n\t\t\t})\n\t\t\tbreak\n\t\tcase 'county':\n\t\t\titems.push({\n\t\t\t\tlabel: t('LocationForm.regionTypeOptions.placeholder'),\n\t\t\t\tvalue: t('LocationForm.regionTypeOptions.county'),\n\t\t\t\tisUrl: false,\n\t\t\t})\n\t\t\tbreak\n\t\tcase 'city':\n\t\t\titems.push({\n\t\t\t\tlabel: t('LocationForm.regionTypeOptions.placeholder'),\n\t\t\t\tvalue: t('LocationForm.regionTypeOptions.city'),\n\t\t\t\tisUrl: false,\n\t\t\t})\n\t\t\tbreak\n\t}\n\n\tif (currentLocation.vaccination?.content.links.info?.url) {\n\t\titems.push({\n\t\t\tlabel: t('LocationForm.info'),\n\t\t\tvalue: currentLocation.vaccination.content.links.info.url,\n\t\t\tisUrl: true,\n\t\t})\n\t}\n\n\tif (currentLocation.vaccination?.content.links.workflow?.url) {\n\t\titems.push({\n\t\t\tlabel: t('LocationForm.workflow'),\n\t\t\tvalue: currentLocation.vaccination.content.links.workflow.url,\n\t\t\tisUrl: true,\n\t\t})\n\t}\n\n\tif (currentLocation.vaccination?.content.links.scheduling?.url) {\n\t\titems.push({\n\t\t\tlabel: t('LocationForm.scheduling'),\n\t\t\tvalue: currentLocation.vaccination.content.links.scheduling.url,\n\t\t\tisUrl: true,\n\t\t})\n\t}\n\n\tif (currentLocation.vaccination?.content.links.providers?.url) {\n\t\titems.push({\n\t\t\tlabel: t('LocationForm.providers'),\n\t\t\tvalue: currentLocation.vaccination.content.links.providers.url,\n\t\t\tisUrl: true,\n\t\t})\n\t}\n\n\tif (currentLocation.vaccination?.content.links.eligibility?.url) {\n\t\titems.push({\n\t\t\tlabel: t('LocationForm.eligibility'),\n\t\t\tvalue: currentLocation.vaccination.content.links.eligibility.url,\n\t\t\tisUrl: true,\n\t\t})\n\t}\n\n\tif (currentLocation.vaccination?.content.links.eligibility_plan?.url) {\n\t\titems.push({\n\t\t\tlabel: t('LocationForm.eligibilityPlan'),\n\t\t\tvalue: currentLocation.vaccination.content.links.eligibility_plan.url,\n\t\t\tisUrl: true,\n\t\t})\n\t}\n\n\tif (currentLocation.vaccination?.content.links.scheduling_phone?.text) {\n\t\titems.push({\n\t\t\tlabel: t('LocationForm.schedulingPhone'),\n\t\t\tvalue: getCustomString(\n\t\t\t\tcurrentLocation,\n\t\t\t\tcurrentLocation.vaccination.content.links.scheduling_phone.text\n\t\t\t),\n\t\t\tisUrl: false,\n\t\t})\n\t}\n\n\tif (\n\t\tcurrentLocation.vaccination?.content.links.scheduling_phone?.description\n\t) {\n\t\titems.push({\n\t\t\tlabel: t('LocationForm.schedulingPhoneDesc'),\n\t\t\tvalue: getCustomString(\n\t\t\t\tcurrentLocation,\n\t\t\t\tcurrentLocation.vaccination.content.links.scheduling_phone.description\n\t\t\t),\n\t\t\tisUrl: false,\n\t\t})\n\t}\n\n\titems.push({\n\t\tlabel: t('LocationForm.noPhaseLabel'),\n\t\tvalue:\n\t\t\tcurrentLocation.vaccination.content.noPhaseLabel === true ? 'Yes' : 'No',\n\t\tisUrl: false,\n\t})\n\n\tconst formValueRender = (item: any) => {\n\t\tif (item.isUrl) {\n\t\t\treturn (\n\t\t\t\t<a href={item.value} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t{item.value}\n\t\t\t\t</a>\n\t\t\t)\n\t\t}\n\t\treturn <span>{item.value}</span>\n\t}\n\tconst columns: IColumn[] = [\n\t\t{\n\t\t\tkey: 'label',\n\t\t\tname: 'label',\n\t\t\tfieldName: 'label',\n\t\t\tminWidth: 200,\n\t\t\tmaxWidth: 400,\n\t\t\tisMultiline: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'value',\n\t\t\tname: 'value',\n\t\t\tfieldName: 'value',\n\t\t\tonRender: formValueRender,\n\t\t\tminWidth: 200,\n\t\t\tmaxWidth: 400,\n\t\t},\n\t]\n\n\treturn (\n\t\t<>\n\t\t\t<section className=\"LocationsDetailsComponent\">\n\t\t\t\t<div className=\"locationDetailsSectionHeader\">\n\t\t\t\t\t<div>{t('LocationForm.detailsTitle')}</div>\n\t\t\t\t\t{isEditable && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"editLocationDetailsButton\"\n\t\t\t\t\t\t\tonClick={() => openLocationModal()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{t('LocationForm.EditDetailsButton')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<DetailsList\n\t\t\t\t\titems={items}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\tselectionPreservedOnEmptyClick={true}\n\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\tonRenderDetailsHeader={() => {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t\t<Modal\n\t\t\t\tisOpen={isLocationModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<LocationForm\n\t\t\t\t\tcurrentLocation={currentLocation}\n\t\t\t\t\tcurrentPath={currentPath}\n\t\t\t\t\tonCancel={dismissLocationModal}\n\t\t\t\t\tonSubmit={onLocationFormSubmit}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { PrimaryButton, DefaultButton, TextField } from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useRef, useState } from 'react'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getLocationPhaseData } from '../selectors/locationSelectors'\nimport { formatId } from '../utils/textUtils'\n\nimport './LocationForm.scss'\n\nexport interface PhaseFormProp {\n\titem?: any\n\tcurrentLocation?: any\n\tduplicate?: boolean\n\tonSubmit?: (phaseData: any) => void\n\tonCancel?: () => void\n}\n\nconst setInitialData = (item: any) => {\n\tif (item) {\n\t\treturn {\n\t\t\tphaseId: item.keyId,\n\t\t\tname: item.name.includes(` (${t('App.active')})`)\n\t\t\t\t? item.name.replace(` (${t('App.active')})`, '')\n\t\t\t\t: item.name,\n\t\t\tisActive: item.keyId.includes(` (${t('App.active')})`),\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tphaseId: null,\n\t\t\tname: '',\n\t\t\tisActive: false,\n\t\t}\n\t}\n}\n\nexport default observer(function PhaseForm(props: PhaseFormProp) {\n\tconst {\n\t\tonSubmit,\n\t\tonCancel,\n\t\titem,\n\t\tduplicate = false,\n\t\tcurrentLocation,\n\t} = props\n\tconst [formData, setFormData] = useState<any>(setInitialData(item))\n\tconst [hasError, setHasError] = useState<boolean>(false)\n\tconst fieldChanges = useRef<any>(formData)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst isDuplicate = useCallback(() => {\n\t\tif (!duplicate) return ''\n\n\t\tconst { phases } = getLocationPhaseData(currentLocation)\n\t\tconst nextPhaseId = formatId(formData.name)\n\t\tconst nameExists = phases.find((item: { id: string }) => item.id === nextPhaseId)\n\n\t\tif (nameExists) {\n\t\t\tsetHasError(true)\n\t\t\treturn t('PhaseForm.hasDuplicateName')\n\t\t} else {\n\t\t\tsetHasError(false)\n\t\t\treturn ''\n\t\t}\n\t}, [\n\t\tsetHasError,\n\t\tduplicate,\n\t\tformData?.name,\n\t\tcurrentLocation\n\t])\n\n\tconst disableSubmit = useCallback((): boolean => {\n\t\treturn hasError || formData.name === ''\n\t}, [formData, hasError])\n\n\tconst formTitle = duplicate\n\t\t? t('PhaseForm.title.duplicate')\n\t\t: item\n\t\t? t('PhaseForm.title.edit')\n\t\t: t('PhaseForm.title.new')\n\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">{formTitle}</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={t('PhaseForm.label')}\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={formData.name}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\tonGetErrorMessage={isDuplicate}\n\t\t\t\t\tvalidateOnLoad={false}\n\t\t\t\t\tvalidateOnFocusIn={false}\n\t\t\t\t\tvalidateOnFocusOut={true}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton\n\t\t\t\t\ttext={t('App.submit')}\n\t\t\t\t\tdisabled={disableSubmit()}\n\t\t\t\t\tonClick={() => onSubmit?.(formData)}\n\t\t\t\t/>\n\t\t\t\t<DefaultButton\n\t\t\t\t\ttext={t('App.cancel')}\n\t\t\t\t\tonClick={() => onCancel?.()}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tFontIcon,\n\tIColumn,\n\tModal,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { addPhase, updatePhase } from '../mutators/repoMutators'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getLocationPhaseData } from '../selectors/locationSelectors'\nimport { getAppStore } from '../store/store'\nimport { formatId } from '../utils/textUtils'\n\nimport './Locations.scss'\nimport PhaseForm from './PhaseForm'\n\nexport interface LocationsPhaseListProp {\n\tcurrentLocation: any\n\tonItemClicked?: (item: any) => void\n}\n\nexport default observer(function LocationsPhaseList(\n\tprops: LocationsPhaseListProp\n) {\n\tconst { currentLocation, onItemClicked } = props\n\tconst state = getAppStore()\n\tconst [phaseItemList, setPhaseItemList] = useState<any[]>([])\n\tconst [\n\t\tisPhaseModalOpen,\n\t\t{ setTrue: openPhaseModal, setFalse: dismissPhaseModal },\n\t] = useBoolean(false)\n\tconst selectedPhaseItem = useRef<any>(null)\n\n\tconst phaseColumns = [\n\t\t{\n\t\t\tkey: 'nameCol',\n\t\t\tname: t('LocationsRegions.PhaseOverview.columns.name'),\n\t\t\tfieldName: 'name',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'qualCol',\n\t\t\tname: t('LocationsRegions.PhaseOverview.columns.qualifications'),\n\t\t\tfieldName: 'qualifications',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editPhase',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter((loc) => (state.isEditable ? true : loc.key !== 'editCol'))\n\tconst activeText = t('App.active')\n\n\tuseEffect(() => {\n\t\tif (currentLocation) {\n\t\t\tconst newList = setInitialPhaseItems({\n\t\t\t\tkey: currentLocation.info.content.id,\n\t\t\t\tvalue: currentLocation,\n\t\t\t}, activeText)\n\t\t\tsetPhaseItemList(newList)\n\t\t}\n\t}, [currentLocation, setPhaseItemList, activeText])\n\n\tconst onPhaseFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedPhaseItem.current = item\n\t\t\topenPhaseModal()\n\t\t},\n\t\t[openPhaseModal]\n\t)\n\n\tconst onRenderItemColumn = useCallback(\n\t\t(item?: any, _index?: number, column?: IColumn) => {\n\t\t\tif (!column) return null\n\n\t\t\tconst fieldContent = item[column.fieldName as keyof any] as string\n\n\t\t\tif (column.key === 'editCol') {\n\t\t\t\treturn state.isEditable ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\ticonName=\"Edit\"\n\t\t\t\t\t\t\tclassName=\"editIcon\"\n\t\t\t\t\t\t\tonClick={() => onPhaseFormOpen(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t) : null\n\t\t\t} else {\n\t\t\t\treturn <span>{fieldContent}</span>\n\t\t\t}\n\t\t},\n\t\t[state.isEditable, onPhaseFormOpen]\n\t)\n\n\tconst onPhaseFormSubmit = useCallback(\n\t\t(phaseData: any) => {\n\t\t\tdismissPhaseModal()\n\t\t\tconst { activePhase } = getLocationPhaseData(currentLocation)\n\t\t\tlet newList = []\n\n\t\t\t// Update Phase\n\t\t\tif (phaseData.phaseId) {\n\t\t\t\tconst phaseId = phaseData.phaseId\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.replace(` (${t('LocationsRegions.active')})`, '')\n\t\t\t\t\t.trim()\n\t\t\t\t\t\t\t\t\t\n\t\t\t\tupdatePhase(currentLocation, phaseId, phaseData.name)\n\t\t\t}\n\t\t\t// Add Phase\n\t\t\telse {\n\t\t\t\taddPhase({\n\t\t\t\t\tcurrentLocation,\n\t\t\t\t\tid: formatId(phaseData.name),\n\t\t\t\t\tlabel: phaseData.name,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tnewList = generateUIPhaseList(\n\t\t\t\tcurrentLocation.vaccination.content.phases,\n\t\t\t\tactivePhase, activeText\n\t\t\t)\n\t\t\tsetPhaseItemList(newList)\n\t\t},\n\t\t[currentLocation, dismissPhaseModal, activeText]\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<section className=\"LocationPhaseListComponent\">\n\t\t\t\t<div className=\"locationPhaseOverviewSectionHeader\">\n\t\t\t\t\t<div>{t('LocationsRegions.PhaseOverview.title')}</div>\n\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"addPhaseHeaderButton\"\n\t\t\t\t\t\t\tonClick={() => onPhaseFormOpen()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{t('LocationsRegions.PhaseOverview.AddPhaseButton')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{phaseItemList.length > 0 ? (\n\t\t\t\t\t<DetailsList\n\t\t\t\t\t\titems={phaseItemList}\n\t\t\t\t\t\tcolumns={phaseColumns}\n\t\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\tonItemInvoked={(item) => onItemClicked?.(item)}\n\t\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\t\tclassName=\"locationDetailsList\"\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"emptyPhaseOverview\">\n\t\t\t\t\t\t{t('LocationsRegions.PhaseOverview.empty')}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t\t<Modal\n\t\t\t\tisOpen={isPhaseModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<PhaseForm\n\t\t\t\t\titem={selectedPhaseItem.current}\n\t\t\t\t\tonCancel={dismissPhaseModal}\n\t\t\t\t\tonSubmit={onPhaseFormSubmit}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</>\n\t)\n})\n\nconst setInitialPhaseItems = (currentLocation: any, activeText: string): any[] => {\n\tconst result = getLocationPhaseData(currentLocation)\n\treturn generateUIPhaseList(result.phases, result.activePhase, activeText)\n}\n\nconst generateUIPhaseList = (phases: any[], activePhase: string, activeText: string) => {\n\treturn phases.map((phase: any, idx: number) => {\n\t\treturn {\n\t\t\tkey: String(phase.id) + idx,\n\t\t\tkeyId:\n\t\t\t\tString(phase.id) +\n\t\t\t\t(phase.id === activePhase ? ` (${activeText})` : ''),\n\t\t\tname:\n\t\t\t\t(phase.label || phase.id) +\n\t\t\t\t(phase.id === activePhase ? ` (${activeText})` : ''),\n\t\t\tqualifications: phase.qualifications.length,\n\t\t\tvalue: phase,\n\t\t\tisNew: false,\n\t\t}\n\t})\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { MessageBar } from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getCustomString } from '../selectors/locationSelectors'\nimport {\n\tgetParentLocationData,\n\tisPhaseDataOverridden,\n} from '../selectors/phaseSelectors'\nimport { StringFormat, toProperCase } from '../utils/textUtils'\n\nexport interface LocationsPhaseOverrideBarProp {\n\tcurrentLocation: any\n\tbreadcrumbs: any\n}\n\nexport default observer(function LocationsPhaseOverrideBar(\n\tprops: LocationsPhaseOverrideBarProp\n) {\n\tconst { currentLocation, breadcrumbs } = props\n\n\tlet locationName = t(\n\t\t'LocationPhaseOverrideBar.messageBar.specificTextPlaceholder'\n\t)\n\tlet parentLocationName = t(\n\t\t'LocationPhaseOverrideBar.messageBar.adoptedTextPlaceholder'\n\t)\n\tlet messageBarSpecific = ''\n\tlet messageBarAdopted = ''\n\tif (currentLocation?.info) {\n\t\tconst parentData = getParentLocationData(currentLocation)\n\t\tlocationName =\n\t\t\tgetCustomString(currentLocation, currentLocation.info.content.name) ||\n\t\t\ttoProperCase(currentLocation.info.content.name)\n\t\tmessageBarSpecific = StringFormat(\n\t\t\tt('LocationPhaseOverrideBar.messageBar.specificText'),\n\t\t\tlocationName\n\t\t)\n\n\t\tif (parentData?.info) {\n\t\t\tparentLocationName =\n\t\t\t\tgetCustomString(parentData, parentData.info.content.name) ||\n\t\t\t\ttoProperCase(parentData.info.content.name)\n\t\t\tmessageBarAdopted = StringFormat(\n\t\t\t\tt('LocationPhaseOverrideBar.messageBar.adoptedText'),\n\t\t\t\tparentLocationName,\n\t\t\t\tlocationName\n\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{Object.keys(breadcrumbs).length > 1 && (\n\t\t\t\t<MessageBar messageBarType={5}>\n\t\t\t\t\t{isPhaseDataOverridden(currentLocation) ? (\n\t\t\t\t\t\t<div>{messageBarSpecific}</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>{messageBarAdopted}</div>\n\t\t\t\t\t)}\n\t\t\t\t</MessageBar>\n\t\t\t)}\n\t\t</>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tIconButton,\n\tDropdown,\n\tDirectionalHint,\n\tTextField,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useState, useRef, useEffect } from 'react'\nimport { getText as t } from '../selectors/intlSelectors'\nimport {\n\tgetPhaseTagItems,\n\tgetPhaseQualifierItems,\n\tgetPhaseMoreInfoTextByKey,\n\tgetPhaseQualifierItemsByKey,\n\tgetPhaseMoreInfoUrl\n} from '../selectors/phaseSelectors'\nimport { getAppStore } from '../store/store'\n\nimport './PhaseQualifierForm.scss'\n\nexport interface PhaseQualifierFormProps {\n\tcurrentLocation: any\n\tgroupKey: any\n\trowItem: any\n\tonRowItemRemove?: (item: any, groupKey: any) => void\n\tonRowItemTextChange?: (item: any, prevItem: any) => void\n\tonRowItemQualifierChange?: (item: any, prevItem: any) => void\n}\n\nexport default observer(function PhaseQualifierForm(\n\tprops: PhaseQualifierFormProps\n) {\n\tconst {\n\t\tcurrentLocation,\n\t\tgroupKey,\n\t\trowItem,\n\t\tonRowItemQualifierChange,\n\t\tonRowItemRemove,\n\t\tonRowItemTextChange,\n\t} = props\n\tconst { isEditable, currentLanguage } = getAppStore()\n\tconst phaseTagItems = useRef(getPhaseTagItems(currentLocation))\n\tconst phaseQualifierItems = useRef(getPhaseQualifierItems(currentLocation))\n\tconst [filteredQualifierItems, setFilteredQualifierItems] = useState<any[]>(\n\t\tgetPhaseQualifierItemsByKey(currentLocation, rowItem.tagKey)\n\t)\n\tconst [moreInfoText, setMoreInfoText] = useState<string>('')\n\tconst [moreInfoTextSms, setMoreInfoTextSms] = useState<string>('')\n\tconst [moreInfoTextVoice, setMoreInfoTextVoice] = useState<string>('')\n\tconst [moreInfoUrl, setMoreInfoUrl] = useState<string>(\n\t\tgetPhaseMoreInfoUrl(rowItem)\n\t)\n\tconst changedItem = useRef<any>(rowItem)\n\tchangedItem.current.moreInfoContent = moreInfoText\n\n\tlet moreInfoKey = rowItem.moreInfoKey\n\tlet moreInfoTextSmsKey = rowItem.moreInfoTextSms\n\tlet moreInfoTextVoiceKey = rowItem.moreInfoTextVoice\n\n\tconst locationPhases = rowItem.location.vaccination.content.phases\n\tconst currentPhase = locationPhases?.find(\n\t\t(phase: { id: any }) => phase.id === rowItem.groupId\n\t)\n\n\tif (currentPhase) {\n\t\tconst currQualification = currentPhase?.qualifications.find(\n\t\t\t(qualification: { question: any }) =>\n\t\t\t\tqualification.question === rowItem.qualifierId\n\t\t)\n\t\tif (currQualification) {\n\t\t\tmoreInfoKey = currQualification.moreInfoText\n\t\t\tmoreInfoTextSmsKey = currQualification.moreInfoTextSms\n\t\t\tmoreInfoTextVoiceKey = currQualification.moreInfoTextVoice\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (currentLocation) {\n\t\t\tphaseQualifierItems.current = getPhaseQualifierItems(currentLocation)\n\t\t\tsetFilteredQualifierItems(\n\t\t\t\tgetPhaseQualifierItemsByKey(currentLocation, rowItem.tagKey)\n\t\t\t)\n\t\t}\n\t}, [phaseQualifierItems, currentLocation, rowItem])\n\n\tuseEffect(() => {\n\t\tif (currentLanguage) {\n\t\t\tsetMoreInfoText(getPhaseMoreInfoTextByKey(currentLocation, moreInfoKey))\n\t\t\tsetMoreInfoTextSms(getPhaseMoreInfoTextByKey(currentLocation, moreInfoTextSmsKey))\n\t\t\tsetMoreInfoTextVoice(getPhaseMoreInfoTextByKey(currentLocation, moreInfoTextVoiceKey))\n\t\t}\n\t}, [currentLanguage, currentLocation, moreInfoKey, moreInfoTextVoiceKey, moreInfoTextSmsKey])\n\n\tconst onTagChange = useCallback(\n\t\t(_event, option) => {\n\t\t\tsetFilteredQualifierItems(\n\t\t\t\tphaseQualifierItems.current.filter(\n\t\t\t\t\t(q: any) => q.key.split('/')[1].split('.')[0] === option.key\n\t\t\t\t)\n\t\t\t)\n\t\t\tsetMoreInfoText('')\n\t\t\tsetMoreInfoUrl('')\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tkey: `${rowItem.groupId}-c19.eligibility.question/${option.key}`,\n\t\t\t\t\ttagKey: option.key,\n\t\t\t\t\tqualifierId: undefined,\n\t\t\t\t\ttext: '',\n\t\t\t\t\tmoreInfoKey: '',\n\t\t\t\t\tmoreInfoContent: '',\n\t\t\t\t\tmoreInfoTextSms: '',\n\t\t\t\t\tmoreInfoTextVoice: ''\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\t[phaseQualifierItems, rowItem]\n\t)\n\n\tconst onQualifierChange = useCallback(\n\t\t(_event, option) => {\n\t\t\tsetMoreInfoText('')\n\t\t\tsetMoreInfoUrl('')\n\t\t\tsetMoreInfoTextSms('')\n\t\t\tsetMoreInfoTextVoice('')\n\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tqualifierId: option.key,\n\t\t\t\t\ttext: option.text,\n\t\t\t\t\tmoreInfoKey: '',\n\t\t\t\t\tmoreInfoContent: '',\n\t\t\t\t\tmoreInfoTextSms: '',\n\t\t\t\t\tmoreInfoTextVoice: ''\n\t\t\t\t},\n\t\t\t}\n\t\t\tonRowItemQualifierChange?.(changedItem.current, rowItem)\n\t\t},\n\t\t[onRowItemQualifierChange, rowItem]\n\t)\n\n\tconst onMoreInfoTextChange = useCallback(\n\t\t(_event, value) => {\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tmoreInfoContent: value,\n\t\t\t\t},\n\t\t\t}\n\t\t\tsetMoreInfoText(value)\n\t\t},\n\t\t[setMoreInfoText]\n\t)\n\n\tconst onMoreInfoTextSmsChange = useCallback(\n\t\t(_event, value) => {\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tmoreInfoTextSms: value,\n\t\t\t\t},\n\t\t\t}\n\t\t\tsetMoreInfoTextSms(value)\n\t\t},\n\t\t[setMoreInfoTextSms]\n\t)\n\n\tconst onMoreInfoTextVoiceChange = useCallback(\n\t\t(_event, value) => {\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tmoreInfoTextVoice: value,\n\t\t\t\t},\n\t\t\t}\n\t\t\tsetMoreInfoTextVoice(value)\n\t\t},\n\t\t[setMoreInfoTextVoice]\n\t)\n\n\tconst onMoreInfoUrlChange = useCallback(\n\t\t(_event, value) => {\n\t\t\tchangedItem.current = {\n\t\t\t\t...changedItem.current,\n\t\t\t\t...{\n\t\t\t\t\tmoreInfoUrl: value,\n\t\t\t\t},\n\t\t\t}\n\t\t\tsetMoreInfoUrl(value)\n\t\t},\n\t\t[setMoreInfoUrl]\n\t)\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"phaseDetailRow\"\n\t\t\tstyle={{ pointerEvents: isEditable ? 'unset' : 'none' }}\n\t\t>\n\t\t\t<div className=\"mainRow\">\n\t\t\t\t<Dropdown\n\t\t\t\t\toptions={phaseTagItems.current}\n\t\t\t\t\tdefaultSelectedKey={rowItem.tagKey}\n\t\t\t\t\tplaceholder={t('PhaseQualifierForm.Tag.placeholder')}\n\t\t\t\t\tclassName=\"tagDropdown\"\n\t\t\t\t\tstyles={{ root: { minWidth: 250 } }}\n\t\t\t\t\tonChange={onTagChange}\n\t\t\t\t/>\n\t\t\t\t<Dropdown\n\t\t\t\t\ttitle={rowItem.text}\n\t\t\t\t\toptions={filteredQualifierItems}\n\t\t\t\t\tdefaultSelectedKey={rowItem.qualifierId}\n\t\t\t\t\tplaceholder={t('PhaseQualifierForm.Qualifier.placeholder')}\n\t\t\t\t\tstyles={{ root: { width: '100%', minWidth: 0 } }}\n\t\t\t\t\tonChange={onQualifierChange}\n\t\t\t\t/>\n\t\t\t\t<IconButton\n\t\t\t\t\ticonProps={{ iconName: 'MoreVertical' }}\n\t\t\t\t\tstyles={{ menuIcon: { visibility: 'hidden', width: 0, margin: 0 } }}\n\t\t\t\t\tmenuProps={{\n\t\t\t\t\t\tisBeakVisible: false,\n\t\t\t\t\t\tdirectionalHint: DirectionalHint.rightTopEdge,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'removeRow',\n\t\t\t\t\t\t\t\ttext: t('PhaseQualifierForm.FormButtons.remove'),\n\t\t\t\t\t\t\t\tonClick: () => onRowItemRemove?.(rowItem, groupKey),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}}\n\t\t\t\t\ttitle={t('PhaseQualifierForm.FormButtons.more')}\n\t\t\t\t\taria-label={t('PhaseQualifierForm.FormButtons.more')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"detailsRow\">\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder={t('PhaseQualifierForm.MoreInfoText.placeholder')}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={true}\n\t\t\t\t\tresizable={true}\n\t\t\t\t\tstyles={{ root: { width: 'calc(100% - 32px)', padding: '5px 0' } }}\n\t\t\t\t\tvalue={moreInfoText}\n\t\t\t\t\tonChange={onMoreInfoTextChange}\n\t\t\t\t\tonBlur={() => onRowItemTextChange?.(changedItem.current, rowItem)}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder={t('PhaseQualifierForm.MoreInfoTextSms.placeholder')}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={true}\n\t\t\t\t\tresizable={true}\n\t\t\t\t\tstyles={{ root: { width: 'calc(100% - 32px)', padding: '5px 0' } }}\n\t\t\t\t\tvalue={moreInfoTextSms}\n\t\t\t\t\tonChange={onMoreInfoTextSmsChange}\n\t\t\t\t\tonBlur={() => onRowItemTextChange?.(changedItem.current, rowItem)}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder={t('PhaseQualifierForm.MoreInfoTextVoice.placeholder')}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={true}\n\t\t\t\t\tresizable={true}\n\t\t\t\t\tstyles={{ root: { width: 'calc(100% - 32px)', padding: '5px 0' } }}\n\t\t\t\t\tvalue={moreInfoTextVoice}\n\t\t\t\t\tonChange={onMoreInfoTextVoiceChange}\n\t\t\t\t\tonBlur={() => onRowItemTextChange?.(changedItem.current, rowItem)}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder={t('PhaseQualifierForm.MoreInfoUrl.placeholder')}\n\t\t\t\t\tstyles={{ root: { width: 'calc(100% - 32px)', padding: '5px 0' } }}\n\t\t\t\t\tvalue={moreInfoUrl}\n\t\t\t\t\tonChange={onMoreInfoUrlChange}\n\t\t\t\t\tonBlur={() => onRowItemTextChange?.(changedItem.current, rowItem)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { FontIcon, Modal } from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect, useRef, useCallback } from 'react'\nimport {\n\taddQualifier,\n\tduplicatePhase,\n\tmodifyMoreInfoLinks,\n\tmodifyMoreInfoText,\n\tremovePhase,\n\tremoveQualifier,\n\tsetActivePhase,\n\tupdateQualifier,\n} from '../mutators/repoMutators'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getLocationPhaseData } from '../selectors/locationSelectors'\nimport { getAppStore } from '../store/store'\nimport PhaseForm from './PhaseForm'\nimport PhaseQualifierForm from './PhaseQualifierForm'\nimport './Locations.scss'\n\nexport interface LocationPhaseQualifiersProp {\n\tcurrentLocation: any\n}\n\nexport default observer(function LocationPhaseQualifiers(\n\tprops: LocationPhaseQualifiersProp\n) {\n\tconst { currentLocation } = props\n\tconst { currentLanguage, isEditable, repoFileData } = getAppStore()\n\tconst [phaseList, setPhaseList] = useState<any[]>([])\n\tconst groupToggleState = useRef<any[]>([])\n\tconst [\n\t\tisDuplicateModalOpen,\n\t\t{ setTrue: openDuplicateModal, setFalse: dismissDuplicateModal },\n\t] = useBoolean(false)\n\tconst selectedPhaseGroup = useRef<any>(null)\n\n\tuseEffect(() => {\n\t\tdismissDuplicateModal()\n\t\tif (currentLocation) {\n\t\t\tconst tempPhaseList: any[] = []\n\t\t\tconst { phases, activePhase } = getLocationPhaseData(currentLocation)\n\n\t\t\tphases.forEach((phase: any) => {\n\t\t\t\tlet isCollapsed = true\n\n\t\t\t\tif (groupToggleState.current.length > 0) {\n\t\t\t\t\tisCollapsed = !groupToggleState.current.includes(phase.id)\n\t\t\t\t} else {\n\t\t\t\t\tisCollapsed = true\n\t\t\t\t}\n\n\t\t\t\tconst isActivePhase = activePhase === phase.id\n\n\t\t\t\tconst tempPhaseObj: any = {\n\t\t\t\t\tkey: phase.id,\n\t\t\t\t\tname: phase.label || phase.id,\n\t\t\t\t\tcount: phase.qualifications.length,\n\t\t\t\t\tisCollapsed: isCollapsed,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: phase.label || phase.id,\n\t\t\t\t\t\tkeyId: phase.id,\n\t\t\t\t\t\tisActive: isActivePhase,\n\t\t\t\t\t},\n\t\t\t\t}\n\n\t\t\t\tconst phaseItems: any[] = []\n\n\t\t\t\tphase.qualifications.forEach((qualification: any) => {\n\t\t\t\t\tconst keyId: string = String(qualification.question).toLowerCase()\n\t\t\t\t\tlet label = `*Translation not found* (${keyId})`\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tcurrentLocation.strings &&\n\t\t\t\t\t\tcurrentLocation.strings.content[keyId]\n\t\t\t\t\t) {\n\t\t\t\t\t\tlabel =\n\t\t\t\t\t\t\tcurrentLocation.strings.content[keyId][currentLanguage] || label\n\t\t\t\t\t}\n\t\t\t\t\tphaseItems.push({\n\t\t\t\t\t\tkey: phase.id + '-' + keyId,\n\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\tmoreInfoKey: qualification?.moreInfoText\n\t\t\t\t\t\t\t? qualification.moreInfoText.toLowerCase()\n\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\tmoreInfoContent: '',\n\t\t\t\t\t\tmoreInfoTextSms: qualification?.moreInfoTextSms || '',\n\t\t\t\t\t\tmoreInfoTextVoice: qualification?.moreInfoTextVoice || '',\n\t\t\t\t\t\tmoreInfoUrl: qualification.moreInfoUrl,\n\t\t\t\t\t\tqualifierId: keyId,\n\t\t\t\t\t\ttagKey: keyId.split('/')[1].split('.')[0],\n\t\t\t\t\t\tgroupId: phase.id,\n\t\t\t\t\t\tlocation: currentLocation,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\ttempPhaseObj['items'] = phaseItems\n\t\t\t\ttempPhaseList.push(tempPhaseObj)\n\t\t\t})\n\n\t\t\tsetPhaseList(tempPhaseList)\n\t\t}\n\t}, [currentLocation, currentLanguage, dismissDuplicateModal, repoFileData])\n\n\tconst onToggleCollapse = (toggleGroup: any) => {\n\t\tconst tempPhaseList = phaseList.map((group) => {\n\t\t\tif (group.key === toggleGroup.key) {\n\t\t\t\tgroup.isCollapsed = !group.isCollapsed\n\t\t\t}\n\n\t\t\treturn group\n\t\t})\n\t\tgroupToggleState.current = tempPhaseList\n\t\t\t.filter((group) => !group.isCollapsed)\n\t\t\t.map((group) => group.key)\n\t\tsetPhaseList(tempPhaseList)\n\t}\n\n\tconst onAddQualifierClick = (phaseId: any) => {\n\t\tconst newItem = {\n\t\t\tkey: `${phaseId}-c19.eligibility.question/new_qualifier`,\n\t\t\ttext: '',\n\t\t\tmoreInfoKey: '',\n\t\t\tmoreInfoUrl: '',\n\t\t\tqualifierId: 'c19.eligibility.question/new_qualifier',\n\t\t\ttagKey: 'new_tagKey',\n\t\t\tgroupId: phaseId,\n\t\t\tlocation: currentLocation,\n\t\t}\n\n\t\tconst tempPhaseList = phaseList.map((group) => {\n\t\t\tif (group.key === phaseId) {\n\t\t\t\tgroup.items.push(newItem)\n\t\t\t}\n\n\t\t\treturn group\n\t\t})\n\t\tsetPhaseList(tempPhaseList)\n\t}\n\n\tconst onRemoveRowItem = (item: any, groupKey: any) => {\n\t\tif (item.qualifierId !== 'c19.eligibility.question/new_qualifier') {\n\t\t\tremoveQualifier({\n\t\t\t\tcurrentLocation,\n\t\t\t\tphaseGroupId: groupKey,\n\t\t\t\tqualifierId: item.qualifierId,\n\t\t\t})\n\t\t} else {\n\t\t\tconst tempPhaseList = phaseList.map((group) => {\n\t\t\t\tif (group.key === groupKey) {\n\t\t\t\t\tconst newItemIndex = group.items.findIndex(\n\t\t\t\t\t\t(i: any) =>\n\t\t\t\t\t\t\ti.qualifierId === 'c19.eligibility.question/new_qualifier'\n\t\t\t\t\t)\n\t\t\t\t\tif (newItemIndex !== -1) {\n\t\t\t\t\t\tgroup.items.splice(newItemIndex, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn group\n\t\t\t})\n\n\t\t\tsetPhaseList(tempPhaseList)\n\t\t}\n\t}\n\n\tconst onRemovePhaseGroupClick = (phaseId: any) => {\n\t\tremovePhase({\n\t\t\tcurrentLocation,\n\t\t\tphaseId,\n\t\t})\n\t}\n\n\tconst onSetActivePhase = (phaseId: string) => {\n\t\tsetActivePhase({\n\t\t\tcurrentLocation,\n\t\t\tphaseId,\n\t\t})\n\t}\n\n\tconst onDuplicatePhaseClick = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedPhaseGroup.current = item ?? null\n\t\t\topenDuplicateModal()\n\t\t},\n\t\t[openDuplicateModal]\n\t)\n\n\tconst onDuplicateSubmit = useCallback(\n\t\t({ name }: { name: string }) => {\n\t\t\tduplicatePhase({\n\t\t\t\tcurrentLocation,\n\t\t\t\tphaseId: selectedPhaseGroup.current.key,\n\t\t\t\tname,\n\t\t\t})\n\t\t\tdismissDuplicateModal()\n\t\t},\n\t\t[currentLocation, dismissDuplicateModal]\n\t)\n\n\tconst onChangeRowItemText = (currentItem: any, initItem: any) => {\n\t\tif (initItem.moreInfoUrl !== currentItem.moreInfoUrl) {\n\t\t\tmodifyMoreInfoLinks({\n\t\t\t\tcurrentLocation,\n\t\t\t\tphaseGroupId: currentItem.groupId,\n\t\t\t\tqualifierId: currentItem.qualifierId,\n\t\t\t\tmoreInfoUrl: currentItem.moreInfoUrl,\n\t\t\t})\n\t\t}\n\n\t\tif (initItem.moreInfoContent !== currentItem.moreInfoContent\n\t\t\t || initItem.moreInfoTextSms !== currentItem.moreInfoTextSms\n\t\t\t || initItem.moreInfoTextVoice !== currentItem.moreInfoTextVoice)\n\t\t\t {\n\t\t\tmodifyMoreInfoText({\n\t\t\t\tcurrentLocation,\n\t\t\t\tphaseGroupId: currentItem.groupId,\n\t\t\t\tqualifierId: currentItem.qualifierId,\n\t\t\t\tmoreInfoText: currentItem.moreInfoContent,\n\t\t\t\tmoreInfoTextSms: currentItem.moreInfoTextSms,\n\t\t\t\tmoreInfoTextVoice: currentItem.moreInfoTextVoice\n\t\t\t})\n\t\t}\n\t}\n\n\tconst onChangeRowItemQualifier = (currentItem: any, initItem: any) => {\n\t\tif (initItem.qualifierId !== 'c19.eligibility.question/new_qualifier') {\n\t\t\tupdateQualifier({\n\t\t\t\tcurrentLocation,\n\t\t\t\tphaseGroupId: currentItem.groupId,\n\t\t\t\tqualifierId: currentItem.qualifierId,\n\t\t\t\toldQualifierId: initItem.qualifierId,\n\t\t\t})\n\t\t} else {\n\t\t\taddQualifier({\n\t\t\t\tcurrentLocation,\n\t\t\t\tphaseGroupId: currentItem.groupId,\n\t\t\t\tqualifierId: currentItem.qualifierId,\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<section className=\"LocationPhaseQualifiersComponent\">\n\t\t\t<div className=\"locationPhaseQualifiersSectionHeader\">\n\t\t\t{t('LocationsPhases.title')}\n\t\t\t</div>\n\t\t\t<div className=\"phaseGridContainer\">\n\t\t\t\t{phaseList.length > 0\n\t\t\t\t\t? phaseList.map((group: any, idx: number) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={`phasegroup-${idx}`}>\n\t\t\t\t\t\t\t\t\t<div className=\"phaseGroupHeader\">\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"groupHeaderLabel\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonToggleCollapse(group)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\ticonName={\n\t\t\t\t\t\t\t\t\t\t\t\t\tgroup.isCollapsed ? 'ChevronRight' : 'ChevronDown'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"groupToggleIcon\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{group.name ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{group.name} <small>({group.data.keyId})</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t`Phase ${group.data.keyId}`\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"groupHeaderButtons\">\n\t\t\t\t\t\t\t\t\t\t\t{isEditable ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"addQualifierGroup\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onDuplicatePhaseClick(group)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticonName=\"DuplicateRow\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('LocationsPhases.columns.duplicate')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"removePhaseGroup\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRemovePhaseGroupClick(group.data.keyId)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticonName=\"Blocked2Solid\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#d13438' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('LocationsPhases.columns.remove')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{group.data.isActive ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"activeGroup\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleFill\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('LocationsPhases.columns.active')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"activeGroup\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onSetActivePhase(group.data.keyId)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleRing\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('LocationsPhases.columns.setActive')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{group.data.isActive && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"activeGroup\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleFill\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#00b7c3' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('LocationsPhases.columns.active')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: group.isCollapsed ? 'none' : 'block' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{group.items.length > 0 &&\n\t\t\t\t\t\t\t\t\t\t\tgroup.items.map((groupItem: any, idx: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PhaseQualifierForm\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`${groupItem.key}_${idx}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentLocation={currentLocation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroupKey={group.key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trowItem={groupItem}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRowItemRemove={onRemoveRowItem}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRowItemTextChange={onChangeRowItemText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRowItemQualifierChange={onChangeRowItemQualifier}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"phaseBottomGroup\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: group.items.length > 0 ? 0 : '20px' }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"addQualifierGroup\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onAddQualifierClick(group.data.keyId)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('LocationsPhases.AddQualifierButton')}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t  })\n\t\t\t\t\t: null}\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\tisOpen={isDuplicateModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<PhaseForm\n\t\t\t\t\tcurrentLocation={currentLocation}\n\t\t\t\t\tduplicate={true}\n\t\t\t\t\tonCancel={dismissDuplicateModal}\n\t\t\t\t\tonSubmit={onDuplicateSubmit}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</section>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getCustomString } from '../selectors/locationSelectors'\nimport { toProperCase } from '../utils/textUtils'\n\nimport './Locations.scss'\n\nexport interface LocationsBreadcrumbsProp {\n\tcurrentLocationTitle: string | null\n    breadcrumbs: any\n    navigateBack: (itemKey: string) => void\n}\n\nexport default observer(function LocationsBreadcrumbs(props: LocationsBreadcrumbsProp) {\n\tconst {currentLocationTitle, breadcrumbs, navigateBack} = props\n\n\treturn (\n        <>\n            {Object.keys(breadcrumbs).length > 0 ? (\n                <div className=\"breadCrumbs\">\n                     <div key={'root'} className=\"breadCrumbsLink\" onClick={() => navigateBack('root')}>/ {t('LocationsStates.title')}</div>\n                    {Object.keys(breadcrumbs).map((key: any, idx: number) => {\n                        const locationName = getCustomString(breadcrumbs[key].value, breadcrumbs[key].value?.info?.content?.name) || toProperCase(breadcrumbs[key].value?.info?.content?.id)\n                        if (locationName === currentLocationTitle) {\n                            return <div key={idx} className=\"breadCrumbsNonLink\">{`/ ${locationName}`}</div>\n                        } else {\n                            return <div key={idx} className=\"breadCrumbsLink\" onClick={() => navigateBack(breadcrumbs[key])}>{`/ ${locationName}`}</div>\n                        }\n                    })}\n                </div>\n            ) : (\n                <div className=\"breadCrumbs\">/ {t('LocationsStates.title')}</div>\n            )}\n            {currentLocationTitle ? (\n                <div className=\"mainTitle\">{currentLocationTitle}</div>\n            ) : (\n                <div className=\"mainTitle\">{t('LocationsStates.title')}</div>\n            )}\n        </>\n\t)\n})","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { PrimaryButton, DefaultButton } from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { getText as t } from '../selectors/intlSelectors'\n\nimport './LocationForm.scss'\n\nexport default observer(function DeleteLocationForm(props: any) {\n\tconst { onSubmit, onCancel, location } = props\n\t\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">{t('DeleteLocationForm.title')}</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<p>\n\t\t\t\t{t('DeleteLocationForm.text')} <strong>{location.text ?? location.name}</strong>?\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton\n\t\t\t\t\ttext={t('DeleteLocationForm.title')}\n\t\t\t\t\tonClick={() => onSubmit?.(location)}\n\t\t\t\t/>\n\t\t\t\t<DefaultButton text={t('DeleteLocationForm.cancel')} onClick={() => onCancel?.()} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tFontIcon,\n\tModal,\n\tIColumn,\n\tSearchBox,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useRef, useEffect, useCallback } from 'react'\nimport {\n\taddLocation,\n\tupdateLocationData,\n\tdeleteLocation,\n} from '../mutators/repoMutators'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getCustomString } from '../selectors/locationSelectors'\nimport { getAppStore } from '../store/store'\nimport { toProperCase } from '../utils/textUtils'\nimport DeleteLocationForm from './DeleteLocationForm'\nimport LocationForm from './LocationForm'\n\nimport './Locations.scss'\n\nexport interface LocationsStatesProp {\n\tcurrentLocation: any\n\tonSelectedItem: (item: any) => void\n}\n\nexport default observer(function LocationsStates(props: LocationsStatesProp) {\n\tconst { onSelectedItem, currentLocation } = props\n\n\tconst [\n\t\tisLocationModalOpen,\n\t\t{ setTrue: openLocationModal, setFalse: dismissLocationModal },\n\t] = useBoolean(false)\n\tconst [\n\t\tisDeleteLocationModalOpen,\n\t\t{ setTrue: openDeleteLocationModal, setFalse: dismissDeleteLocationModal },\n\t] = useBoolean(false)\n\tconst [filteredStateList, setFilteredStateList] = useState<any[]>([])\n\tconst stateRepoFullList = useRef<any[]>([])\n\tconst selectedLocationItem = useRef<any>(null)\n\tconst selectedLocationPath = useRef<any>(null)\n\n\tconst state = getAppStore()\n\n\tconst filterEditable = (col: any) => {\n\t\tif (state.isEditable) return true\n\t\telse return col.key !== 'editCol' && col.key !== 'delete'\n\t}\n\tconst locationColumns = [\n\t\t{\n\t\t\tkey: 'stateCol',\n\t\t\tname: t('LocationsStates.locationColumns.text'),\n\t\t\tfieldName: 'text',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'regionCol',\n\t\t\tname: t('LocationsStates.locationColumns.regions'),\n\t\t\tfieldName: 'regions',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editLocation',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter(filterEditable)\n\n\tuseEffect(() => {\n\t\tconst tempLocationlist = currentLocation ? currentLocation.regions : state.repoFileData\n\n\t\tif (tempLocationlist) {\n\t\t\tconst nextFilteredStateList: any[] = []\n\t\t\tObject.entries(tempLocationlist).forEach(\n\t\t\t\t([locKey, locDetails]: [string, any]) => {\n\t\t\t\t\tconst locationName =\n\t\t\t\t\t\tgetCustomString(locDetails, locDetails?.info?.content?.name) ||\n\t\t\t\t\t\ttoProperCase(locDetails?.info?.content?.id) || locKey\n\t\t\t\t\tnextFilteredStateList.push({\n\t\t\t\t\t\tkey: locKey,\n\t\t\t\t\t\ttext: locationName,\n\t\t\t\t\t\tregions: locDetails?.regions\n\t\t\t\t\t\t\t? Object.keys(locDetails.regions).length\n\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\tvalue: locDetails,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t)\n\t\t\tsetFilteredStateList(nextFilteredStateList.sort((a, b) => (a.text > b.text ? 1 : -1)))\n\t\t\tstateRepoFullList.current = nextFilteredStateList.sort((a, b) => (a.text > b.text ? 1 : -1))\n\t\t}\n\t\telse {\n\t\t\tsetFilteredStateList([])\n\t\t\tstateRepoFullList.current = []\n\t\t}\n\t}, [currentLocation, state.currentLanguage, state.repoFileData])\n\n\tconst onStateFilter = useCallback(\n\t\t(_event: any, text?: string) => {\n\t\t\tif (text) {\n\t\t\t\tsetFilteredStateList(\n\t\t\t\t\tstateRepoFullList.current.filter(\n\t\t\t\t\t\t(state) => state.text.toLowerCase().indexOf(text) > -1\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tsetFilteredStateList(stateRepoFullList.current)\n\t\t\t}\n\t\t},\n\t\t[stateRepoFullList]\n\t)\n\n\tconst openSelection = useCallback(\n\t\t(item: any) => {\n\t\t\tonSelectedItem(item)\n\t\t},\n\t\t[onSelectedItem]\n\t)\n\n\tconst onLocationFormSubmit = useCallback(\n\t\t(locationFormData, prevItem, initPath) => {\n\t\t\tdismissLocationModal()\n\n\t\t\tif (prevItem) {\n\t\t\t\tupdateLocationData(locationFormData, initPath)\n\t\t\t} else {\n\t\t\t\taddLocation(locationFormData, initPath)\n\t\t\t}\n\t\t},\n\t\t[dismissLocationModal]\n\t)\n\n\tconst onDeleteLocationFormSubmit = useCallback(\n\t\t(locationData) => {\n\t\t\tdismissDeleteLocationModal()\n\t\t\tdeleteLocation(locationData)\n\t\t},\n\t\t[dismissDeleteLocationModal]\n\t)\n\n\tconst onLocationFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedLocationItem.current = item?.value\n\t\t\tselectedLocationPath.current =\n\t\t\t\titem?.value.info.path ?? currentLocation?.info.path\n\t\t\topenLocationModal()\n\t\t},\n\t\t[openLocationModal, currentLocation]\n\t)\n\n\tconst onLocationDeleteFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tselectedLocationItem.current = item ?? null\n\t\t\topenDeleteLocationModal()\n\t\t},\n\t\t[openDeleteLocationModal]\n\t)\n\n\tconst onRenderItemColumn = useCallback(\n\t\t(item?: any, _index?: number, column?: IColumn) => {\n\t\t\tif (!column) return null\n\n\t\t\tconst fieldContent = item[column.fieldName as keyof any] as string\n\n\t\t\tif (column.key === 'editCol') {\n\t\t\t\treturn state.isEditable ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\ticonName=\"Cancel\"\n\t\t\t\t\t\t\tclassName=\"deleteIcon\"\n\t\t\t\t\t\t\tonClick={() => onLocationDeleteFormOpen(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\ticonName=\"Edit\"\n\t\t\t\t\t\t\tclassName=\"editIcon\"\n\t\t\t\t\t\t\tonClick={() => onLocationFormOpen(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t) : null\n\t\t\t} else {\n\t\t\t\treturn <span>{fieldContent}</span>\n\t\t\t}\n\t\t},\n\t\t[onLocationFormOpen, onLocationDeleteFormOpen, state.isEditable]\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<section className=\"LocationsStatesComponent\">\n\t\t\t\t<div className=\"locationsStatesSectionHeader\">\n\t\t\t\t\t<div>{t('LocationsRegions.Sublocations.title')}</div>\n\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"addLocationHeaderButton\"\n\t\t\t\t\t\t\tonClick={() => onLocationFormOpen(null)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\tstyle={{ color: '#0078d4' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{t('LocationsStates.addLocation')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t<SearchBox\n\t\t\t\t\t\tstyles={{ root: { width: 400 } }}\n\t\t\t\t\t\tplaceholder={t('LocationsStates.SearchBox.placeholder')}\n\t\t\t\t\t\tonChange={(ev, text) => onStateFilter(ev, text)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailsList\n\t\t\t\t\titems={filteredStateList}\n\t\t\t\t\tcolumns={locationColumns}\n\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\tselectionPreservedOnEmptyClick={true}\n\t\t\t\t\tariaLabelForSelectionColumn={t('LocationsStates.addLocation')}\n\t\t\t\t\tariaLabelForSelectAllCheckbox={t('LocationsStates.addLocation')}\n\t\t\t\t\tcheckButtonAriaLabel={t('LocationsStates.addLocation')}\n\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\tonItemInvoked={openSelection}\n\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\tclassName=\"locationDetailsList\"\n\t\t\t\t/>\n\t\t\t</section>\n\t\t\t<Modal\n\t\t\t\tisOpen={isLocationModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<LocationForm\n\t\t\t\t\tcurrentLocation={selectedLocationItem.current}\n\t\t\t\t\tcurrentPath={selectedLocationPath.current}\n\t\t\t\t\tonCancel={dismissLocationModal}\n\t\t\t\t\tonSubmit={onLocationFormSubmit}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t\t<Modal\n\t\t\t\tisOpen={isDeleteLocationModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<DeleteLocationForm\n\t\t\t\t\tlocation={selectedLocationItem.current}\n\t\t\t\t\tonCancel={dismissDeleteLocationModal}\n\t\t\t\t\tonSubmit={onDeleteLocationFormSubmit}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { ProgressIndicator } from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useState, useEffect } from 'react'\nimport { loadAllLocationData } from '../actions/repoActions'\nimport {\n\taddPhaseOverviewCrumb,\n\tdeleteCrumbs,\n\tsetBreadcrumbs,\n\tupdatePhaseOverviewTitle,\n} from '../mutators/repoMutators'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getCustomString } from '../selectors/locationSelectors'\nimport { getAppStore } from '../store/store'\nimport { pathFind } from '../utils/dataUtils'\nimport { toProperCase } from '../utils/textUtils'\nimport LocationDetails from './LocationDetails'\nimport LocationPhaseList from './LocationPhaseList'\nimport LocationPhaseOverrideBar from './LocationPhaseOverrideBar'\nimport LocationPhaseQualifiers from './LocationPhaseQualifiers'\nimport LocationsBreadcrumbs from './LocationsBreadcrumbs'\nimport LocationStates from './LocationsStates'\n\nimport './Locations.scss'\n\nexport default observer(function Locations() {\n\tconst {\n\t\tisDataRefreshing,\n\t\trepoFileData,\n\t\tcurrentLanguage,\n\t\tbreadCrumbs,\n\t} = getAppStore()\n\n\tconst [currentLocation, setCurrentLocation] = useState<any>()\n\tconst [\n\t\tisPhaseSelected,\n\t\t{ setTrue: showPhaseComponent, setFalse: hidePhaseComponent },\n\t] = useBoolean(false)\n\tconst [currentLocationTitle, setCurrentLocationTitle] = useState<\n\t\tstring | null\n\t>(null)\n\n\tconst phaseOverviewText = t('LocationsRegions.PhaseOverview.title')\n\n\tconst updateCurrentLocation = useCallback(() => {\n\t\tif (currentLocation) {\n\t\t\tconst locationName =\n\t\t\t\tgetCustomString(\n\t\t\t\t\tcurrentLocation,\n\t\t\t\t\tcurrentLocation?.info?.content?.name\n\t\t\t\t) || toProperCase(currentLocation?.info?.content?.id)\n\t\t\tlet newTitle = locationName\n\n\t\t\tif (breadCrumbs.phase_overview) {\n\t\t\t\tnewTitle = `${locationName} ${phaseOverviewText}`\n\t\t\t\tupdatePhaseOverviewTitle(newTitle)\n\t\t\t}\n\t\t\tsetCurrentLocationTitle(newTitle as string)\n\t\t} else {\n\t\t\tsetBreadcrumbs(undefined)\n\t\t\tsetCurrentLocationTitle(null)\n\t\t}\n\t}, [currentLocation, breadCrumbs.phase_overview, phaseOverviewText])\n\n\tuseEffect(() => {\n\t\tupdateCurrentLocation()\n\t}, [currentLocation, currentLanguage, breadCrumbs.phase_overview, phaseOverviewText, repoFileData, updateCurrentLocation])\n\n\tconst getLocationsData = useCallback(\n\t\tasync (item: any) => {\n\t\t\tconst pathArray = item.value.info.path.split('/')\n\t\t\tpathArray.splice(-1, 1)\n\n\t\t\tconst currLocation = pathFind(repoFileData, pathArray)\n\t\t\tif (pathArray.length === 1 && !currLocation.dataLoaded) {\n\t\t\t\tloadAllLocationData(currLocation)\n\t\t\t}\n\n\t\t\tsetCurrentLocation(currLocation)\n\t\t\tsetBreadcrumbs(currLocation)\n\t\t},\n\t\t[repoFileData]\n\t)\n\n\tconst navigateBack = useCallback(\n\t\t(item: any) => {\n\t\t\tif (item === 'root') {\n\t\t\t\tsetCurrentLocation(null)\n\t\t\t\tsetBreadcrumbs(undefined)\n\t\t\t\tsetCurrentLocationTitle(null)\n\t\t\t} else {\n\t\t\t\tdeleteCrumbs(item)\n\t\t\t\tgetLocationsData(item)\n\t\t\t}\n\n\t\t\thidePhaseComponent()\n\t\t},\n\t\t[getLocationsData, hidePhaseComponent]\n\t)\n\n\tconst openPhaseItem = useCallback(() => {\n\t\taddPhaseOverviewCrumb(currentLocation)\n\t\tshowPhaseComponent()\n\t}, [showPhaseComponent, currentLocation])\n\n\treturn (\n\t\t<div className=\"locationPageContainer\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t<LocationsBreadcrumbs\n\t\t\t\t\t\t\tbreadcrumbs={breadCrumbs}\n\t\t\t\t\t\t\tcurrentLocationTitle={currentLocationTitle}\n\t\t\t\t\t\t\tnavigateBack={navigateBack}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t{!isDataRefreshing ? (\n\t\t\t\t\t\t!isPhaseSelected ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{currentLocation && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<LocationPhaseOverrideBar\n\t\t\t\t\t\t\t\t\t\t\tcurrentLocation={currentLocation}\n\t\t\t\t\t\t\t\t\t\t\tbreadcrumbs={breadCrumbs}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<LocationDetails currentLocation={currentLocation} />\n\t\t\t\t\t\t\t\t\t\t<LocationPhaseList\n\t\t\t\t\t\t\t\t\t\t\tcurrentLocation={currentLocation}\n\t\t\t\t\t\t\t\t\t\t\tonItemClicked={openPhaseItem}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<LocationStates\n\t\t\t\t\t\t\t\t\tcurrentLocation={currentLocation}\n\t\t\t\t\t\t\t\t\tonSelectedItem={(item) => getLocationsData(item)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LocationPhaseQualifiers currentLocation={currentLocation} />\n\t\t\t\t\t\t)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<ProgressIndicator description={t('LocationsStates.loading')} />\n\t\t\t\t\t\t</section>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport { DefaultButton } from 'office-ui-fabric-react'\nimport { loginUser } from '../actions/authActions'\nimport { getText as t } from '../selectors/intlSelectors'\n\nimport './Login.scss'\n\nexport default observer(function Login() {\n\treturn (\n\t\t<div className=\"loginPageContainer\">\n\t\t\t<div className=\"loginContainer\">\n\t\t\t\t<h3>{t('App.title')}</h3>\n\t\t\t\t<DefaultButton text={t('App.LoginButton')} onClick={loginUser} />\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tPrimaryButton,\n\tDefaultButton,\n\tTextField,\n\tDropdown,\n\tIDropdownOption,\n} from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useRef, useState } from 'react'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getGlobalQualifierValidationTexts } from '../selectors/qualifierSelectors'\n\nimport './AddQualifierForm.scss'\n\nexport interface AddQualifierFormProp {\n\trootLocationKey: string\n\titem?: any\n\ttagsOptions: IDropdownOption[]\n\tonSubmit?: (newQualifier: any) => void\n\tonCancel?: () => void\n}\n\nconst setInitialData = (item: any) => {\n\tif (item) {\n\t\treturn {\n\t\t\ttagKey: item.key.split('/')[1].split('.')[0],\n\t\t\tkey: item.key,\n\t\t\tqualifier: item.text,\n\t\t\tqualifierSms: item.sms,\n\t\t\tqualifierVoice: item.voice,\n\t\t\tisNew: false,\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\ttagKey: '',\n\t\t\tkey: '',\n\t\t\tqualifier: '',\n\t\t\tqualifierSms: '',\n\t\t\tqualifierVoice: '',\n\t\t\tisNew: true,\n\t\t}\n\t}\n}\n\nexport default observer(function AddQualifierForm(props: AddQualifierFormProp) {\n\tconst { onSubmit, onCancel, item, tagsOptions, rootLocationKey } = props\n\tconst [formData, setFormData] = useState<any>(setInitialData(item))\n\tconst fieldChanges = useRef<any>(formData)\n\tconst globalQualifiersList = useRef<string[]>(\n\t\tgetGlobalQualifierValidationTexts(rootLocationKey)\n\t)\n\tconst [hasError, setHasError] = useState<boolean>(false)\n\tconst [isAddingTag, setIsAddingTag] = useState<boolean>(false)\n\n\tconst handleTagChange = useCallback(\n\t\t(_ev: any, item?: IDropdownOption) => {\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\ttagKey: item?.key,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst isDuplicate = useCallback(\n\t\t(newQualifier: string) => {\n\t\t\tconst newQualifierText = newQualifier.toLowerCase().replaceAll(' ', '')\n\t\t\tif (globalQualifiersList.current.includes(newQualifierText)) {\n\t\t\t\tsetHasError(true)\n\t\t\t\treturn t('AddQualifierForm.hasDuplicate.qualifier')\n\t\t\t} else {\n\t\t\t\tsetHasError(false)\n\t\t\t\treturn ''\n\t\t\t}\n\t\t},\n\t\t[globalQualifiersList, setHasError]\n\t)\n\n\tconst isTagDuplicate = useCallback(\n\t\t(newTag: string) => {\n\t\t\tconst newTagKey = newTag.toLowerCase().replaceAll(' ', '_')\n\t\t\tconst tagKeys = tagsOptions.map((t) => t.key)\n\t\t\tif (tagKeys.includes(newTagKey)) {\n\t\t\t\tsetHasError(true)\n\t\t\t\treturn t('AddQualifierForm.hasDuplicate.tag')\n\t\t\t} else {\n\t\t\t\tsetHasError(false)\n\t\t\t\treturn ''\n\t\t\t}\n\t\t},\n\t\t[setHasError, tagsOptions]\n\t)\n\n\tconst disableSubmit = useCallback((): boolean => {\n\t\tif (hasError) return true\n\t\treturn formData.qualifier === ''\n\t}, [formData, hasError])\n\n\tconst createNewTag = useCallback(() => {\n\t\tconst newTagKey = formData.tagKey.replaceAll(' ', '_')\n\t\ttagsOptions.push({ key: newTagKey, text: formData.tagKey })\n\t\ttagsOptions.sort((a, b) => (a.text > b.text ? 1 : -1))\n\n\t\tfieldChanges.current = {\n\t\t\t...fieldChanges.current,\n\t\t\t...{\n\t\t\t\ttagKey: newTagKey,\n\t\t\t},\n\t\t}\n\n\t\tsetIsAddingTag(false)\n\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t}, [formData, tagsOptions, fieldChanges, setIsAddingTag])\n\n\tconst formTitle = item\n\t\t? t('AddQualifierForm.title.edit')\n\t\t: t('AddQualifierForm.title.new')\n\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">{formTitle}</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<div className=\"tagRow\">\n\t\t\t\t\t{!isAddingTag ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\tselectedKey={formData.tagKey}\n\t\t\t\t\t\t\t\tplaceholder={t('AddQualifierForm.Tag.Dropdown.placeholder')}\n\t\t\t\t\t\t\t\toptions={tagsOptions}\n\t\t\t\t\t\t\t\tonChange={handleTagChange}\n\t\t\t\t\t\t\t\tdisabled={!formData.isNew}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{formData.isNew && (\n\t\t\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\t\t\ttext={t('AddQualifierForm.Tag.newTag')}\n\t\t\t\t\t\t\t\t\tonClick={() => setIsAddingTag(true)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tname=\"tagKey\"\n\t\t\t\t\t\t\t\tplaceholder={t('AddQualifierForm.Tag.Input.placeholder')}\n\t\t\t\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\t\t\t\tvalidateOnLoad={false}\n\t\t\t\t\t\t\t\tonGetErrorMessage={() => isTagDuplicate(formData.tagKey)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\t\ttext={t('AddQualifierForm.Tag.Buttons.ok')}\n\t\t\t\t\t\t\t\tonClick={() => createNewTag()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<DefaultButton\n\t\t\t\t\t\t\t\ttext={t('AddQualifierForm.Tag.Buttons.cancel')}\n\t\t\t\t\t\t\t\tonClick={() => setIsAddingTag(false)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t<div></div>\n\t\t\t\t</div>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"\"\n\t\t\t\t\tname=\"qualifier\"\n\t\t\t\t\tplaceholder={t('AddQualifierForm.Qualifier.placeholder')}\n\t\t\t\t\tvalue={formData.qualifier}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={false}\n\t\t\t\t\tresizable={false}\n\t\t\t\t\tdisabled={!formData.tagKey || isAddingTag}\n\t\t\t\t\tvalidateOnLoad={false}\n\t\t\t\t\tonGetErrorMessage={() => isDuplicate(formData.qualifier)}\n\t\t\t\t/>\n\t\t\t\t <TextField\n\t\t\t\t\tlabel=\"\"\n\t\t\t\t\tname=\"qualifierSms\"\n\t\t\t\t\tplaceholder={t('AddQualifierForm.QualifierSms.placeholder')}\n\t\t\t\t\tvalue={formData.qualifierSms}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={false}\n\t\t\t\t\tresizable={false}\n\t\t\t\t\tdisabled={!formData.tagKey || isAddingTag}\n\t\t\t\t\tvalidateOnLoad={false}\n\t\t\t\t\tonGetErrorMessage={() => isDuplicate(formData.qualifierSms)}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel=\"\"\n\t\t\t\t\tname=\"qualifierVoice\"\n\t\t\t\t\tplaceholder={t('AddQualifierForm.QualifierVoice.placeholder')}\n\t\t\t\t\tvalue={formData.qualifierVoice}\n\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t\tautoAdjustHeight={false}\n\t\t\t\t\tresizable={false}\n\t\t\t\t\tdisabled={!formData.tagKey || isAddingTag}\n\t\t\t\t\tvalidateOnLoad={false}\n\t\t\t\t\tonGetErrorMessage={() => isDuplicate(formData.qualifierVoice)}\n\t\t\t\t/> \n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton\n\t\t\t\t\ttext={t('App.submit')}\n\t\t\t\t\tdisabled={disableSubmit()}\n\t\t\t\t\tonClick={() => onSubmit?.(formData)}\n\t\t\t\t/>\n\t\t\t\t<DefaultButton\n\t\t\t\t\ttext={t('App.cancel')}\n\t\t\t\t\tonClick={() => onCancel?.()}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getAppStore } from '../store/store'\n\nexport const getGlobalQualifierValidationTexts = (rootLocationKey: string): string[] => {\n    const store = getAppStore()\n    const { content } = store.repoFileData[rootLocationKey].strings\n\n    return Object.entries(content)\n        .filter(([key, _value]: [string, any]) => key.startsWith('c19.eligibility.question/'))\n        .map(([_key, value]: [string, any]) => {\n            return value[store.currentLanguage].toLowerCase().replaceAll(' ','')\n        })\n}","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tIGroup,\n\tDetailsList,\n\tFontIcon,\n\tModal,\n\tIDropdownOption,\n\tIColumn,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { updateRootLocationQualifiers } from '../mutators/repoMutators'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getAppStore } from '../store/store'\nimport { toProperCase } from '../utils/textUtils'\nimport AddQualifierForm from './AddQualiferForm'\n\nimport './QualifierPanel.scss'\n\nexport default observer(function QualifierPanel() {\n\tconst {\n\t\tcurrentLanguage,\n\t\tisEditable,\n\t\tisDataRefreshing,\n\t\trepoFileData,\n\t\tbreadCrumbs\n\t} = getAppStore()\n\n\tconst [qualifierGroup, setQualifierGroup] = useState<IGroup[]>([])\n\tconst [qualifierGroupItems, setQualifierGroupItems] = useState<any[]>([])\n\tconst [\n\t\tisAddQualifierModalOpen,\n\t\t{ setTrue: openAddQualifierModal, setFalse: dismissAddQualifierModal },\n\t] = useBoolean(false)\n\tconst formItem = useRef<any>(null)\n\tconst rootLocationKey = useRef<string>(Object.keys(breadCrumbs)[0])\n\n\tuseEffect(() => {\n\t\tif (repoFileData) {\n\n\t\t\tconst groupKeys: any[] = []\n\t\t\tconst questionItemKeys: any[] = []\n\n\t\t\tconst tempQualifierGroup: IGroup[] = []\n\t\t\tconst tempQualifierGroupItems: any[] = []\n\n\t\t\tconst contentObj = repoFileData[rootLocationKey.current].strings.content\n\t\t\tconst questionKeys = Object.keys(contentObj)\n\t\t\t\t.filter((k) => k.includes('eligibility.question/'))\n\t\t\t\t.sort((a, b) => (a > b ? 1 : -1))\n\n\t\t\tquestionKeys.forEach((key) => {\n\t\t\t\tconst questionGroupKey = key.split('/')[1].split('.')\n\n\t\t\t\tif (!groupKeys.includes(questionGroupKey[0])) {\n\t\t\t\t\tgroupKeys.push(questionGroupKey[0])\n\n\t\t\t\t\ttempQualifierGroup.push({\n\t\t\t\t\t\tkey: questionGroupKey[0],\n\t\t\t\t\t\tname: toProperCase(questionGroupKey[0]),\n\t\t\t\t\t\tstartIndex: tempQualifierGroupItems.length,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tisCollapsed: true,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconst groupIdx = tempQualifierGroup.findIndex(\n\t\t\t\t\t\t(obj) => obj.key === questionGroupKey[0]\n\t\t\t\t\t)\n\t\t\t\t\ttempQualifierGroup[groupIdx].count++\n\t\t\t\t}\n\n\t\t\t\tif (!questionItemKeys.includes(key)) {\n\t\t\t\t\tquestionItemKeys.push(key)\n\n\t\t\t\t\tconst smsKey = key.replace('.question/','.question.sms/')\n\t\t\t\t\tconst voiceKey = key.replace('.question/','.question.voice/')\n\n\t\t\t\t\ttempQualifierGroupItems.push({\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\tlabel: contentObj[key][currentLanguage]\n\t\t\t\t\t\t\t? contentObj[key][currentLanguage]\n\t\t\t\t\t\t\t: `${t(\n\t\t\t\t\t\t\t\t\t'QualifierPanel.translationNotFound'\n\t\t\t\t\t\t\t)} (${currentLanguage})`,\n\t\t\t\t\t\ttext: contentObj[key]?.[currentLanguage] || '',\n\t\t\t\t\t\tsms: contentObj[smsKey]?.[currentLanguage] || '',\n\t\t\t\t\t\tvoice: contentObj[voiceKey]?.[currentLanguage] || '',\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tsetQualifierGroup(tempQualifierGroup)\n\t\t\tsetQualifierGroupItems(tempQualifierGroupItems)\n\t\t}\n\t}, [rootLocationKey, repoFileData, currentLanguage, setQualifierGroup, setQualifierGroupItems])\n\n\tconst columns = [\n\t\t{\n\t\t\tkey: 'questionColKey',\n\t\t\tname: t('QualifierPanel.columns.question'),\n\t\t\tfieldName: 'label',\n\t\t\tminWidth: 100,\n\t\t\tisResizable: false,\n\t\t},\n\t\t{\n\t\t\tkey: 'editCol',\n\t\t\tname: '',\n\t\t\tfieldName: 'editQualifier',\n\t\t\tminWidth: 50,\n\t\t\tisResizable: false,\n\t\t},\n\t].filter((loc) => (isEditable ? true : loc.key !== 'editCol'))\n\n\tconst onAddQualifierFormOpen = useCallback(\n\t\t(item?: any) => {\n\t\t\tformItem.current = item ?? null\n\t\t\topenAddQualifierModal()\n\t\t},\n\t\t[openAddQualifierModal, formItem]\n\t)\n\n\tconst addQualifierSubmit = useCallback(\n\t\t(newQualifier) => {\n\t\t\tupdateRootLocationQualifiers({\n\t\t\t\trootLocationKey: rootLocationKey.current,\n\t\t\t\tnewQualifier\n\t\t\t})\n\t\t\tsetTimeout(() => dismissAddQualifierModal(), 100)\n\t\t},\n\t\t[dismissAddQualifierModal]\n\t)\n\n\tconst onRenderItemColumn = useCallback(\n\t\t(item?: any, _index?: number, column?: IColumn) => {\n\t\t\tconst fieldContent = item[column?.fieldName as keyof any] as string\n\n\t\t\tif (column?.key === 'editCol') {\n\t\t\t\treturn isEditable ? (\n\t\t\t\t\t<FontIcon\n\t\t\t\t\t\ticonName=\"Edit\"\n\t\t\t\t\t\tclassName=\"editIcon\"\n\t\t\t\t\t\tonClick={() => onAddQualifierFormOpen(item)}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t} else {\n\t\t\t\treturn <span>{fieldContent}</span>\n\t\t\t}\n\t\t},\n\t\t[onAddQualifierFormOpen, isEditable]\n\t)\n\n\tconst tagsOptions: IDropdownOption[] = qualifierGroup.map((tag) => {\n\t\treturn {\n\t\t\tkey: tag.key,\n\t\t\ttext: tag.name,\n\t\t}\n\t})\n\n\treturn (\n\t\t<div className=\"qualifierPanelContainer\">\n\t\t\t<div className=\"panelHeader\">\n\t\t\t\t<div className=\"panelHeaderTitle\">{t('QualifierPanel.title')}</div>\n\t\t\t</div>\n\t\t\t<div className=\"panelBody\">\n\t\t\t\t{!isDataRefreshing && (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t{!!repoFileData[rootLocationKey.current]?.strings?.content && (\n\t\t\t\t\t\t\t<div className=\"searchRow\">\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"addQualiferHeaderButton\"\n\t\t\t\t\t\t\t\t\tonClick={() => onAddQualifierFormOpen(null)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontIcon\n\t\t\t\t\t\t\t\t\t\ticonName=\"CircleAdditionSolid\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"addQualifierIcon\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{t('QualifierPanel.addQualifierLabel')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{qualifierGroupItems.length > 0 ? (\n\t\t\t\t\t\t\t<DetailsList\n\t\t\t\t\t\t\t\titems={qualifierGroupItems}\n\t\t\t\t\t\t\t\tgroups={qualifierGroup}\n\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\tgroupProps={{\n\t\t\t\t\t\t\t\t\tshowEmptyGroups: false,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcompact={true}\n\t\t\t\t\t\t\t\tisHeaderVisible={false}\n\t\t\t\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t\t\t\t\tclassName=\"qualifierGroupItem\"\n\t\t\t\t\t\t\t\tonRenderItemColumn={onRenderItemColumn}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"noQualifiers\">No qualifiers available</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\tisOpen={isAddQualifierModalOpen}\n\t\t\t\tisModeless={false}\n\t\t\t\tisDarkOverlay={true}\n\t\t\t\tisBlocking={false}\n\t\t\t>\n\t\t\t\t<AddQualifierForm\n\t\t\t\t\trootLocationKey={rootLocationKey.current}\n\t\t\t\t\titem={formItem.current}\n\t\t\t\t\ttagsOptions={tagsOptions}\n\t\t\t\t\tonSubmit={addQualifierSubmit}\n\t\t\t\t\tonCancel={dismissAddQualifierModal}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getAppStore } from '../store/store'\nimport { StringFormat, toProperCase } from '../utils/textUtils'\n\nexport const getChanges = (): any => {\n\tconst { pendingChangeList } = getAppStore()\n\tconst changesList: any[] = []\n\tconst { added, modified, deleted } = pendingChangeList\n\n\tif (added.length > 0) {\n\t\tadded.forEach((item: any) => {\n\t\t\tconst label = StringFormat(\n\t\t\t\tt('Review.ChangesList.addPrefixText'),\n\t\t\t\tt(`Review.ChangesList.sections.${item.section}`)\n\t\t\t)\n\t\t\tchangesList.push({ label: `${label}: ${toProperCase(item.name)}` })\n\t\t})\n\t}\n\n\tif (modified.length > 0) {\n\t\tmodified.forEach((item: any) => {\n\t\t\tconst label = StringFormat(\n\t\t\t\tt('Review.ChangesList.modifiedPrefixText'),\n\t\t\t\tt(`Review.ChangesList.sections.${item.section}`)\n\t\t\t)\n\t\t\tchangesList.push({ label: `${label}: ${toProperCase(item.name)}` })\n\t\t})\n\t}\n\n\tif (deleted.length > 0) {\n\t\tdeleted.forEach((item: any) => {\n\t\t\tconst label = StringFormat(\n\t\t\t\tt('Review.ChangesList.removedPrefixText'),\n\t\t\t\tt(`Review.ChangesList.sections.${item.section}`)\n\t\t\t)\n\t\t\tchangesList.push({ label: `${label}: ${toProperCase(item.name)}` })\n\t\t})\n\t}\n\n\treturn changesList\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport {\n\tPrimaryButton,\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tProgressIndicator,\n\tTextField\n} from 'office-ui-fabric-react'\nimport { useState, useCallback, useRef } from 'react'\nimport { createPR } from '../actions/repoActions'\nimport { getChanges } from '../selectors/changesSelectors'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getAppStore } from '../store/store'\n\nimport './Review.scss'\n\nconst githubRepoOwner = process.env.REACT_APP_REPO_OWNER\nconst githubRepoName = process.env.REACT_APP_REPO_NAME\nexport interface ReviewProp {\n\tshowDashboard: () => void\n}\n\nconst setInitialFormData = (initData: any | undefined) => {\n\tif (!initData)\n\t\treturn {\n\t\t\tprTitle: '',\n\t\t\tprDetails: '',\n\t\t}\n\treturn {\n\t\tprTitle: initData.title ?? '',\n\t\tprDetails: initData.body ?? '',\n\t}\n}\n\nexport default observer(function Review(props: ReviewProp) {\n\tconst { showDashboard } = props\n\tconst changesColumns = [\n\t\t{\n\t\t\tkey: 'labelCol',\n\t\t\tname: t('Review.columns.pending'),\n\t\t\tfieldName: 'label',\n\t\t\tminWidth: 200,\n\t\t\tisResizable: true,\n\t\t}\n\t]\n\n\tconst [showLoading, setShowLoading] = useState<boolean>(false)\n\tconst state = getAppStore()\n\tconst [formData, setFormData] = useState<any>(\n\t\tsetInitialFormData(state.loadedPRData)\n\t)\n\tconst fieldChanges = useRef<any>(formData)\n\n\tconst handleTextChange = useCallback(\n\t\t(ev) => {\n\t\t\tconst value = ev.target.value\n\t\t\tfieldChanges.current = {\n\t\t\t\t...fieldChanges.current,\n\t\t\t\t...{\n\t\t\t\t\t[ev.target.name]: value,\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tsetFormData({ ...formData, ...fieldChanges.current })\n\t\t},\n\t\t[formData, fieldChanges]\n\t)\n\n\tconst handleSubmit = useCallback(\n\t\t(resp) => {\n\t\t\tif (resp?.error) {\n\t\t\t\tsetShowLoading(false)\n\t\t\t} else {\n\t\t\t\tshowDashboard()\n\t\t\t}\n\t\t},\n\t\t[showDashboard]\n\t)\n\n\tconst renderChangeLists = () => {\n\t\tconst items = getChanges()\n\t\tif (items.length > 0) {\n\t\t\treturn (\n\t\t\t\t<DetailsList\n\t\t\t\t\titems={items}\n\t\t\t\t\tcolumns={changesColumns}\n\t\t\t\t\tsetKey=\"set\"\n\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\tcheckboxVisibility={2}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\n\t\tif (state.userWorkingBranch) {\n\t\t\tconst sinceDate = new Date(parseInt(state.userWorkingBranch.split('-policy-')[1])).toLocaleString('sv').replace(' ','T')\n\t\t\treturn (\n\t\t\t\t <div>{t('Review.OnWorkingBranch',true, githubRepoOwner as string, githubRepoName, state.userWorkingBranch, sinceDate)}</div>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<div>{t('Review.NoChangeList')}</div>\n\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"reviewPageContainer\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t<div className=\"breadCrumbs\">/ {t('Review.title')}</div>\n\t\t\t\t\t\t<div className=\"mainTitle\">{t('Review.title')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t{!showLoading ? (\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div className=\"submitContainer\">\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel={t('Review.SubmitForm.titleLabel')}\n\t\t\t\t\t\t\t\t\tname=\"prTitle\"\n\t\t\t\t\t\t\t\t\tvalue={formData.prTitle}\n\t\t\t\t\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel={t('Review.SubmitForm.detailsLabel')}\n\t\t\t\t\t\t\t\t\tname=\"prDetails\"\n\t\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t\tautoAdjustHeight={true}\n\t\t\t\t\t\t\t\t\tresizable={false}\n\t\t\t\t\t\t\t\t\tvalue={formData.prDetails}\n\t\t\t\t\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderChangeLists()}\n\t\t\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\t\t\ttext={t('Review.SubmitForm.submitText')}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetShowLoading(true)\n\t\t\t\t\t\t\t\t\t\tcreatePR([\n\t\t\t\t\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\t\t\t\t\tformData,\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<section className=\"loadingContainer\">\n\t\t\t\t\t\t\t<ProgressIndicator description={t('Review.saving')} />\n\t\t\t\t\t\t</section>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tFontIcon,\n\tMessageBar,\n\tMessageBarType,\n\tProgressIndicator,\n} from '@fluentui/react'\nimport parse from 'csv-parse/lib/sync'\nimport { observer } from 'mobx-react-lite'\nimport { useState, useEffect, createRef, useCallback } from 'react'\nimport { loadAllStringsData } from '../actions/repoActions'\nimport { updateStrings } from '../mutators/repoMutators'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getAppStore } from '../store/store'\nimport { convertCSVDataToObj } from '../utils/dataUtils'\nimport { createCSVDataString } from '../utils/textUtils'\n\nimport './Translate.scss'\n\nexport default observer(function Translate() {\n\tconst { repoFileData, isDataRefreshing } = getAppStore()\n\n\tconst [showLoading, setShowLoading] = useState<boolean>(false)\n\tconst fileUploadRef = createRef<HTMLInputElement>()\n\tconst [errorMessage, setErrorMessage] = useState<\n\t\t{ message: string } | undefined\n\t>()\n\n\tuseEffect(() => {\n\t\tloadAllStringsData()\n\t}, [])\n\n\tconst onReaderLoadData = (readerEvent: any) => {\n\t\ttry {\n\t\t\tconst content = readerEvent.target.result\n\t\t\tconst contentObj = convertCSVDataToObj(parse(content, { columns: true }))\n\t\t\tif (Object.keys(contentObj).length > 0) {\n\t\t\t\tupdateStrings(contentObj)\n\t\t\t\tsetShowLoading(false)\n\t\t\t} else {\n\t\t\t\tthrow new Error(t('Translate.error.invalidFileContent'))\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetErrorMessage(err)\n\t\t\tsetShowLoading(false)\n\t\t}\n\t}\n\n\tconst onFileUpload = (e: any) => {\n\t\tsetErrorMessage(undefined)\n\t\tif (e.target.files.length > 0) {\n\t\t\thandleFileUpload(e.target.files[0])\n\t\t}\n\t}\n\n\tconst handleFileUpload = (file: any) => {\n\t\tsetShowLoading(true)\n\t\tif (file.type === 'text/csv') {\n\t\t\tconst reader = new FileReader()\n\t\t\treader.onload = onReaderLoadData\n\t\t\treader.readAsText(file, 'UTF-8')\n\t\t} else {\n\t\t\tsetErrorMessage(new Error(t('Translate.error.invalidFileType')))\n\t\t\tsetShowLoading(false)\n\t\t}\n\t}\n\n\tconst triggerFileOnClick = () => {\n\t\tfileUploadRef.current?.click()\n\t}\n\n\tconst onDragFile = (e: any) => {\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\t}\n\n\tconst onDropFile = (e: any) => {\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\n\t\tif (e.dataTransfer.items[0].kind === 'file') {\n\t\t\thandleFileUpload(e.dataTransfer.items[0].getAsFile())\n\t\t}\n\t}\n\n\tconst recursiveFindStrings = useCallback(async (elem: any) => {\n\t\tconst returnStrings = {}\n\t\tif (elem.regions) {\n\t\t\tfor (const item of Object.entries(elem.regions)) {\n\t\t\t\tconst regionStrings = await recursiveFindStrings(item[1])\n\t\t\t\tObject.assign(returnStrings, regionStrings)\n\t\t\t}\n\t\t}\n\n\t\treturn { ...elem.strings?.content, ...returnStrings }\n\t}, [])\n\n\tconst onFileDownload = useCallback(async () => {\n\t\tlet stringsObj = {}\n\n\t\tfor (const item of Object.entries(repoFileData)) {\n\t\t\tconst location: any = item[1]\n\t\t\tconst results = await recursiveFindStrings(location)\n\t\t\tstringsObj = { ...stringsObj, ...results }\n\t\t}\n\t\tconst stringData = createCSVDataString(stringsObj)\n\t\tconst csvData = new Blob([stringData], { type: 'text/csv' })\n\t\tconst csvUrl = URL.createObjectURL(csvData)\n\t\twindow.open(csvUrl)\n\t}, [repoFileData, recursiveFindStrings])\n\n\treturn (\n\t\t<div className=\"translatePageContainer\">\n\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t<div className=\"breadCrumbs\">/ {t('Translate.title')}</div>\n\t\t\t\t\t\t<div className=\"mainTitle\">{t('Translate.title')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bodyContent\">\n\t\t\t\t\t{errorMessage && (\n\t\t\t\t\t\t<MessageBar\n\t\t\t\t\t\t\tmessageBarType={MessageBarType.error}\n\t\t\t\t\t\t\tdismissButtonAriaLabel={t(\n\t\t\t\t\t\t\t\t'Translate.ErrorMessageBar.closeAriaLabel'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{t('Translate.error.unexpected')} {errorMessage?.toString()}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t)}\n\t\t\t\t\t{!(showLoading || isDataRefreshing) ? (\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"fileDropZone\"\n\t\t\t\t\t\t\t\tonDragEnter={onDragFile}\n\t\t\t\t\t\t\t\tonDragOver={onDragFile}\n\t\t\t\t\t\t\t\tonDrop={onDropFile}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"fileOptions\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tref={fileUploadRef}\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\tonChange={onFileUpload}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<p>{t('Translate.dragDropText')}</p>\n\t\t\t\t\t\t\t\t\t<button onClick={onFileDownload}>\n\t\t\t\t\t\t\t\t\t\t<FontIcon iconName=\"Download\" />\n\t\t\t\t\t\t\t\t\t\t{t('Translate.TemplateButtons.download')}\n\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t<button onClick={triggerFileOnClick}>\n\t\t\t\t\t\t\t\t\t\t<FontIcon iconName=\"CircleAdditionSolid\" className=\"blue\" />\n\t\t\t\t\t\t\t\t\t\t{t('Translate.TemplateButtons.upload')}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<section className=\"loadingContainer\">\n\t\t\t\t\t\t\t<ProgressIndicator\n\t\t\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t\t\tisDataRefreshing\n\t\t\t\t\t\t\t\t\t\t? t('Translate.GroupList.loading')\n\t\t\t\t\t\t\t\t\t\t: t('Translate.GroupList.updating')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { observer } from 'mobx-react-lite'\nimport { useEffect } from 'react'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { clearState } from '../store/localStorage'\nconst GH_REPO = process.env.REACT_APP_REPO_NAME\nconst GH_REPO_OWNER = process.env.REACT_APP_REPO_OWNER\n\nexport default observer(function UnAuthorized() {\n\tuseEffect(() => {\n\t\tclearState()\n\t}, [])\n\n\treturn (\n\t\t<div className=\"appBodyLeft\">\n\t\t\t<div className=\"dashboardPageWrapper\">\n\t\t\t\t<div className=\"bodyContainer\">\n\t\t\t\t\t<div className=\"bodyHeader\">\n\t\t\t\t\t\t<div className=\"bodyHeaderTitle\">\n\t\t\t\t\t\t\t<div className=\"mainTitle\">{t('UnAuthorized.title')}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<section style={{ width: '70%', margin: '0px auto' }}>\n\t\t\t\t\t<p>{t('UnAuthorized.body', true, `${GH_REPO_OWNER}/${GH_REPO}`)}</p>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { PrimaryButton, DefaultButton } from '@fluentui/react'\nimport { observer } from 'mobx-react-lite'\nimport { logoutUser } from '../mutators/authMutators'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getAppStore } from '../store/store'\n\nimport './LocationForm.scss'\n\nexport default observer(function UserAccessExpirationForm(props: any) {\n\tconst { onSubmit } = props\n\tconst { pendingChanges } = getAppStore()\n\n\treturn (\n\t\t<div className=\"modalWrapper\">\n\t\t\t<div className=\"modalHeader\">\n\t\t\t\t<div className=\"title\">{t('App.UserAccessExpirationForm.title')}</div>\n\t\t\t</div>\n\t\t\t<div className=\"modalBody\">\n\t\t\t\t<p>{t('App.UserAccessExpirationForm.text')}</p>\n\t\t\t</div>\n\t\t\t<div className=\"modalFooter\">\n\t\t\t\t<PrimaryButton onClick={onSubmit}>\n\t\t\t\t\t{t('App.UserAccessExpirationForm.submit')}\n\t\t\t\t</PrimaryButton>\n\t\t\t\t{!pendingChanges && (\n\t\t\t\t\t<DefaultButton onClick={logoutUser}>\n\t\t\t\t\t\t{t('App.UserAccessExpirationForm.logout')}\n\t\t\t\t\t</DefaultButton>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tDropdown,\n\tIconButton,\n\tPersona,\n\tPersonaSize,\n\tPivot,\n\tPivotItem,\n\tContextualMenu,\n\tMessageBar,\n\tMessageBarButton,\n\tModal,\n\tSpinner,\n} from '@fluentui/react'\nimport { useBoolean } from '@uifabric/react-hooks'\nimport { observer } from 'mobx-react-lite'\nimport { useCallback, useState, useEffect, useRef } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { loginUser, reLoginUser } from '../actions/authActions'\nimport { setAppLanguage } from '../actions/intlActions'\nimport { saveContinue } from '../actions/repoActions'\nimport { logoutUser } from '../mutators/authMutators'\nimport { setCurrentLanguage } from '../mutators/repoMutators'\nimport { getText as t } from '../selectors/intlSelectors'\nimport { getAppStore } from '../store/store'\nimport { getLanguageOptions } from '../utils/textUtils'\nimport Dashboard from './Dashboard'\nimport Footer from './Footer'\nimport Locations from './Locations'\nimport Login from './Login'\nimport QualifierPanel from './QualifierPanel'\nimport Review from './Review'\nimport Translate from './Translate'\nimport UnAuthorized from './UnAuthorized'\nimport UserAccessExpirationForm from './UserAccessExpirationForm'\n\nimport './App_reset_styles.scss'\nimport './App.scss'\n\nexport default observer(function App() {\n\tconst state = getAppStore()\n\tconst [isPanelOpen, { setTrue: showPanel, setFalse: hidePanel }] = useBoolean(\n\t\tfalse\n\t)\n\tconst [\n\t\tisPersonaMenuOpen,\n\t\t{ setTrue: showPersonaMenu, setFalse: hidePersonaMenu },\n\t] = useBoolean(false)\n\tconst [branchWasSaved, setBranchWasSaved] = useState(false)\n\tconst [\n\t\tisAccessExpiration,\n\t\t{ setTrue: showAccessExpirationModal, setFalse: hideAccessExpirationModal },\n\t] = useBoolean(false)\n\tconst [selectedKey, setSelectedKey] = useState<string>('Dashboard')\n\tconst personaComponent = useRef(null)\n\n\tuseEffect(() => {\n\t\tif (state.accessToken && !state.repoFileData) loginUser()\n\t}, [state.accessToken, state.repoFileData])\n\n\tuseEffect(() => {\n\t\tif (state.userAccessExpired) showAccessExpirationModal()\n\t}, [state.userAccessExpired, showAccessExpirationModal])\n\n\tuseEffect(() => {\n\t\tif (state.pendingChanges) {\n\t\t\twindow.onbeforeunload = function () {\n\t\t\t\treturn true\n\t\t\t}\n\t\t} else {\n\t\t\twindow.onbeforeunload = null\n\t\t}\n\t}, [state.pendingChanges])\n\n\tuseEffect(() => {\n\t\tsetAppLanguage(state.currentLanguage)\n\t}, [state.currentLanguage])\n\n\tconst togglePanel = useCallback(\n\t\t(item?: any) => {\n\t\t\tif (item.props.headerText === 'Locations') {\n\t\t\t\tshowPanel()\n\t\t\t} else {\n\t\t\t\thidePanel()\n\t\t\t}\n\t\t\tsetSelectedKey(item.props.headerText)\n\t\t},\n\t\t[showPanel, hidePanel, setSelectedKey]\n\t)\n\n\tconst showDashboard = useCallback(() => {\n\t\tsetSelectedKey('Dashboard')\n\t}, [setSelectedKey])\n\n\tconst onAccessExpirationFormSubmit = useCallback(() => {\n\t\tif (state.repoFileData) reLoginUser()\n\t\telse loginUser()\n\n\t\thideAccessExpirationModal()\n\t}, [state.repoFileData, hideAccessExpirationModal])\n\n\tconst renderRepoMessageBar = () => {\n\t\tif (state.loadedPRData && state.prChanges && !state.isDataRefreshing) {\n\t\t\treturn (\n\t\t\t\t<MessageBar\n\t\t\t\t\tmessageBarType={5}\n\t\t\t\t\tisMultiline={true}\n\t\t\t\t\tstyles={{ root: { margin: '10px 5px' } }}\n\t\t\t\t>\n\t\t\t\t\t{t('App.RepoMessageBar.current')}{' '}\n\t\t\t\t\t<strong>\n\t\t\t\t\t\tPR: {state.loadedPRData.number} - {state.loadedPRData.title}\n\t\t\t\t\t</strong>\n\t\t\t\t\t<br />\n\t\t\t\t\t{t('App.RepoMessageBar.updatedBy')}{' '}\n\t\t\t\t\t{state.prChanges?.last_commit?.commit?.committer?.name}\n\t\t\t\t\t<br />\n\t\t\t\t\t{t('App.RepoMessageBar.updatedOn')}{' '}\n\t\t\t\t\t{new Date(state.loadedPRData.updated_at).toLocaleString()}\n\t\t\t\t</MessageBar>\n\t\t\t)\n\t\t}\n\n\t\treturn null\n\t}\n\n\tconst renderSaveContinueMessageBar = () => {\n\t\tif (state.pendingChanges) {\n\t\t\treturn (\n\t\t\t\t<MessageBar\n\t\t\t\t\tstyles={{ root: { margin: '10px 5px' } }}\n\t\t\t\t\tactions={\n\t\t\t\t\t\t!!state.loadedPRData ? undefined : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{!state.isSavingCommits ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{/* <MessageBarButton\n\t\t\t\t\t\t\t\t\t\t\tdisabled={state.isDataRefreshing}\n\t\t\t\t\t\t\t\t\t\t\tonClick={initializeGitData}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{t('App.SaveContinueMessageBar.cancel')}\n\t\t\t\t\t\t\t\t\t\t</MessageBarButton> */}\n\t\t\t\t\t\t\t\t\t\t<MessageBarButton\n\t\t\t\t\t\t\t\t\t\t\tdisabled={state.isDataRefreshing}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetBranchWasSaved(true)\n\t\t\t\t\t\t\t\t\t\t\t\tsaveContinue()\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{t('App.SaveContinueMessageBar.submit')}\n\t\t\t\t\t\t\t\t\t\t</MessageBarButton>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Spinner\n\t\t\t\t\t\t\t\t\t\tlabel={t('App.SaveContinueMessageBar.saving')}\n\t\t\t\t\t\t\t\t\t\tariaLive=\"assertive\"\n\t\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{t('App.SaveContinueMessageBar.text')}\n\t\t\t\t</MessageBar>\n\t\t\t)\n\t\t} else if (state.userWorkingBranch) {\n\t\t\treturn (\n\t\t\t\t<MessageBar\n\t\t\t\t\tmessageBarType={4}\n\t\t\t\t\tstyles={{ root: { margin: '10px 5px' } }}\n\t\t\t\t>\n\t\t\t\t\t{branchWasSaved\n\t\t\t\t\t\t? t('App.branchWasSaved.pass')\n\t\t\t\t\t\t: t('App.branchWasSaved.fail')}{' '}\n\t\t\t\t\t{state.userWorkingBranch}, <br />\n\t\t\t\t\t{t('App.branchWasSaved.text')}\n\t\t\t\t</MessageBar>\n\t\t\t)\n\t\t}\n\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"rootContentWrapper\">\n\t\t\t{state.isAuthenticated ? (\n\t\t\t\t<>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<div className=\"appPageContainer\">\n\t\t\t\t\t\t\t\t<div className=\"appHeaderWrapper\">\n\t\t\t\t\t\t\t\t\t<div className=\"appHeaderContainer\">\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\ticonProps={{ iconName: 'waffle' }}\n\t\t\t\t\t\t\t\t\t\t\tstyles={{\n\t\t\t\t\t\t\t\t\t\t\t\ticon: { fontSize: '24px', color: 'white' },\n\t\t\t\t\t\t\t\t\t\t\t\trootHovered: { backgroundColor: 'transparent' },\n\t\t\t\t\t\t\t\t\t\t\t\trootPressed: { backgroundColor: 'transparent' },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className=\"appHeaderTitle\">{t('App.title', true)}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"appHeaderPersona\">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultSelectedKey={state.currentLanguage}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e, o) => setCurrentLanguage(o)}\n\t\t\t\t\t\t\t\t\t\t\t\tariaLabel={t('App.LanguageDropDown.ariaLabel')}\n\t\t\t\t\t\t\t\t\t\t\t\toptions={getLanguageOptions()}\n\t\t\t\t\t\t\t\t\t\t\t\tstyles={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tdropdown: { border: 'none' },\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'white !important',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tcaretDown: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'white !important',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tdropdownOptionText: { fontSize: '14px' },\n\t\t\t\t\t\t\t\t\t\t\t\t\troot: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectors: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t':hover': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,.25);',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tref={personaComponent}\n\t\t\t\t\t\t\t\t\t\t\tonClick={showPersonaMenu}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"appHeaderPersonaDetails\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"appHeaderUsername\">\n\t\t\t\t\t\t\t\t\t\t\t\t{state.userDisplayName}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<Persona\n\t\t\t\t\t\t\t\t\t\t\t\ttext={state.userDisplayName}\n\t\t\t\t\t\t\t\t\t\t\t\tsize={PersonaSize.size32}\n\t\t\t\t\t\t\t\t\t\t\t\thidePersonaDetails={true}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<ContextualMenu\n\t\t\t\t\t\t\t\t\t\t\titems={[\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey: 'logoutUserPersonaMenu',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext: t('App.Persona.logout'),\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlogoutUser()\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\thidden={!isPersonaMenuOpen}\n\t\t\t\t\t\t\t\t\t\t\ttarget={personaComponent}\n\t\t\t\t\t\t\t\t\t\t\tonItemClick={hidePersonaMenu}\n\t\t\t\t\t\t\t\t\t\t\tonDismiss={hidePersonaMenu}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"appBodyWrapper\">\n\t\t\t\t\t\t\t\t\t{state.isAuthorized ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"appBodyLeft\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Pivot\n\t\t\t\t\t\t\t\t\t\t\t\t\tonLinkClick={togglePanel}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedKey={selectedKey}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theaderText={t('App.Pivot.Dashboard').toString()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titemKey=\"Dashboard\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderSaveContinueMessageBar()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderRepoMessageBar()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dashboard />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theaderText={t('App.Pivot.Locations').toString()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titemKey=\"Locations\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderSaveContinueMessageBar()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderRepoMessageBar()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Locations />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{state.isEditable && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theaderText={t('App.Pivot.Translate').toString()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemKey=\"Translate\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderSaveContinueMessageBar()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderRepoMessageBar()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Translate />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(state.pendingChanges ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate.userWorkingBranch) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PivotItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theaderText={t('App.Pivot.Review').toString()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemKey=\"Review\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Review showDashboard={showDashboard} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</PivotItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Pivot>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{state.isEditable && isPanelOpen && Object.keys(state.breadCrumbs).length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"appBodyRight\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<QualifierPanel />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<UnAuthorized />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\tisOpen={isAccessExpiration}\n\t\t\t\t\t\t\t\tisModeless={false}\n\t\t\t\t\t\t\t\tisDarkOverlay={true}\n\t\t\t\t\t\t\t\tisBlocking={false}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<UserAccessExpirationForm\n\t\t\t\t\t\t\t\t\tonSubmit={onAccessExpirationFormSubmit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t\t<div>{t('App.NotFound')}</div>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Login />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t)}\n\t\t\t<Footer />\n\t\t</div>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { AppState } from '../store/schema/AppState'\n\nexport const firebaseApp = firebase.initializeApp({\n\tapiKey: process.env.REACT_APP_FIREBASE_KEY,\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n})\n\nexport const loginUserService = async (): Promise<AppState | undefined> => {\n\tlet authResp = undefined\n\n\tconst provider = new firebase.auth.GithubAuthProvider()\n\tprovider.addScope('repo')\n\n\tconst response = await firebaseApp.auth().signInWithPopup(provider)\n\n\tif (response) {\n\t\tconst oauthCreds = response.credential as firebase.auth.OAuthCredential\n\t\tauthResp = {\n\t\t\tisAuthenticated: true,\n\t\t\taccessToken: oauthCreds.accessToken,\n\t\t\temail: response.user?.email,\n\t\t\tuserDisplayName: response.user?.displayName,\n\t\t\tusername: response.additionalUserInfo?.username,\n\t\t} as AppState\n\t}\n\n\treturn authResp\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport parse from 'csv-parse/lib/sync'\nimport { getAppStore } from '../store/store'\nimport { convertCSVDataToObj } from '../utils/dataUtils'\nimport {\n\tb64_to_utf8,\n\tutf8_to_b64,\n\tcreateCSVDataString,\n} from '../utils/textUtils'\n\nconst githubRepoOwner = process.env.REACT_APP_REPO_OWNER\nconst githubRepoName = process.env.REACT_APP_REPO_NAME\n\nconst createPath = (\n\tobj: any,\n\tpathInput: string,\n\tvalue: any = undefined,\n\tsetNewValue = false\n) => {\n\tlet path = pathInput.split('/')\n\tlet current = obj\n\twhile (path.length > 1) {\n\t\tconst [head, ...tail] = path\n\t\tpath = tail\n\t\tif (current[head] === undefined) {\n\t\t\tcurrent[head] = {}\n\t\t}\n\t\tcurrent = current[head]\n\t}\n\tif (!current[path[0]]) {\n\t\tcurrent[path[0]] = setNewValue ? value : {}\n\t} else {\n\t\tcurrent[path[0]] = { ...current[path[0]], ...value }\n\t}\n}\n\nexport const gitFetch = async (\n\turl: string,\n\toptions: any = {}\n): Promise<any> => {\n\tconst { headers, json = true, ..._options } = options\n\tconst { accessToken } = getAppStore()\n\tconst apiUrl = url.startsWith('https://api.github.com/')\n\t\t? url\n\t\t: `https://api.github.com/repos/${githubRepoOwner}/${githubRepoName}/${url}`\n\n\tconst response = await fetch(apiUrl, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAuthorization: `token ${accessToken}`,\n\t\t\t...headers,\n\t\t},\n\t\t..._options,\n\t})\n\n\tif (response.ok === false) {\n\t\tconst error = Object.assign(new Error(), {\n\t\t\tstatus: response.status,\n\t\t\tok: response.ok,\n\t\t})\n\n\t\tthrow error\n\t}\n\n\tif (json) return await response.json()\n\telse return response\n}\n\nconst getContent = async (url: string, token: string) => {\n\tconst response = await fetch(`${url}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAuthorization: `token ${token}`,\n\t\t},\n\t})\n\tconst data = await response.json()\n\n\treturn data\n}\n\nconst createWorkingBranch = async (state: any, branchName: string) => {\n\tif (state.mainBranch)\n\t\treturn await gitFetch(`git/refs`, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tref: branchName,\n\t\t\t\tsha: state.mainBranch.commit.sha,\n\t\t\t}),\n\t\t})\n\telse return undefined\n}\n\nconst commitFileChanges = async (\n\tmethod: string,\n\tactionText: string,\n\tbranchName: string,\n\tfilePath: string,\n\tcontent: any,\n\tfileSha: string\n) => {\n\tconst query = `contents/packages/plans/data/policies/${filePath}`\n\treturn await gitFetch(query, {\n\t\tmethod,\n\t\tbody: JSON.stringify({\n\t\t\tbranch: branchName,\n\t\t\tmessage: `${actionText} ${filePath}`,\n\t\t\tcontent: content,\n\t\t\tsha: fileSha,\n\t\t}),\n\t})\n}\n\nconst commitChanges = async (state: any, branchName: string) => {\n\tlet branchLastCommitSha = ''\n\tconst { committedDeletes, pendingChangeList } = state\n\tconst upsertedList: any = {}\n\n\tif (pendingChangeList) {\n\t\tconst { added, modified, deleted } = pendingChangeList\n\t\tlet locationResp: any = {}\n\n\t\t// Add and Modify\n\t\tconst upserted = [...added, ...modified].filter(\n\t\t\t(item, idx, arr) =>\n\t\t\t\tarr.findIndex((t) => t.pathKey === item.pathKey) === idx\n\t\t)\n\n\t\tfor (const item of upserted) {\n\t\t\tconst skipFetch =\n\t\t\t\t!item.data.info?.path || committedDeletes.includes(item.data.info.path)\n\n\t\t\tif (!skipFetch) {\n\t\t\t\tif (item.data.info.content) {\n\t\t\t\t\t//Info\n\t\t\t\t\tlocationResp = await commitFileChanges(\n\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t'Updated',\n\t\t\t\t\t\tbranchName,\n\t\t\t\t\t\titem.data.info.path,\n\t\t\t\t\t\tutf8_to_b64(JSON.stringify(item.data.info.content, null, '\\t')),\n\t\t\t\t\t\titem.data.info.sha\n\t\t\t\t\t)\n\t\t\t\t\tupsertedList[item.data.info.path] = locationResp\n\t\t\t\t}\n\n\t\t\t\tif (item.data?.vaccination?.content) {\n\t\t\t\t\t//Vaccination\n\t\t\t\t\tlocationResp = await commitFileChanges(\n\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t'Updated',\n\t\t\t\t\t\tbranchName,\n\t\t\t\t\t\titem.data.vaccination.path,\n\t\t\t\t\t\tutf8_to_b64(\n\t\t\t\t\t\t\tJSON.stringify(item.data.vaccination.content, null, '\\t')\n\t\t\t\t\t\t),\n\t\t\t\t\t\titem.data.vaccination.sha\n\t\t\t\t\t)\n\t\t\t\t\tupsertedList[item.data.vaccination.path] = locationResp\n\t\t\t\t}\n\t\t\t\tif (item.data?.strings?.content) {\n\t\t\t\t\t//Strings\n\t\t\t\t\tlocationResp = await commitFileChanges(\n\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t'Updated',\n\t\t\t\t\t\tbranchName,\n\t\t\t\t\t\titem.data.strings.path,\n\t\t\t\t\t\tutf8_to_b64(createCSVDataString(item.data.strings.content)),\n\t\t\t\t\t\titem.data.strings.sha\n\t\t\t\t\t)\n\t\t\t\t\tupsertedList[item.data.strings.path] = locationResp\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Remove\n\t\tfor (const item of deleted) {\n\t\t\tconst skipFetch =\n\t\t\t\t!item.data.info?.path || committedDeletes.includes(item.data.info.path)\n\n\t\t\tlet fileSha = ''\n\t\t\tif (!skipFetch) {\n\t\t\t\t//Info\n\t\t\t\tif (item.data.info) {\n\t\t\t\t\tfileSha =\n\t\t\t\t\t\titem.data.info.path in upsertedList\n\t\t\t\t\t\t\t? upsertedList[item.data.info.path].content.sha\n\t\t\t\t\t\t\t: item.data.info?.sha\n\t\t\t\t\tif (fileSha) {\n\t\t\t\t\t\tlocationResp = await commitFileChanges(\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t'Removed',\n\t\t\t\t\t\t\tbranchName,\n\t\t\t\t\t\t\titem.data.info.path,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tfileSha\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//Vaccination\n\t\t\t\tif (item.data.vaccination) {\n\t\t\t\t\tfileSha =\n\t\t\t\t\t\titem.data.vaccination.path in upsertedList\n\t\t\t\t\t\t\t? upsertedList[item.data.vaccination.path].content.sha\n\t\t\t\t\t\t\t: item.data.vaccination?.sha\n\t\t\t\t\tif (fileSha) {\n\t\t\t\t\t\tlocationResp = await commitFileChanges(\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t'Removed',\n\t\t\t\t\t\t\tbranchName,\n\t\t\t\t\t\t\titem.data.vaccination.path,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tfileSha\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (item.data.strings) {\n\t\t\t\t\t//Strings\n\t\t\t\t\tfileSha =\n\t\t\t\t\t\titem.data.strings.path in upsertedList\n\t\t\t\t\t\t\t? upsertedList[item.data.strings.path].content.sha\n\t\t\t\t\t\t\t: item.data.strings?.sha\n\n\t\t\t\t\tif (fileSha) {\n\t\t\t\t\t\tlocationResp = await commitFileChanges(\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t'Removed',\n\t\t\t\t\t\t\tbranchName,\n\t\t\t\t\t\t\titem.data.strings.path,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tfileSha\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// MD file\n\t\t\t\tif (item.data?.desc_md) {\n\t\t\t\t\tlocationResp = await commitFileChanges(\n\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t'Removed',\n\t\t\t\t\t\tbranchName,\n\t\t\t\t\t\titem.data.desc_md.path,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\titem.data.desc_md?.sha\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbranchLastCommitSha = locationResp?.commit?.sha ?? branchLastCommitSha\n\t}\n\n\treturn { branchLastCommitSha, updatedFiles: upsertedList }\n}\n\nexport const repoServices = async (\n\tcommand: string,\n\textraData: any = undefined\n): Promise<any | undefined> => {\n\ttry {\n\t\tconst state = getAppStore()\n\t\tlet branchName = `refs/heads/${state.username}-policy-${Date.now()}`\n\n\t\tswitch (command) {\n\t\t\tcase 'checkAccess':\n\t\t\t\treturn await gitFetch(`collaborators/${state.username}`, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/vnd.github.v3+json',\n\t\t\t\t\t},\n\t\t\t\t\tjson: false,\n\t\t\t\t})\n\n\t\t\tcase 'getBranches':\n\t\t\t\treturn await gitFetch(`branches?per_page=100`)\n\n\t\t\tcase 'getCommits':\n\t\t\t\treturn await gitFetch(\n\t\t\t\t\t`commits?since=${extraData.since}&sha=${extraData.sha}`\n\t\t\t\t)\n\n\t\t\tcase 'getUserWorkingBranches':\n\t\t\t\tconst userPrs = await repoServices('getUserPullRequests')\n\t\t\t\tconst allBranches = extraData[0]\n\t\t\t\tconst usersBranches = allBranches.filter(\n\t\t\t\t\t(branch: any) => branch.name.split('-policy-')[0] === state.username\n\t\t\t\t)\n\n\t\t\t\tconst userWorkingBranches = usersBranches\n\t\t\t\t\t.filter((branch: any) => {\n\t\t\t\t\t\treturn !userPrs.find((pr: any) => pr?.head?.ref === branch.name)\n\t\t\t\t\t})\n\t\t\t\t\t.sort((a: any, b: any) => (a.name > b.name ? -1 : 1))\n\n\t\t\t\treturn userWorkingBranches\n\n\t\t\tcase 'getUserPullRequests':\n\t\t\t\tconst prs = await gitFetch(`issues?creator=${state.username}`)\n\t\t\t\tconst populatedPRs: any[] = await Promise.all(\n\t\t\t\t\tprs.map(async (item: any) => gitFetch(`pulls/${item.number}`))\n\t\t\t\t)\n\n\t\t\t\treturn populatedPRs\n\t\t\tcase 'getPullRequests':\n\t\t\t\tconst loadPRResponse = await gitFetch(`pulls/${extraData}`)\n\t\t\t\tconst commitResp = await gitFetch(`pulls/${extraData}/commits`)\n\n\t\t\t\treturn { data: loadPRResponse, commits: commitResp }\n\t\t\tcase 'getIssues':\n\t\t\t\treturn await gitFetch(`issues`)\n\n\t\t\tcase 'getRepoFileData': {\n\t\t\t\tconst query = !extraData\n\t\t\t\t\t? `contents/packages/plans/data?ref=${process.env.REACT_APP_MAIN_BRANCH}`\n\t\t\t\t\t: `contents/packages/plans/data?ref=${extraData}`\n\n\t\t\t\tconst dataFolderObj = await gitFetch(query)\n\t\t\t\tconst policyFolderGitUrl = dataFolderObj.find(\n\t\t\t\t\t(folder: { name: string }) => folder.name === 'policies'\n\t\t\t\t).git_url\n\t\t\t\tconst loadPolicyFolderResponse = await gitFetch(\n\t\t\t\t\t`${policyFolderGitUrl}?recursive=true`\n\t\t\t\t)\n\t\t\t\tconst policyFolderData = loadPolicyFolderResponse\n\t\t\t\tconst stateData: any = {}\n\n\t\t\t\tpolicyFolderData.tree.forEach((element: any) => {\n\t\t\t\t\tif (element.type === 'tree') {\n\t\t\t\t\t\tcreatePath(stateData, element.path)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst lastInstance = element.path.lastIndexOf('/')\n\t\t\t\t\t\tconst filePath = element.path.substring(0, lastInstance)\n\t\t\t\t\t\tconst fileName: string = element.path.substring(lastInstance + 1)\n\t\t\t\t\t\tconst fileType: string = fileName.split('.')[0]\n\t\t\t\t\t\tconst fileObj: any = {}\n\n\t\t\t\t\t\tswitch (fileName.split('.')[1].toLowerCase()) {\n\t\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\t\tfileObj[fileType] = {\n\t\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\t\tcontent: null,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase 'md':\n\t\t\t\t\t\t\t\tfileObj['desc_md'] = {\n\t\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\t\tcontent: null,\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase 'csv':\n\t\t\t\t\t\t\t\tfileObj['strings'] = {\n\t\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\t\tcontent: null,\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fileObj !== {}) {\n\t\t\t\t\t\t\tcreatePath(stateData, filePath, fileObj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tfor (const element of Object.keys(stateData)) {\n\t\t\t\t\tconst location = stateData[element]\n\n\t\t\t\t\tconst [infoData, stringsData, vaccinationData] = await Promise.all([\n\t\t\t\t\t\tgitFetch(String(location.info.url)),\n\t\t\t\t\t\tgitFetch(String(location.strings.url)),\n\t\t\t\t\t\tgitFetch(String(location.vaccination.url)),\n\t\t\t\t\t])\n\n\t\t\t\t\tlocation.info.content = JSON.parse(b64_to_utf8(infoData.content))\n\t\t\t\t\tlocation.strings.content = convertCSVDataToObj(\n\t\t\t\t\t\tparse(b64_to_utf8(stringsData.content), { columns: true })\n\t\t\t\t\t)\n\t\t\t\t\tlocation.vaccination.content = JSON.parse(\n\t\t\t\t\t\tb64_to_utf8(vaccinationData.content)\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\treturn stateData\n\t\t\t}\n\t\t\tcase 'loadAllLocationData': {\n\t\t\t\tconst { locationId, repoRef } = extraData\n\t\t\t\tconst query = !repoRef\n\t\t\t\t\t? `contents/packages/plans/data/policies/${locationId}?ref=${process.env.REACT_APP_MAIN_BRANCH}`\n\t\t\t\t\t: `contents/packages/plans/data/policies/${locationId}?ref=${repoRef}`\n\n\t\t\t\tconst dataFolderObj = await gitFetch(query)\n\n\t\t\t\tconst locationRegionsFolder = dataFolderObj.find(\n\t\t\t\t\t(folder: { name: string }) => folder.name === 'regions'\n\t\t\t\t).git_url\n\n\t\t\t\tconst loadRegionsResponse = await gitFetch(\n\t\t\t\t\t`${locationRegionsFolder}?recursive=true`\n\t\t\t\t)\n\n\t\t\t\tconst stateData: any = {}\n\n\t\t\t\tconst promiseList: any[] = []\n\n\t\t\t\tloadRegionsResponse.tree.forEach(async (element: any) => {\n\t\t\t\t\tif (element.type !== 'tree') {\n\t\t\t\t\t\tconst lastInstance = element.path.lastIndexOf('/')\n\t\t\t\t\t\tconst fileName: string = element.path.substring(lastInstance + 1)\n\t\t\t\t\t\tconst fileExt = fileName.split('.')[1].toLowerCase()\n\t\t\t\t\t\tif (['csv', 'json'].includes(fileExt)) {\n\t\t\t\t\t\t\tpromiseList.push(\n\t\t\t\t\t\t\t\tfetch(`${element.url}`, {\n\t\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\tAuthorization: `token ${state.accessToken}`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then((result) => result.json())\n\t\t\t\t\t\t\t\t\t.then((data) => [element, data])\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tconst response = await Promise.allSettled(promiseList)\n\n\t\t\t\tresponse.forEach((filePromise: any) => {\n\t\t\t\t\tif (filePromise.status === 'fulfilled' && filePromise.value) {\n\t\t\t\t\t\tconst fileInfo = filePromise.value[0]\n\t\t\t\t\t\tconst fileData = filePromise.value[1]\n\n\t\t\t\t\t\tconst lastInstance = fileInfo.path.lastIndexOf('/')\n\t\t\t\t\t\tconst filePath = fileInfo.path.substring(0, lastInstance)\n\t\t\t\t\t\tconst fileName: string = fileInfo.path.substring(lastInstance + 1)\n\t\t\t\t\t\tconst fileType: string = fileName.split('.')[0]\n\t\t\t\t\t\tconst fileObj: any = {}\n\t\t\t\t\t\tconst fileExt = fileName.split('.')[1].toLowerCase()\n\n\t\t\t\t\t\tswitch (fileExt) {\n\t\t\t\t\t\t\tcase 'json': {\n\t\t\t\t\t\t\t\tfileObj[fileType] = {\n\t\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\t\tsha: fileInfo.sha,\n\t\t\t\t\t\t\t\t\turl: fileInfo.url,\n\t\t\t\t\t\t\t\t\tpath: `${locationId}/regions/${fileInfo.path}`,\n\t\t\t\t\t\t\t\t\tcontent: JSON.parse(b64_to_utf8(fileData.content)),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'csv': {\n\t\t\t\t\t\t\t\tfileObj['strings'] = {\n\t\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\t\tsha: fileInfo.sha,\n\t\t\t\t\t\t\t\t\turl: fileInfo.url,\n\t\t\t\t\t\t\t\t\tpath: `${locationId}/regions/${fileInfo.path}`,\n\t\t\t\t\t\t\t\t\tcontent: convertCSVDataToObj(\n\t\t\t\t\t\t\t\t\t\tparse(b64_to_utf8(fileData.content), { columns: true })\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fileObj !== {}) {\n\t\t\t\t\t\t\tcreatePath(stateData, filePath, fileObj, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\treturn stateData\n\t\t\t}\n\n\t\t\tcase 'loadAllStringsData':\n\t\t\t\tconst query = !extraData\n\t\t\t\t\t? `contents/packages/plans/data?ref=${process.env.REACT_APP_MAIN_BRANCH}`\n\t\t\t\t\t: `contents/packages/plans/data?ref=${extraData}`\n\n\t\t\t\tconst dataFolderObj = await gitFetch(query)\n\t\t\t\tconst policyFolderGitUrl = dataFolderObj.find(\n\t\t\t\t\t(folder: { name: string }) => folder.name === 'policies'\n\t\t\t\t).git_url\n\t\t\t\tconst loadPolicyFolderResponse = await gitFetch(\n\t\t\t\t\t`${policyFolderGitUrl}?recursive=true`\n\t\t\t\t)\n\t\t\t\tconst policyFolderData = loadPolicyFolderResponse\n\t\t\t\tconst stringsData: any = []\n\n\t\t\t\tfor (const value of Object.values(policyFolderData.tree)) {\n\t\t\t\t\tconst element = value as any\n\t\t\t\t\tif (element.type !== 'tree') {\n\t\t\t\t\t\tconst lastInstance = element.path.lastIndexOf('/')\n\t\t\t\t\t\tconst fileName: string = element.path.substring(lastInstance + 1)\n\t\t\t\t\t\tconst fileType: string = fileName.split('.')[0]\n\t\t\t\t\t\tconst fileExt = fileName.split('.')[1].toLowerCase()\n\n\t\t\t\t\t\tif (fileExt === 'csv') {\n\t\t\t\t\t\t\tconst fileData = await getContent(\n\t\t\t\t\t\t\t\tString(element.url),\n\t\t\t\t\t\t\t\tString(state.accessToken)\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tstringsData.push({\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\ttype: fileType,\n\t\t\t\t\t\t\t\tsha: element.sha,\n\t\t\t\t\t\t\t\turl: element.url,\n\t\t\t\t\t\t\t\tpath: element.path,\n\t\t\t\t\t\t\t\tcontent: convertCSVDataToObj(\n\t\t\t\t\t\t\t\t\tparse(b64_to_utf8(fileData.content), { columns: true })\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn stringsData\n\n\t\t\tcase 'getLocationData':\n\t\t\t\tconst location = extraData\n\n\t\t\t\tconst pathArray = location.info.path.split('/')\n\t\t\t\tpathArray.splice(-1, 1)\n\t\t\t\tconst pathStr = pathArray.join('/')\n\n\t\t\t\tif (location.info) {\n\t\t\t\t\tconst infoData = await getContent(\n\t\t\t\t\t\tString(location.info.url),\n\t\t\t\t\t\tString(state.accessToken)\n\t\t\t\t\t)\n\n\t\t\t\t\tlocation.info.content = JSON.parse(b64_to_utf8(infoData.content))\n\t\t\t\t}\n\n\t\t\t\tif (location.strings && !location.strings.content) {\n\t\t\t\t\tconst stringsData = await getContent(\n\t\t\t\t\t\tString(location.strings.url),\n\t\t\t\t\t\tString(state.accessToken)\n\t\t\t\t\t)\n\n\t\t\t\t\tlocation.strings.content = convertCSVDataToObj(\n\t\t\t\t\t\tparse(b64_to_utf8(stringsData.content), { columns: true })\n\t\t\t\t\t)\n\t\t\t\t} else if (!location.strings) {\n\t\t\t\t\tlocation.strings = {\n\t\t\t\t\t\tname: location.info.content.id + '.csv',\n\t\t\t\t\t\tpath: `${pathStr}/${location.info.content.id}.csv`,\n\t\t\t\t\t\tsha: '',\n\t\t\t\t\t\ttype: location.info.content.id,\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\tcontent: {},\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (location.vaccination) {\n\t\t\t\t\tconst vaccinationData = await getContent(\n\t\t\t\t\t\tString(location.vaccination.url),\n\t\t\t\t\t\tString(state.accessToken)\n\t\t\t\t\t)\n\t\t\t\t\tlocation.vaccination.content = JSON.parse(\n\t\t\t\t\t\tb64_to_utf8(vaccinationData.content)\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\treturn location\n\t\t\tcase 'createWorkingBranch':\n\t\t\t\tif (state.mainBranch) {\n\t\t\t\t\treturn await createWorkingBranch(state, branchName)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'commitChanges':\n\t\t\t\tif (extraData) {\n\t\t\t\t\treturn await commitChanges(state, extraData.branchName)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'createPR':\n\t\t\t\tif (state.mainBranch) {\n\t\t\t\t\tconst prFormData = extraData[1]\n\t\t\t\t\tif (state.loadedPRData) {\n\t\t\t\t\t\tbranchName = `refs/heads/${state.loadedPRData.head.ref}`\n\t\t\t\t\t} else if (state.userWorkingBranch) {\n\t\t\t\t\t\tbranchName = `refs/heads/${state.userWorkingBranch}`\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait createWorkingBranch(state, branchName)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (state.pendingChanges) {\n\t\t\t\t\t\tawait commitChanges(state, branchName)\n\t\t\t\t\t}\n\n\t\t\t\t\tlet prTitle = ''\n\t\t\t\t\tif (!state.loadedPRData) {\n\t\t\t\t\t\tprTitle = !prFormData.prTitle\n\t\t\t\t\t\t\t? 'auto PR creation'\n\t\t\t\t\t\t\t: prFormData.prTitle\n\t\t\t\t\t\tconst prResp = await gitFetch(`pulls`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\thead: branchName,\n\t\t\t\t\t\t\t\tbase: process.env.REACT_APP_MAIN_BRANCH,\n\t\t\t\t\t\t\t\ttitle: prTitle,\n\t\t\t\t\t\t\t\tbody: prFormData.prDetails,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tawait gitFetch(`issues/${prResp.number}/labels`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\tlabels: [\n\t\t\t\t\t\t\t\t\t'data-composer-submission',\n\t\t\t\t\t\t\t\t\t'requires-data-accuracy-review',\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\treturn prResp\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprTitle = !prFormData.prTitle\n\t\t\t\t\t\t\t? state.loadedPRData.title\n\t\t\t\t\t\t\t: prFormData.prTitle\n\t\t\t\t\t\tconst prDetails = !prFormData.prDetails\n\t\t\t\t\t\t\t? state.loadedPRData.body\n\t\t\t\t\t\t\t: prFormData.prDetails\n\t\t\t\t\t\tawait gitFetch(`pulls/${state.loadedPRData.number}`, {\n\t\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\ttitle: prTitle,\n\t\t\t\t\t\t\t\tbody: prDetails,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\treturn state.loadedPRData\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn undefined\n\t} catch (error) {\n\t\treturn error\n\t}\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { orchestrator } from 'satcheljs'\nimport { loginUser, reLoginUser } from '../actions/authActions'\nimport { initializeGitData } from '../actions/repoActions'\nimport {\n\tsetUserAuthData,\n\tsetUserNoAccess,\n\tsetUserAccessExpired,\n\tsetUserAccessToken\n} from '../mutators/authMutators'\nimport { setIsDataRefreshing } from '../mutators/repoMutators'\nimport { loginUserService } from '../services/loginUserService'\nimport { repoServices } from '../services/repoServices'\nimport { getAppStore } from '../store/store'\n\norchestrator(loginUser, async () => {\n\ttry {\n\t\tlet resp: any\n\t\tconst state = getAppStore()\n\n\t\tif (state.accessToken) {\n\t\t\tresp = {\n\t\t\t\taccessToken: state.accessToken,\n\t\t\t\temail: state.email,\n\t\t\t\tisAuthenticated: state.isAuthenticated,\n\t\t\t\tuserDisplayName: state.userDisplayName,\n\t\t\t\tusername: state.username\n\t\t\t}\n\t\t} else {\n\t\t\tresp = await loginUserService()\n\t\t}\n\n\t\tif (resp) {\n\t\t\tsetUserAuthData(resp)\n\t\t\tconst accessResp = await repoServices('checkAccess')\n\t\t\tif (accessResp.ok) {\n\t\t\t\tinitializeGitData()\n\t\t\t\tsetUserAccessExpired(false)\n\t\t\t} else {\n\t\t\t\tif (accessResp.status === 401) {\n\t\t\t\t\tsetUserAccessExpired(true)\n\t\t\t\t\tsetUserAccessToken()\n\t\t\t\t} else {\n\t\t\t\t\tsetUserNoAccess()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tconsole.warn('Error logging in', error)\n\t}\n})\n\norchestrator(reLoginUser, async () => {\n\ttry {\n\t\tsetIsDataRefreshing(true)\n\t\tconst resp = await loginUserService()\n\t\tsetUserAccessExpired(false)\n\n\t\tif (resp) {\n\t\t\tsetUserAuthData(resp)\n\t\t\tconst accessResp = await repoServices('checkAccess')\n\n\t\t\tif (!accessResp.ok) {\n\t\t\t\tsetUserNoAccess()\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tconsole.warn('Error logging in', error)\n\t} finally {\n\t\tsetIsDataRefreshing(false)\n\t}\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { orchestrator } from 'satcheljs'\nimport {\n\tcreatePR,\n\tinitializeGitData,\n\tloadPR,\n\tloadBranch,\n\tsaveContinue,\n\tloadAllStringsData,\n\tloadAllLocationData\n} from '../actions/repoActions'\nimport {\n\tsetUserAccessExpired,\n\tsetUserAccessToken,\n} from '../mutators/authMutators'\nimport {\n\tsetBranchList,\n\tclearLoadedPRData,\n\tsetInitRepoFileData,\n\tsetIssuesList,\n\tsetLoadedPRData,\n\tsetPendingChanges,\n\tsetUserWorkingBranch,\n\tsetUserWorkingBranches,\n\tsetCommittedDeletes,\n\tsetIsDataRefreshing,\n\tsetIsDataStale,\n\tsetSavingCommitsFlag,\n\tsetLocationData,\n\tsetLoadAllStringsData,\n\tupdateRepoFileData\n} from '../mutators/repoMutators'\nimport { getChanges } from '../selectors/changesSelectors'\nimport { repoServices } from '../services/repoServices'\nimport { getAppStore } from '../store/store'\n\nconst handleError = (error: any, callback?: () => void) => {\n\tswitch (error.status) {\n\t\tcase 401:\n\t\t\tsetUserAccessExpired(true)\n\t\t\tsetUserAccessToken()\n\t\t\tbreak\n\t\tcase 'DATA_IS_STALE':\n\t\tcase 422:\n\t\t\tsetIsDataStale(true)\n\t\t\tbreak\n\t}\n\n\tsetSavingCommitsFlag(false)\n\tcallback?.()\n}\n\norchestrator(createPR, async (message) => {\n\tconst { fileData } = message\n\n\tlet resp = await repoServices('createPR', fileData)\n\tif (resp.ok === false) {\n\t\thandleError(resp, () => fileData[0]({ error: true }))\n\t} else {\n\t\tconst store = getAppStore()\n\t\tconst nextWorkingBranches = store.userWorkingBranches.filter(\n\t\t\t(b) => b.name !== store.userWorkingBranch\n\t\t)\n\n\t\tresp = await repoServices('getBranches')\n\t\tsetBranchList(resp)\n\n\t\tresp = await repoServices('getUserWorkingBranches', [resp])\n\t\tsetUserWorkingBranches(nextWorkingBranches)\n\t\tsetUserWorkingBranch(undefined)\n\n\t\tresp = await repoServices('getRepoFileData')\n\t\tsetInitRepoFileData(resp)\n\n\t\tresp = await repoServices('getIssues')\n\t\tsetIssuesList(resp, fileData[0]())\n\n\t\tclearLoadedPRData()\n\t}\n})\n\norchestrator(loadAllStringsData, async () => {\n\tsetIsDataRefreshing(true)\n\tconst resp = await repoServices('loadAllStringsData')\n\tsetLoadAllStringsData(resp)\n\n})\n\norchestrator(initializeGitData, async () => {\n\tsetIsDataRefreshing(true)\n\tsetUserWorkingBranch(undefined)\n\tclearLoadedPRData()\n\tsetIsDataStale(false)\n\tsetPendingChanges(false)\n\n\tlet resp = await repoServices('getBranches')\n\tif (resp.ok === false) {\n\t\thandleError(resp)\n\t\treturn\n\t}\n\n\tsetBranchList(resp)\n\n\tconst userWorkingBranches = await repoServices('getUserWorkingBranches', [\n\t\tresp,\n\t])\n\n\tif (resp.ok === false) {\n\t\thandleError(resp)\n\t\treturn\n\t}\n\n\tsetUserWorkingBranches(userWorkingBranches)\n\n\tresp = await repoServices('getRepoFileData')\n\tif (resp.ok === false) {\n\t\thandleError(resp)\n\t\treturn\n\t}\n\n\tsetInitRepoFileData(resp)\n\n\tresp = await repoServices('getIssues')\n\tif (resp.ok === false) {\n\t\thandleError(resp)\n\t\treturn\n\t}\n\n\tsetIssuesList(resp)\n\n\tsetIsDataRefreshing(false)\n})\n\norchestrator(loadBranch, async (message) => {\n\tconst { branch } = message\n\tsetPendingChanges(false)\n\tsetIsDataRefreshing(true)\n\n\tconst resp = await repoServices(\n\t\t'getRepoFileData',\n\t\t`refs/heads/${branch.name}`\n\t)\n\n\tconst date = new Date(parseInt(branch.name.split('-policy-')[1])).toISOString()\n\n\tconst commitResp = await repoServices(\n\t\t'getCommits',\n\t\t{\n\t\t\tsince: date,\n\t\t\tsha: branch.name\n\t\t}\n\t)\n\tsetCommittedDeletes(commitResp)\n\tif (resp.ok === false) {\n\t\thandleError(\n\t\t\tresp.status === 404 ? { ...resp, status: 'DATA_IS_STALE' } : resp\n\t\t)\n\t} else {\n\t\tsetUserWorkingBranch(branch.name)\n\t\tsetInitRepoFileData(resp)\n\t\tclearLoadedPRData()\n\t}\n\n\tsetIsDataRefreshing(false)\n})\n\norchestrator(loadPR, async (message) => {\n\tconst { prNumber } = message\n\tsetPendingChanges(false)\n\tsetIsDataRefreshing(true)\n\tif (prNumber) {\n\t\tconst prResp = await repoServices('getPullRequests', prNumber)\n\t\tif (prResp.ok === false) {\n\t\t\thandleError(prResp)\n\t\t\treturn\n\t\t}\n\t\tsetLoadedPRData(prResp)\n\t\tsetCommittedDeletes(prResp.commits)\n\t\tconst resp = await repoServices('getRepoFileData', prResp.data.head.sha)\n\t\tif (resp.ok === false) {\n\t\t\thandleError(resp)\n\t\t} else {\n\t\t\tsetInitRepoFileData(resp)\n\t\t}\n\t\tsetUserWorkingBranch(undefined)\n\t}\n\tsetIsDataRefreshing(false)\n})\n\norchestrator(saveContinue, async () => {\n\tsetSavingCommitsFlag(true)\n\tconst store = getAppStore()\n\tconst changes = getChanges()\n\tlet branch = store.userWorkingBranch\n\tlet resp\n\n\tif (!branch) {\n\t\tresp = await repoServices('createWorkingBranch')\n\t\tif (resp.ok === false) {\n\t\t\thandleError(resp)\n\t\t\treturn\n\t\t}\n\n\t\tbranch = resp.ref.split('refs/heads/').join('')\n\t\tsetUserWorkingBranch(branch)\n\t}\n\n\tresp = await repoServices('commitChanges', {\n\t\t...changes,\n\t\tbranchName: `refs/heads/${branch}`,\n\t})\n\tif (resp.ok === false) {\n\t\thandleError(resp)\n\t} else {\n\t\tupdateRepoFileData(resp.updatedFiles)\n\t\tsetPendingChanges(false)\n\t}\n\n\tsetSavingCommitsFlag(false)\n})\n\n\n\norchestrator(loadAllLocationData, async (message) => {\n\tconst { location } = message\n\tconst { loadedPRData, userWorkingBranch } = getAppStore()\n\tsetIsDataRefreshing(true)\n\n\tconst extraData = {\n\t\tlocationId: location.info.content.id,\n\t\trepoRef: loadedPRData ? loadedPRData.head.sha : userWorkingBranch || undefined\n\t}\n\tconst resp = await repoServices('loadAllLocationData', extraData)\n\tsetLocationData(resp, location)\n\tsetIsDataRefreshing(false)\n})","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { mutatorAction } from 'satcheljs'\nimport { getAppStore } from '../store/store'\n\nexport const setLocalization = mutatorAction(\n\t'setLocalization',\n\t(localization: any) => {\n\t\tconst store = getAppStore()\n\t\tif (localization) {\n\t\t\tstore.localization = localization\n\t\t}\n\t}\n)\n\nexport const setDefaultLanguage = mutatorAction(\n\t'setDefaultLanguage',\n\t(defaultLanguage: any) => {\n\t\tconst store = getAppStore()\n\t\tstore.defaultLanguage = defaultLanguage\n\t}\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { isEmpty } from 'lodash'\nimport { isRtlLang } from 'rtl-detect'\nimport { orchestrator } from 'satcheljs'\nimport { setAppLanguage } from '../actions/intlActions'\n//import configs from '../config'\nimport { setLocalization, setDefaultLanguage } from '../mutators/intlMutators'\nimport { getAppStore } from '../store/store'\n\norchestrator(setAppLanguage, async (message) => {\n\tconst state = getAppStore()\n\tlet localization: any = {}\n\tlet defaultLanguage: any = state.defaultLanguage\n\n\tconst configs = {\n\t\tlanguageKeys:\n\t\t\t'en-us,ko-kr,vi-vn,zh-cn,es-us,de-de,es-es,fi-fi,fr-fr,he-il,it-it,ja-jp,pt-pt,sv-se,th-th',\n\t\tdefaultLanguage: 'en-us',\n\t}\n\n\tif (isEmpty(defaultLanguage)) {\n\t\tdefaultLanguage = {\n\t\t\tlanguage: configs.defaultLanguage,\n\t\t\trtl: isRtlLang(configs.defaultLanguage),\n\t\t\t...await import(`../intl/${configs.defaultLanguage}.json`),\n\t\t}\n\n\t\tsetDefaultLanguage(defaultLanguage)\n\t}\n\n\ttry {\n\t\tlocalization = {\n\t\t\tlanguage: message.language,\n\t\t\trtl: isRtlLang(message.language),\n\t\t\t...await import(`../intl/${message.language}.json`),\n\t\t}\n\t} catch {\n\t\tlocalization = {\n\t\t\tlanguage: message.language,\n\t\t\trtl: isRtlLang(message.language),\n\t\t}\n\t}\n\n\tsetLocalization(localization)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { initializeIcons } from '@fluentui/react/lib/Icons'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './components/App'\nimport './orchestrators/authOrchestrators'\nimport './orchestrators/repoOrchestrators'\nimport './orchestrators/intlOrchestrators'\n\nfunction render() {\n\ttry {\n\t\tconst basePath = process.env.REACT_APP_BASE_PATH\n\t\tinitializeIcons()\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<Router basename={basePath}>\n\t\t\t\t\t<App />\n\t\t\t\t</Router>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} catch (err) {\n\t\tconsole.error('error rendering app', err)\n\t}\n}\n\nrender()\n"],"sourceRoot":""}